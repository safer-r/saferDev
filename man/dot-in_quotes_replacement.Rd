% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/intern_.in_quotes_replacement.R
\name{.in_quotes_replacement}
\alias{.in_quotes_replacement}
\title{.in_quotes_replacement}
\usage{
.in_quotes_replacement(
  string,
  pattern,
  no_regex_pattern,
  replacement,
  perl,
  lib_path,
  error_text
)
}
\arguments{
\item{string}{Single string.}

\item{pattern}{Single string indicating the pattern to detect. Warning : must be very simple pattern, like "\\(".}

\item{no_regex_pattern}{Single string of the pattern to detect but without escape characters or list, etc.}

\item{replacement}{Single string for pattern replacement. Is not regex.}

\item{perl}{Single logical value. Use Perl regex in pattern ?}

\item{lib_path}{Vector of characters specifying the absolute pathways of the directories containing the required packages for the function, if not in the default directories. Useful when R package are not installed in the default directories because of lack of admin rights.  More precisely, lib_path is passed through the new argument of .libPaths() so that the new library paths are unique(c(new, .Library.site, .Library)). Warning: .libPaths() is restored to the initial paths, after function execution. Ignored if NULL (default) or if the safer_check argument is FALSE: only the pathways specified by the current .libPaths() are used for package calling.}

\item{error_text}{Single character string used to add information in error messages returned by the function, notably if the function is inside other functions, which is practical for debugging. Example: error_text = " INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.". If NULL, converted into "".}
}
\value{
A list containing:
$string: The input string with all pattern replaced by the replacement pattern.
$pos: vector of the positions of the 1rst character of the replaced pattern. NULL if no replaced pattern. In that case, $string is identical to the input string.
}
\description{
Replace any pattern inside simple ou double quotes by another replacement pattern and get the position of replacements
}
\details{
- Warning : must be very simple pattern, like "\\(".
- Warning: requires saferDev::arg_check, saferDev:::.has_odd_number_of_quotes. In main safer functions, in the section "######## check of the required functions from the required packages" add these functions when checking for the presence of saferDev:::.in_quotes_replacement.
}
\examples{
\dontrun{ # Example that shouldn't be run because this is an internal function
source("https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R") ; .in_quotes_replacement(string = paste(deparse(test), collapse = ""), pattern = "\\\\)", no_regex_pattern = ")", replacement = " ", perl = TRUE, lib_path = NULL, error_text = " INSIDE P1::F1")
.in_quotes_replacement(string = 'paste0("IAGE((", paste0(1:3, collapse = " "), "A)B()")', pattern = "\\\\)", no_regex_pattern = ")", replacement = " ", perl = TRUE, lib_path = NULL, error_text = " INSIDE P1::F1")
}
# importFrom none
}
\author{
Gael Millot <gael.millot@pasteur.fr>
}
\keyword{internal}
