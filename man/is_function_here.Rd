% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/is_function_here.R
\name{is_function_here}
\alias{is_function_here}
\title{is_function_here}
\usage{
is_function_here(fun, safer_check = TRUE, lib_path = NULL, error_text = "")
}
\arguments{
\item{fun}{Character vector of the names of the required functions, preceded by the name of the package they belong to and a double or triple colon. Example: c("ggplot2::geom_point", "grid::gpar"). Warning: do not write "()" at the end of the function.}

\item{safer_check}{Single logical value. Perform some "safer" checks? If TRUE, checkings are performed before main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions and related packages effectively present in local R lybraries and 3) R classical operators (like "<-") not overwritten by another package because of the R scope. Must be set to FALSE if this fonction is used inside another "safer" function to avoid pointless multiple checkings.}

\item{lib_path}{Vector of characters specifying the absolute pathways of the directories containing the required packages for the function, if not in the default directories. Useful when R package are not installed in the default directories because of lack of admin rights.  More precisely, lib_path is passed through the new argument of .libPaths() so that the new library paths are unique(c(new, .Library.site, .Library)). Warning: .libPaths() is restored to the initial paths, after function execution. Ignored if NULL (default) or if the safer_check argument is FALSE: only the pathways specified by the current .libPaths() are used for package calling.}

\item{error_text}{Single character string used to add information in error messages returned by the function, notably if the function is inside other functions, which is practical for debugging. Example: error_text = " INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.". If NULL, converted into "".}
}
\value{
An error message if at least one of the checked packages is missing in lib_path, or if at least one of the checked functions is missing in the required package, nothing otherwise.
}
\description{
Check if required functions are present in installed packages. This controls modifications in of function names package versions.
}
\examples{
\dontrun{ # Example that return an error
is_function_here(fun = "ggplot2::notgood", error_text = " INSIDE P1::F1") # commented because this example returns an error
is_function_here(fun = c("ggplot2::geom_point", "grid::gpar"))
is_function_here(fun = "c")
}
is_function_here(fun = "base::c", error_text = " INSIDE P1::F1")

}
\seealso{
\code{\link{exists}} et \code{\link[methods]{findFunction}}
}
\author{
\href{gael.millot@pasteur.fr}{Gael Millot}

\href{yushi.han2000@gmail.com}{Yushi Han}

\href{wanghaiding442@gmail.com}{Haiding Wang}
}
