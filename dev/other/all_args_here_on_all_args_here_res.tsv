LINE_NB	FUN_NAME	FUN_ARGS	FUN_POS	DEF_ARGS	MISSING_ARG_NAMES	MISSING_ARGS	STATUS
26	as.list	as.list(x = base::match.call(definition = base::sys.function(which = base::sys.parent(n = 0)), call = base::sys.call(which = base::sys.parent(n = 0)), expand.dots = FALSE, envir = base::parent.frame(n = 2L)))	25	x, ...			GOOD
26	match.call	match.call(definition = base::sys.function(which = base::sys.parent(n = 0)), call = base::sys.call(which = base::sys.parent(n = 0)), expand.dots = FALSE, envir = base::parent.frame(n = 2L))	43	definition = sys.function(sys.parent()), call = sys.call(sys.parent()), expand.dots = TRUE, envir = parent.frame(2L)			GOOD
26	sys.function	sys.function(which = base::sys.parent(n = 0))	73	which = 0L			GOOD
26	sys.parent	sys.parent(n = 0)	100	n = 1L			GOOD
26	sys.call	sys.call(which = base::sys.parent(n = 0))	133	which = 0L			GOOD
26	sys.parent	sys.parent(n = 0)	156	n = 1L			GOOD
26	parent.frame	parent.frame(n = 2L)	211	n = 1			GOOD
27	paste0	paste0(tempo_settings[[1]], "()", collapse = NULL, recycle0 = FALSE)	24	..., collapse = NULL, recycle0 = FALSE			GOOD
36	names	names(x = base::formals(fun = base::sys.function(which = base::sys.parent(n = 2)), envir = base::parent.frame(n = 1)))	20	x			GOOD
36	formals	formals(fun = base::sys.function(which = base::sys.parent(n = 2)), envir = base::parent.frame(n = 1))	36	fun = sys.function(sys.parent()), envir = parent.frame()			GOOD
36	sys.function	sys.function(which = base::sys.parent(n = 2))	56	which = 0L			GOOD
36	sys.parent	sys.parent(n = 2)	83	n = 1L			GOOD
36	parent.frame	parent.frame(n = 1)	117	n = 1			GOOD
40	all	all(safer_check %in% base::c(TRUE, FALSE), na.rm = FALSE)	14	..., na.rm = FALSE			GOOD
40	c	c(TRUE, FALSE)	41	...			
40	length	length(x = safer_check)	80	x			GOOD
40	all	all(base::is.logical(x = safer_check), na.rm = TRUE)	117	..., na.rm = FALSE			GOOD
40	is.logical	is.logical(x = safer_check)	127	x			GOOD
41	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nsafer_check ARGUMENT MUST BE EITHER TRUE OR FALSE. HER IT IS:\n", base::paste0(safer_check, collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
41	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
41	is.null	is.null(x = package_name)	81	x			GOOD
41	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
41	paste0	paste0(safer_check, collapse = "\n", recycle0 = FALSE)	286	..., collapse = NULL, recycle0 = FALSE			GOOD
42	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
42	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
45	.base_op_check	.base_op_check( external_function_name = function_name,  external_package_name = package_name )	12	external_function_name, external_package_name			GOOD
55	is.null	is.null(x = lib_path)	13	x			GOOD
56	all	all(base::typeof(x = lib_path) == "character", na.rm = FALSE)	13	..., na.rm = FALSE			GOOD
56	typeof	typeof(x = lib_path)	23	x			GOOD
57	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT MUST BE A VECTOR OF CHARACTERS:\n", base::paste(lib_path, sep = " ", collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
57	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
57	is.null	is.null(x = package_name)	81	x			GOOD
57	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
57	paste	paste(lib_path, sep = " ", collapse = "\n", recycle0 = FALSE)	306	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
58	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
58	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
59	all	all(base::dir.exists(paths = lib_path), na.rm = TRUE)	19	..., na.rm = FALSE			GOOD
59	dir.exists	dir.exists(paths = lib_path)	29	paths			GOOD
60	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS:\n", base::paste(lib_path, sep = " ", collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
60	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
60	is.null	is.null(x = package_name)	81	x			GOOD
60	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
60	paste	paste(lib_path, sep = " ", collapse = "\n", recycle0 = FALSE)	291	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
61	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
61	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
63	.libPaths	.libPaths(new = base::sub(x = lib_path, pattern = "/$|\\\\$", replacement = "", ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE), include.site = TRUE)	8	new, include.site = TRUE			GOOD
63	sub	sub(x = lib_path, pattern = "/$|\\\\$", replacement = "", ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	30	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
64	.libPaths	.libPaths(new = , include.site = TRUE)	20	new, include.site = TRUE			GOOD
67	.libPaths	.libPaths(new = , include.site = TRUE)	20	new, include.site = TRUE			GOOD
73	.pack_and_function_check	.pack_and_function_check( fun = base::c( "saferDev::arg_check", "saferDev::is_function_here",  "saferDev:::.functions_detect",  "saferDev:::.in_quotes_replacement",  "saferDev:::.fun_args_pos",  "saferDev:::.extract_all_fun_names",  "saferDev:::.in_parenthesis_replacement",  "saferDev:::.all_args_here_fill" ), lib_path = lib_path,  external_function_name = function_name, external_package_name = package_name )	12	fun, lib_path, external_function_name, external_package_name			GOOD
74	c	c( "saferDev::arg_check", "saferDev::is_function_here",  "saferDev:::.functions_detect",  "saferDev:::.in_quotes_replacement",  "saferDev:::.fun_args_pos",  "saferDev:::.extract_all_fun_names",  "saferDev:::.in_parenthesis_replacement",  "saferDev:::.all_args_here_fill" )	13	...			
96	c	c( "x" )	22	...			
99	eval	eval(expr = base::parse(text = base::paste0("base::c(base::missing(", base::paste0(mandat_args, collapse = "),base::missing(", recycle0 = FALSE), "))", collapse = NULL, recycle0 = FALSE), file = "", n = NULL, prompt = "?", keep.source = base::getOption(x = "keep.source", default = NULL), srcfile = NULL, encoding = "unknown"), envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL))	16	expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv()			GOOD
99	parse	parse(text = base::paste0("base::c(base::missing(", base::paste0(mandat_args, collapse = "),base::missing(", recycle0 = FALSE), "))", collapse = NULL, recycle0 = FALSE), file = "", n = NULL, prompt = "?", keep.source = base::getOption(x = "keep.source", default = NULL), srcfile = NULL, encoding = "unknown")	34	file = "", n = NULL, text = NULL, prompt = "?", keep.source = getOption("keep.source"), srcfile = NULL, encoding = "unknown"			GOOD
99	paste0	paste0("base::c(base::missing(", base::paste0(mandat_args, collapse = "),base::missing(", recycle0 = FALSE), "))", collapse = NULL, recycle0 = FALSE)	53	..., collapse = NULL, recycle0 = FALSE			GOOD
99	c	NOT_CONSIDERED	67				
99	missing	NOT_CONSIDERED	75				
99	paste0	paste0(mandat_args, collapse = "),base::missing(", recycle0 = FALSE)	92	..., collapse = NULL, recycle0 = FALSE			GOOD
99	missing	NOT_CONSIDERED	132				
99	getOption	getOption(x = "keep.source", default = NULL)	259	x, default = NULL			GOOD
99	environment	environment(fun = NULL)	358	fun = NULL			GOOD
99	environment	environment(fun = NULL)	398	fun = NULL			GOOD
100	any	any(tempo, na.rm = FALSE)	10	..., na.rm = FALSE			GOOD
101	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nFOLLOWING ARGUMENT", base::ifelse(test = base::sum(tempo, na.rm = TRUE) > 1, yes = "S HAVE", no = " HAS"), " NO DEFAULT VALUE AND REQUIRE ONE:\n", base::paste0(mandat_args[tempo], collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
101	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
101	is.null	is.null(x = package_name)	81	x			GOOD
101	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
101	ifelse	ifelse(test = base::sum(tempo, na.rm = TRUE) > 1, yes = "S HAVE", no = " HAS")	241	test, yes, no			GOOD
101	sum	sum(tempo, na.rm = TRUE)	261	..., na.rm = FALSE			GOOD
101	paste0	paste0(mandat_args[tempo], collapse = "\n", recycle0 = FALSE)	367	..., collapse = NULL, recycle0 = FALSE			GOOD
102	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
102	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
110	expression	expression(argum_check <- base::c(argum_check, tempo$problem) , text_check <- base::c(text_check, tempo$text) , checked_arg_names <- base::c(checked_arg_names, tempo$object.name))	13	...			
110	c	c(argum_check, tempo$problem)	45	...			
110	c	c(text_check, tempo$text)	97	...			
110	c	c(checked_arg_names, tempo$object.name)	152	...			
112	arg_check	arg_check(data = x, class = "function", typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = TRUE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = function_name, pack_name = NULL, safer_check = FALSE)	20	data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE			GOOD
112	eval	eval(expr = ee, envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL))	360	expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv()			GOOD
112	environment	environment(fun = NULL)	390	fun = NULL			GOOD
112	environment	environment(fun = NULL)	430	fun = NULL			GOOD
113	arg_check	arg_check(data = export, class = "vector", typeof = "logical", mode = NULL, length = 1, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = function_name, pack_name = NULL, safer_check = FALSE)	20	data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE			GOOD
113	eval	eval(expr = ee, envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL))	366	expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv()			GOOD
113	environment	environment(fun = NULL)	396	fun = NULL			GOOD
113	environment	environment(fun = NULL)	436	fun = NULL			GOOD
114	arg_check	arg_check(data = path_out, class = "vector", typeof = "character", mode = NULL, length = 1, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = function_name, pack_name = NULL, safer_check = FALSE)	20	data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE			GOOD
114	eval	eval(expr = ee, envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL))	370	expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv()			GOOD
114	environment	environment(fun = NULL)	400	fun = NULL			GOOD
114	environment	environment(fun = NULL)	440	fun = NULL			GOOD
115	arg_check	arg_check(data = df_name, class = "vector", typeof = "character", mode = NULL, length = 1, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = function_name, pack_name = NULL, safer_check = FALSE)	20	data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE			GOOD
115	eval	eval(expr = ee, envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL))	369	expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv()			GOOD
115	environment	environment(fun = NULL)	399	fun = NULL			GOOD
115	environment	environment(fun = NULL)	439	fun = NULL			GOOD
116	arg_check	arg_check(data = overwrite, class = "vector", typeof = "logical", mode = NULL, length = 1, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = function_name, pack_name = NULL, safer_check = FALSE)	20	data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE			GOOD
116	eval	eval(expr = ee, envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL))	369	expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv()			GOOD
116	environment	environment(fun = NULL)	399	fun = NULL			GOOD
116	environment	environment(fun = NULL)	439	fun = NULL			GOOD
119	is.null	is.null(x = argum_check)	13	x			GOOD
120	any	any(argum_check, na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
121	stop	stop(base::paste0("\n\n================\n\n", base::paste(text_check[argum_check], sep = " ", collapse = "\n", recycle0 = FALSE), "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
121	paste0	paste0("\n\n================\n\n", base::paste(text_check[argum_check], sep = " ", collapse = "\n", recycle0 = FALSE), "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
121	paste	paste(text_check[argum_check], sep = " ", collapse = "\n", recycle0 = FALSE)	59	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
130	length	length(x = arg_user_setting)	10	x			GOOD
131	suppressWarnings	suppressWarnings(expr = base::sapply(X = base::lapply(X = arg_user_setting, FUN = function(x){base::is.na(x = x)}), FUN = function(x){base::any(x = x, na.rm = FALSE)}, simplify = TRUE, USE.NAMES = TRUE), classes = "warning")	20	expr, classes = "warning"			GOOD
131	sapply	sapply(X = base::lapply(X = arg_user_setting, FUN = function(x){base::is.na(x = x)}), FUN = function(x){base::any(x = x, na.rm = FALSE)}, simplify = TRUE, USE.NAMES = TRUE)	50	X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE			GOOD
131	lapply	lapply(X = arg_user_setting, FUN = function(x){base::is.na(x = x)})	67	X, FUN, ...			GOOD
131	is.na	is.na(x = x)	120	x			GOOD
131	any	any(x = x, na.rm = FALSE)	160	..., na.rm = FALSE			GOOD
131	lapply	lapply(X = arg_user_setting, FUN = function(x){base::length(x = x)})	253	X, FUN, ...			GOOD
131	length	length(x = x)	306	x			GOOD
132	any	any(tempo_log, na.rm = FALSE)	10	..., na.rm = FALSE			GOOD
133	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS", no = "THIS ARGUMENT"), " CANNOT JUST BE NA:", base::paste0(arg_names[tempo_log], collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
133	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
133	is.null	is.null(x = package_name)	81	x			GOOD
133	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
133	ifelse	ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS", no = "THIS ARGUMENT")	223	test, yes, no			GOOD
133	sum	sum(tempo_log, na.rm = TRUE)	243	..., na.rm = FALSE			GOOD
133	paste0	paste0(arg_names[tempo_log], collapse = "\n", recycle0 = FALSE)	354	..., collapse = NULL, recycle0 = FALSE			GOOD
134	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
134	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
140	c	c( "x",  "export",  "path_out",  "df_name",  "overwrite",   "safer_check" )	19	...			
149	sapply	sapply( X = base::lapply(X = tempo_arg, FUN = function(x){base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)}), FUN = function(x){base::is.null(x = x)}, simplify = TRUE, USE.NAMES = TRUE)	20	X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE			GOOD
149	lapply	lapply(X = tempo_arg, FUN = function(x){base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)})	38	X, FUN, ...			GOOD
149	get	get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)	84	x, pos = -1L, envir = as.environment(pos), mode = "any", inherits = TRUE			GOOD
149	parent.frame	parent.frame(n = 2)	120	n = 1			GOOD
149	is.null	is.null(x = x)	200	x			GOOD
150	any	any(tempo_log, na.rm = FALSE)	10	..., na.rm = FALSE			GOOD
151	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS\n", no = "THIS ARGUMENT\n"), base::paste0(tempo_arg[tempo_log], collapse = "\n", recycle0 = FALSE),"\nCANNOT BE NULL", collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
151	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
151	is.null	is.null(x = package_name)	81	x			GOOD
151	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
151	ifelse	ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS\n", no = "THIS ARGUMENT\n")	223	test, yes, no			GOOD
151	sum	sum(tempo_log, na.rm = TRUE)	243	..., na.rm = FALSE			GOOD
151	paste0	paste0(tempo_arg[tempo_log], collapse = "\n", recycle0 = FALSE)	335	..., collapse = NULL, recycle0 = FALSE			GOOD
152	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
152	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
157	c	c( "path_out",  "df_name", "lib_path" )	19	...			
162	sapply	sapply(X = base::lapply(X = tempo_arg, FUN = function(x){base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)}), FUN = function(x){if(base::is.null(x = x)){base::return(TRUE)}else{base::all(base::mode(x = x) == "character", na.rm = TRUE)}}, simplify = TRUE, USE.NAMES = TRUE)	22	X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE			GOOD
162	lapply	lapply(X = tempo_arg, FUN = function(x){base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)})	39	X, FUN, ...			GOOD
162	get	get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)	85	x, pos = -1L, envir = as.environment(pos), mode = "any", inherits = TRUE			GOOD
162	parent.frame	parent.frame(n = 2)	121	n = 1			GOOD
162	is.null	is.null(x = x)	204	x			GOOD
162	return	return(TRUE)	226	NO_ARGS			
162	all	all(base::mode(x = x) == "character", na.rm = TRUE)	250	..., na.rm = FALSE			GOOD
162	mode	mode(x = x)	260	x			GOOD
163	any	any(tempo_log, na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
164	paste0	paste0("INTERNAL ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS ARE", no = "THIS ARGUMENT IS"), " NOT MODE \"character\":\n", base::paste0(tempo_arg[tempo_log], collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
164	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	70	test, yes, no			GOOD
164	is.null	is.null(x = package_name)	90	x			GOOD
164	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	138	..., collapse = NULL, recycle0 = FALSE			GOOD
164	ifelse	ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS ARE", no = "THIS ARGUMENT IS")	232	test, yes, no			GOOD
164	sum	sum(tempo_log, na.rm = TRUE)	252	..., na.rm = FALSE			GOOD
164	paste0	paste0(tempo_arg[tempo_log], collapse = "\n", recycle0 = FALSE)	377	..., collapse = NULL, recycle0 = FALSE			GOOD
165	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
165	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
167	sapply	sapply(X = base::lapply(X = tempo_arg, FUN = function(x){base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)}), FUN = function(x){base::any(x == "", na.rm = FALSE)}, simplify = TRUE, USE.NAMES = TRUE)	20	X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE			GOOD
167	lapply	lapply(X = tempo_arg, FUN = function(x){base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)})	37	X, FUN, ...			GOOD
167	get	get(x = x, pos = -1L, envir = base::parent.frame(n = 2), mode = "any", inherits = FALSE)	83	x, pos = -1L, envir = as.environment(pos), mode = "any", inherits = TRUE			GOOD
167	parent.frame	parent.frame(n = 2)	119	n = 1			GOOD
167	any	any(x == "", na.rm = FALSE)	199	..., na.rm = FALSE			GOOD
168	any	any(tempo_log, na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
169	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS\n", no = "THIS ARGUMENT\n"), base::paste0(tempo_arg[tempo_log], collapse = "\n", recycle0 = FALSE),"\nCANNOT CONTAIN \"\"", collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
169	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
169	is.null	is.null(x = package_name)	81	x			GOOD
169	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
169	ifelse	ifelse(test = base::sum(tempo_log, na.rm = TRUE) > 1, yes = "THESE ARGUMENTS\n", no = "THIS ARGUMENT\n")	223	test, yes, no			GOOD
169	sum	sum(tempo_log, na.rm = TRUE)	243	..., na.rm = FALSE			GOOD
169	paste0	paste0(tempo_arg[tempo_log], collapse = "\n", recycle0 = FALSE)	335	..., collapse = NULL, recycle0 = FALSE			GOOD
170	stop	stop(base::paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
170	paste0	paste0("\n\n================\n\n", tempo_cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
180	c	c("NOT_CONSIDERED")	25	...			
190	options	options()	29	...			
191	options	options(warning.length = 8170)	7	...			
197	is.null	is.null(x = lib_path)	13	x			GOOD
198	all	all(base::dir.exists(paths = lib_path), na.rm = TRUE)	13	..., na.rm = FALSE			GOOD
198	dir.exists	dir.exists(paths = lib_path)	23	paths			GOOD
199	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS:\n", base::paste(lib_path, sep = " ", collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
199	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
199	is.null	is.null(x = package_name)	81	x			GOOD
199	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
199	paste	paste(lib_path, sep = " ", collapse = "\n", recycle0 = FALSE)	291	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
200	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
200	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
204	all	all(base::dir.exists(paths = path_out), na.rm = TRUE)	13	..., na.rm = FALSE			GOOD
204	dir.exists	dir.exists(paths = path_out)	23	paths			GOOD
205	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nDIRECTORY PATH INDICATED IN THE path_out ARGUMENT DOES NOT EXISTS:\n", base::paste(path_out, sep = " ", collapse = "\n", recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
205	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
205	is.null	is.null(x = package_name)	81	x			GOOD
205	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
205	paste	paste(path_out, sep = " ", collapse = "\n", recycle0 = FALSE)	291	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
206	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
206	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
209	grepl	grepl(x = path_out, pattern = "/$", ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	10	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
210	sub	sub(pattern = "/$", replacement = "", x = path_out, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	19	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
211	grepl	grepl(x = path_out, pattern = "\\\\$", ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	16	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
212	sub	sub(pattern = "\\\\$", replacement = "", x = path_out, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	19	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
215	dir.exists	dir.exists(paths = path_out)	13	paths			GOOD
216	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nDIRECTORY PATH INDICATED IN THE path_out ARGUMENT DOES NOT EXISTS:\n", path_out, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
216	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
216	is.null	is.null(x = package_name)	81	x			GOOD
216	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
217	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
217	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
220	file.exists	file.exists(base::paste0(path_out, "/", df_name, collapse = NULL, recycle0 = FALSE))	10	...			
220	paste0	paste0(path_out, "/", df_name, collapse = NULL, recycle0 = FALSE)	28	..., collapse = NULL, recycle0 = FALSE			GOOD
221	paste0	paste0("ERROR IN ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\nFILE NAME ALREADY EXISTS AT THE INDICATED PATH:\n", base::paste0(path_out, "/", df_name, collapse = NULL, recycle0 = FALSE), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
221	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	61	test, yes, no			GOOD
221	is.null	is.null(x = package_name)	81	x			GOOD
221	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	129	..., collapse = NULL, recycle0 = FALSE			GOOD
221	paste0	paste0(path_out, "/", df_name, collapse = NULL, recycle0 = FALSE)	272	..., collapse = NULL, recycle0 = FALSE			GOOD
222	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
222	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
232	deparse	deparse(expr = arg_user_setting$x, width.cutoff = 60L, backtick = FALSE, control = base::c("keepNA", "keepInteger", "niceNames", "showAttributes"), nlines = -1L)	29	expr, width.cutoff = 60L, backtick = mode(expr) %in% c("call", "expression", "(", "function"), control = c("keepNA", "keepInteger", "niceNames", "showAttributes"), nlines = -1L			GOOD
232	c	c("keepNA", "keepInteger", "niceNames", "showAttributes")	118	...			
233	paste0	paste0(path_out, "/", df_name, collapse = NULL, recycle0 = FALSE)	19	..., collapse = NULL, recycle0 = FALSE			GOOD
234	.functions_detect	.functions_detect( x = x,  arg_user_setting = arg_user_setting,  function_name = function_name,  package_name = package_name )	19	x, arg_user_setting, function_name, package_name			GOOD
245	paste	paste(out$code, collapse = " ", recycle0 = FALSE, sep = " ")	21	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
246	grepl	grepl(x = fun_1_line, pattern = reserved_words, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	10	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
248	paste0	paste0("(", warn_count,") THE RESERVED WORD \"", base::paste(reserved_words, collapse = " ", recycle0 = FALSE), "\" HAS BEEN DETECTED IN THE CODE OF THE INPUT FUNCTION\nWHICH COULD HAMPER THE ACCURACY OF THE OUTPUT TABLE", collapse = NULL, recycle0 = FALSE)	21	..., collapse = NULL, recycle0 = FALSE			GOOD
248	paste	NOT_CONSIDERED	76				
249	paste0	paste0(base::ifelse(test = base::is.null(x = warn), yes = tempo_warn, no = base::paste0(warn, "\n\n", tempo_warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	15	..., collapse = NULL, recycle0 = FALSE			GOOD
249	ifelse	ifelse(test = base::is.null(x = warn), yes = tempo_warn, no = base::paste0(warn, "\n\n", tempo_warn, collapse = NULL, recycle0 = FALSE))	28	test, yes, no			GOOD
249	is.null	is.null(x = warn)	48	x			GOOD
249	paste0	paste0(warn, "\n\n", tempo_warn, collapse = NULL, recycle0 = FALSE)	96	..., collapse = NULL, recycle0 = FALSE			GOOD
252	cumsum	cumsum(x = base::nchar(x = out$code, type = "chars", allowNA = FALSE, keepNA = NA) + 1)	30	x			GOOD
252	nchar	nchar(x = out$code, type = "chars", allowNA = FALSE, keepNA = NA)	47	x, type = "chars", allowNA = FALSE, keepNA = NA			GOOD
253	c	c(0, cum_nchar_code_line[-base::length(x = cum_nchar_code_line)])	30	...			
253	length	length(x = cum_nchar_code_line)	62	x			GOOD
257	.in_quotes_replacement	.in_quotes_replacement(string = fun_1_line, pattern = "\\)", no_regex_pattern = ")", replacement = " ", perl = TRUE, function_name = function_name, package_name = package_name)	21	string, pattern, no_regex_pattern, replacement, perl, function_name, package_name			GOOD
262	.in_quotes_replacement	.in_quotes_replacement(string = fun_1_line_replace, pattern = "\\(", no_regex_pattern = "(", replacement = " ", perl = TRUE, function_name = function_name, package_name = package_name)	21	string, pattern, no_regex_pattern, replacement, perl, function_name, package_name			GOOD
264	sort	sort(x = base::c(pos_rep, tempo$pos), decreasing = FALSE)	18	x, decreasing = FALSE, ...			GOOD
264	c	c(pos_rep, tempo$pos)	33	...			
269	lapply	lapply(X = fun_names, FUN = function(x){base::lapply(X = x, FUN = function(y){NULL})})	40	X, FUN, ...			GOOD
269	lapply	lapply(X = x, FUN = function(y){NULL})	86	X, FUN, ...			GOOD
271	length	length(x = fun_names)	19	x			GOOD
272	as.integer	as.integer(x = base::sub(pattern = "^c", replacement = "", x = base::names(x = fun_names)[i1], ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE))	28	x, ...			GOOD
272	sub	sub(pattern = "^c", replacement = "", x = base::names(x = fun_names)[i1], ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	49	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
272	names	names(x = fun_names)	97	x			GOOD
273	which	which(x = code_line_nb %in% tempo_pos_in_code, arr.ind = FALSE, useNames = TRUE)	22	x, arr.ind = FALSE, useNames = TRUE			GOOD
274	length	length(x = fun_names[[i1]])	19	x			GOOD
276	nchar	nchar(x = fun_names[[i1]][i2], type = "chars", allowNA = FALSE, keepNA = NA)	39	x, type = "chars", allowNA = FALSE, keepNA = NA			GOOD
277	substr	substr(x = fun_1_line_replace, start = fun_pos_start, stop = fun_pos_stop)	20	x, start, stop			GOOD
279	paste0	paste0("INTERNAL ERROR 1 IN ", function_name, " OF THE ", package_name, " PACKAGE\ntempo_fun MUST BE IDENTICAL TO fun_names[[i1]][i2]\n\ntempo_fun: ", tempo_fun, "\n\nfun_names[[i1]][i2]: ", fun_names[[i1]][i2], "\n\ni1: ", i1, "\n\ni2: ", i2, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
280	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
280	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
280	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
280	is.null	is.null(x = warn)	118	x			GOOD
280	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
280	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
282	substr	substr(x = fun_1_line_replace, start = fun_pos_stop + 1, stop = base::nchar(x = fun_1_line_replace, type = "chars", allowNA = FALSE, keepNA = NA))	26	x, start, stop			GOOD
282	nchar	nchar(x = fun_1_line_replace, type = "chars", allowNA = FALSE, keepNA = NA)	96	x, type = "chars", allowNA = FALSE, keepNA = NA			GOOD
283	grepl	grepl(x = tempo_str_after, pattern = "^[\\s\\r\\n]*\\(", ignore.case = FALSE, perl = TRUE, fixed = FALSE, useBytes = FALSE)	10	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
284	.fun_args_pos	.fun_args_pos(text = fun_1_line_replace, pattern = base::paste0(fun_names[[i1]][i2], "[\\s\\r\\n]*\\(", collapse = NULL, recycle0 = FALSE), function_name = function_name, package_name = package_name)	25	text, pattern, function_name, package_name			GOOD
284	paste0	paste0(fun_names[[i1]][i2], "[\\s\\r\\n]*\\(", collapse = NULL, recycle0 = FALSE)	82	..., collapse = NULL, recycle0 = FALSE			GOOD
285	substr	substr(x = fun_1_line_replace, start = 1, stop = fun_pos_start - 1)	27	x, start, stop			GOOD
286	grepl	grepl(x = tempo_str_before, pattern = "\\$ *$", ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	20	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
291	substr	substr(x = fun_1_line_replace, start = 1, stop = fun_pos_start - 1)	7	x, start, stop			GOOD
291	paste	paste(base::rep(x = " ", fun_pos_start - 1), collapse = "", recycle0 = FALSE, sep = " ")	84	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
291	rep	rep(x = " ", fun_pos_start - 1)	96	x, ...			GOOD
293	substr	substr(x = fun_1_line, start = tempo_pos$begin_fun, stop = tempo_pos$end)	40	x, start, stop			GOOD
294	substr	substr(x = fun_1_line, start = tempo_pos$begin + 1, stop = tempo_pos$end - 1)	31	x, start, stop			GOOD
295	is.null	is.null(x = tempo_pos$middle_bracket_pos)	13	x			GOOD
296	unlist	unlist(x = tempo_pos$middle_bracket_pos, recursive = TRUE, use.names = TRUE)	52	x, recursive = TRUE, use.names = TRUE			GOOD
298	substr	substr(x = fun_1_line_replace, start = 1, stop = tempo_pos$begin - 1)	7	x, start, stop			GOOD
298	paste	paste(base::rep(x = " ", tempo_pos$begin - 1), collapse = "", recycle0 = FALSE, sep = " ")	86	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
298	rep	rep(x = " ", tempo_pos$begin - 1)	98	x, ...			GOOD
308	lapply	lapply(X = fun_names, FUN = function(x){base::lapply(X = x, FUN = function(y){NULL})})	34	X, FUN, ...			GOOD
308	lapply	lapply(X = x, FUN = function(y){NULL})	80	X, FUN, ...			GOOD
309	length	length(x = fun_names)	19	x			GOOD
310	length	length(x = fun_names[[i1]])	19	x			GOOD
311	paste0	paste0(fun_names[[i1]][i2], "[\\s\\r\\n]*\\(", collapse = NULL, recycle0 = FALSE)	19	..., collapse = NULL, recycle0 = FALSE			GOOD
313	grepl	grepl(x = arg_string_for_col3[[i1]][i2], pattern = pattern2, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	10	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
315	.in_quotes_replacement	.in_quotes_replacement(string = arg_string_for_col3[[i1]][i2], pattern = "\\(", no_regex_pattern = "(", replacement = " ", perl = TRUE, function_name = function_name, package_name = package_name)	22	string, pattern, no_regex_pattern, replacement, perl, function_name, package_name			GOOD
316	.in_quotes_replacement	.in_quotes_replacement(string =tempo1$string, pattern = "\\)", no_regex_pattern = ")", replacement = " ", perl = TRUE, function_name = function_name, package_name = package_name)	22	string, pattern, no_regex_pattern, replacement, perl, function_name, package_name			GOOD
317	.fun_args_pos	.fun_args_pos(text = tempo2$string, pattern = pattern2, function_name = function_name, package_name = package_name)	25	text, pattern, function_name, package_name			GOOD
318	is.null	is.null(x = tempo_pos$middle_bracket_pos)	13	x			GOOD
319	unlist	unlist(x = tempo_pos$middle_bracket_pos, recursive = TRUE, use.names = TRUE)	46	x, recursive = TRUE, use.names = TRUE			GOOD
327	as.vector	as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE), mode = "any")	23	x, mode = "any"			GOOD
327	unlist	unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE)	43	x, recursive = TRUE, use.names = TRUE			GOOD
327	mapply	mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE)	60	FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE			GOOD
327	rep	rep(x = y, base::length(x = x))	94	x, ...			GOOD
327	length	length(x = x)	111	x			GOOD
328	as.vector	as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE), mode = "any")	15	x, mode = "any"			GOOD
328	unlist	unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE)	35	x, recursive = TRUE, use.names = TRUE			GOOD
328	mapply	mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE)	52	FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE			GOOD
328	rep	rep(x = y, base::length(x = x))	86	x, ...			GOOD
328	length	length(x = x)	103	x			GOOD
329	as.vector	as.vector(x = base::unlist(x = fun_names, recursive = TRUE, use.names = TRUE), mode = "any")	15	x, mode = "any"			GOOD
329	unlist	unlist(x = fun_names, recursive = TRUE, use.names = TRUE)	35	x, recursive = TRUE, use.names = TRUE			GOOD
330	as.vector	as.vector(x = base::unlist(x = arg_string_for_col3, recursive = TRUE, use.names = TRUE), mode = "any")	15	x, mode = "any"			GOOD
330	unlist	unlist(x = arg_string_for_col3, recursive = TRUE, use.names = TRUE)	35	x, recursive = TRUE, use.names = TRUE			GOOD
331	as.vector	as.vector(x = base::unlist(x = fun_names_pos, recursive = TRUE, use.names = TRUE), mode = "any")	15	x, mode = "any"			GOOD
331	unlist	unlist(x = fun_names_pos, recursive = TRUE, use.names = TRUE)	35	x, recursive = TRUE, use.names = TRUE			GOOD
332	do.call	do.call(what = base::c, args = mid_bracket_pos_in_col3, quote = FALSE, envir = base::parent.frame(n = 1))	25	what, args, quote = FALSE, envir = parent.frame()			GOOD
332	parent.frame	parent.frame(n = 1)	110	n = 1			GOOD
333	lapply	lapply(X = middle_bracket, FUN = function(x){if( ! base::is.null(x = x)){x[base::seq(1, base::length(x = x), by = 2)]}else{NULL}})	38	X, FUN, ...			GOOD
333	is.null	is.null(x = x)	95	x			GOOD
333	seq	seq(1, base::length(x = x), by = 2)	119	...			
333	length	length(x = x)	132	x			GOOD
334	lapply	lapply(X = middle_bracket, FUN = function(x){if( ! base::is.null(x = x)){x[base::seq(2, base::length(x = x), by = 2)]}else{NULL}})	39	X, FUN, ...			GOOD
334	is.null	is.null(x = x)	96	x			GOOD
334	seq	seq(2, base::length(x = x), by = 2)	120	...			
334	length	length(x = x)	133	x			GOOD
335	length	length(x = col1)	14	x			GOOD
335	length	length(x = col2)	40	x			GOOD
335	length	length(x = col1)	65	x			GOOD
335	length	length(x = col3)	91	x			GOOD
335	length	length(x = col1)	116	x			GOOD
335	length	length(x = col4)	142	x			GOOD
335	length	length(x = col1)	167	x			GOOD
335	length	length(x = code_for_col)	193	x			GOOD
335	length	length(x = col1)	226	x			GOOD
335	length	length(x = middle_bracket)	252	x			GOOD
336	paste0	paste0("INTERNAL ERROR 2 IN ", function_name, " OF THE ", package_name, " PACKAGE\nLENGTHS OF col1 (", base::length(x = col1), "), col2 (", base::length(x = col2), "), col3 (", base::length(x = col3), "), col4 (", base::length(x = col4), "), code_for_col (", base::length(x = code_for_col), "), AND middle_bracket (", base::length(x = middle_bracket), "), SHOULD BE EQUAL\n", collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
336	col1	NOT_CONSIDERED	114				
336	length	length(x = col1)	129	x			GOOD
336	col2	NOT_CONSIDERED	151				
336	length	length(x = col2)	166	x			GOOD
336	col3	NOT_CONSIDERED	188				
336	length	length(x = col3)	203	x			GOOD
336	col4	NOT_CONSIDERED	225				
336	length	length(x = col4)	240	x			GOOD
336	code_for_col	NOT_CONSIDERED	262				
336	length	length(x = code_for_col)	285	x			GOOD
336	middle_bracket	NOT_CONSIDERED	319				
336	length	length(x = middle_bracket)	344	x			GOOD
337	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
337	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
337	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
337	is.null	is.null(x = warn)	118	x			GOOD
337	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
337	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
339	as.vector	as.vector(x = base::unlist(x = base::mapply( FUN = function(x, y){ if(y != ""){ if(base::grepl(x = y, pattern = base::paste0("^", x, "[\\s\\r\\n]*\\(.*\\)$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = TRUE, fixed = FALSE, useBytes = FALSE) | base::grepl(x = y, pattern = base::paste0("^", reserved_words, "$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)){ base::return(FALSE) }else{ base::return(TRUE)  } }else{ base::return(FALSE) } },  x = col2,  y = col3, MoreArgs = NULL,  SIMPLIFY = TRUE,  USE.NAMES = TRUE ), recursive = TRUE, use.names = TRUE), mode = "any")	20	x, mode = "any"			GOOD
339	unlist	unlist(x = base::mapply( FUN = function(x, y){ if(y != ""){ if(base::grepl(x = y, pattern = base::paste0("^", x, "[\\s\\r\\n]*\\(.*\\)$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = TRUE, fixed = FALSE, useBytes = FALSE) | base::grepl(x = y, pattern = base::paste0("^", reserved_words, "$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)){ base::return(FALSE) }else{ base::return(TRUE)  } }else{ base::return(FALSE) } },  x = col2,  y = col3, MoreArgs = NULL,  SIMPLIFY = TRUE,  USE.NAMES = TRUE ), recursive = TRUE, use.names = TRUE)	40	x, recursive = TRUE, use.names = TRUE			GOOD
339	mapply	mapply( FUN = function(x, y){ if(y != ""){ if(base::grepl(x = y, pattern = base::paste0("^", x, "[\\s\\r\\n]*\\(.*\\)$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = TRUE, fixed = FALSE, useBytes = FALSE) | base::grepl(x = y, pattern = base::paste0("^", reserved_words, "$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)){ base::return(FALSE) }else{ base::return(TRUE)  } }else{ base::return(FALSE) } },  x = col2,  y = col3, MoreArgs = NULL,  SIMPLIFY = TRUE,  USE.NAMES = TRUE )	57	FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE			GOOD
342	grepl	grepl(x = y, pattern = base::paste0("^", x, "[\\s\\r\\n]*\\(.*\\)$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = TRUE, fixed = FALSE, useBytes = FALSE)	10	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
342	paste0	paste0("^", x, "[\\s\\r\\n]*\\(.*\\)$", collapse = NULL, recycle0 = FALSE)	39	..., collapse = NULL, recycle0 = FALSE			GOOD
342	grepl	grepl(x = y, pattern = base::paste0("^", reserved_words, "$", collapse = NULL, recycle0 = FALSE), ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	190	pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
342	paste0	paste0("^", reserved_words, "$", collapse = NULL, recycle0 = FALSE)	219	..., collapse = NULL, recycle0 = FALSE			GOOD
343	return	return(FALSE)	7	NO_ARGS			
345	return	return(TRUE)	7	NO_ARGS			
348	return	return(FALSE)	7	NO_ARGS			
357	any	any(tempo.log, na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
358	paste0	paste0("INTERNAL ERROR 3 IN ", function_name, " OF THE ", package_name, " PACKAGE\ncol3 MUST BE MADE OF STRINGS STARTING BY\n\"<FUNCTION_NAME>[\\s\\r\\n]*\\(\"\nAND FINISHING BY\")\"\nHERE IT IS:\n\n", base::paste(col3, collapse = "\n", recycle0 = FALSE, sep = " "), collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
358	paste	paste(col3, collapse = "\n", recycle0 = FALSE, sep = " ")	228	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
359	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
359	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
359	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
359	is.null	is.null(x = warn)	118	x			GOOD
359	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
359	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
364	any	any(tempo_log, na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
377	length	length(x = col1)	12	x			GOOD
378	cat	cat("\n\nEVERYTHING SEEMS CLEAN\n\n", file = "", sep = " ", fill = FALSE, labels = NULL, append = FALSE)	7	..., file = "", sep = " ", fill = FALSE, labels = NULL, append = FALSE			GOOD
384	length	length(x = col1)	19	x			GOOD
388	paste0	paste0("ERROR IN ", function_name, " OF THE ", package_name, " PACKAGE\nCANNOT GET THE ARGUMENTS OF A FUNCTION THAT IS NOT ASSOCIATED TO ITS PACKAGE IN LINE ", col1[i2], ":\n\n", base::paste(base::paste0(base::substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1), col3[i2], collapse = NULL, recycle0 = FALSE), collapse = "\n", recycle0 = FALSE, sep = " "), "\n\n1) PLEASE, RUN saferDev::colons_check(", arg_user_setting$x, ")\n2) ADD THE MISSING <PACKAGE>::<FUNCTION> (OR <PACKAGE>:::<FUNCTION> FOR FUNCTION STARTING BY A DOT)\n3) RERUN saferDev::all_args_here(", arg_user_setting$x, ")", collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
388	paste	paste(base::paste0(base::substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1), col3[i2], collapse = NULL, recycle0 = FALSE), collapse = "\n", recycle0 = FALSE, sep = " ")	205	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
388	paste0	paste0(base::substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1), col3[i2], collapse = NULL, recycle0 = FALSE)	217	..., collapse = NULL, recycle0 = FALSE			GOOD
388	substr	substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1)	230	x, start, stop			GOOD
388	colons_check	NOT_CONSIDERED	415				
388	all_args_here	NOT_CONSIDERED	575				
389	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
389	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
389	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
389	is.null	is.null(x = warn)	118	x			GOOD
389	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
389	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
391	substr	substr(x = code_for_col[i2], start = col4[i2] - 2, stop = col4[i2] - 1)	23	x, start, stop			GOOD
393	paste0	paste0("ERROR IN ", function_name, " OF THE ", package_name, " PACKAGE\nCANNOT GET THE ARGUMENTS OF A FUNCTION THAT IS NOT ASSOCIATED TO ITS PACKAGE IN LINE ", col1[i2], ":\n\n", base::paste(base::paste0(base::substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1), col3[i2], collapse = NULL, recycle0 = FALSE), collapse = "\n", recycle0 = FALSE, sep = " "), "\n\nPLEASE, RUN saferDev::colons_check(", arg_user_setting$x, ") FIRST,\nADD THE MISSING <PACKAGE>::<FUNCTION> (OR <PACKAGE>:::<FUNCTION> FOR FUNCTION STARTING BY A DOT)\nAND RERUN saferDev::all_args_here(", arg_user_setting$x, ")", collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
393	paste	paste(base::paste0(base::substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1), col3[i2], collapse = NULL, recycle0 = FALSE), collapse = "\n", recycle0 = FALSE, sep = " ")	205	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
393	paste0	paste0(base::substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1), col3[i2], collapse = NULL, recycle0 = FALSE)	217	..., collapse = NULL, recycle0 = FALSE			GOOD
393	substr	substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1)	230	x, start, stop			GOOD
393	colons_check	NOT_CONSIDERED	412				
393	all_args_here	NOT_CONSIDERED	577				
394	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
394	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
394	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
394	is.null	is.null(x = warn)	118	x			GOOD
394	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
394	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
396	substr	substr(x = code_for_col[i2], start = 1, stop = col4[i2] - 1)	23	x, start, stop			GOOD
397	.extract_all_fun_names	.extract_all_fun_names(text = tempo_string, pattern = "[a-zA-Z][a-zA-Z0-9.]*:{2,3}$")	41	text, pattern			GOOD
398	is_function_here	is_function_here(fun = base::paste0(tempo_package_name_colons, col2[i2], collapse = NULL, recycle0 = FALSE), lib_path = NULL, safer_check = FALSE)	11	fun, lib_path = NULL, safer_check = TRUE			GOOD
398	paste0	paste0(tempo_package_name_colons, col2[i2], collapse = NULL, recycle0 = FALSE)	40	..., collapse = NULL, recycle0 = FALSE			GOOD
399	sub	sub(pattern = ":+$", replacement = "", x = tempo_package_name_colons, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	29	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
402	get	get(x = col2[i2], envir = base::asNamespace(ns = tempo_package_name, base.OK = TRUE), mode = "function", inherits = FALSE, pos = -1L)	21	x, pos = -1L, envir = as.environment(pos), mode = "any", inherits = TRUE			GOOD
402	asNamespace	asNamespace(ns = tempo_package_name, base.OK = TRUE)	53	ns, base.OK = TRUE			GOOD
403	is.primitive	is.primitive(x = tempo_fun2)	10	x			GOOD
404	as.list	as.list(x = base::suppressWarnings(expr = base::formals(fun = base::args(name = col2[i2]), envir = base::asNamespace(ns = tempo_package_name, base.OK = TRUE)), classes = "warning"))	25	x, ...			GOOD
404	suppressWarnings	suppressWarnings(expr = base::formals(fun = base::args(name = col2[i2]), envir = base::asNamespace(ns = tempo_package_name, base.OK = TRUE)), classes = "warning")	43	expr, classes = "warning"			GOOD
404	formals	formals(fun = base::args(name = col2[i2]), envir = base::asNamespace(ns = tempo_package_name, base.OK = TRUE))	73	fun = sys.function(sys.parent()), envir = parent.frame()			GOOD
404	args	args(name = col2[i2])	93	name			GOOD
404	asNamespace	asNamespace(ns = tempo_package_name, base.OK = TRUE)	130	ns, base.OK = TRUE			GOOD
405	all	all(base::typeof(x = tempo_fun2) %in% base::c("special", "symbol"), na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
405	typeof	typeof(x = tempo_fun2)	20	x			GOOD
405	c	c("special", "symbol")	54	...			
406	length	length(x = tempo_all_args)	10	x			GOOD
415	as.list	as.list(x = base::formals(fun = col2[i2], envir = base::asNamespace(ns = tempo_package_name, base.OK = TRUE)))	19	x, ...			GOOD
415	formals	formals(fun = col2[i2], envir = base::asNamespace(ns = tempo_package_name, base.OK = TRUE))	37	fun = sys.function(sys.parent()), envir = parent.frame()			GOOD
415	asNamespace	asNamespace(ns = tempo_package_name, base.OK = TRUE)	75	ns, base.OK = TRUE			GOOD
418	is.null	is.null(x = arg_full)	10	x			GOOD
419	c	c(col5, "NO_ARGS")	15	...			
420	c	c(col6, "")	15	...			
421	c	c(col7, "")	15	...			
422	c	c(col8, "")	15	...			
425	sapply	sapply(X = arg_full, FUN = function(x){base::paste0(base::ifelse(test = base::all(base::typeof(x = x) == "symbol", na.rm =TRUE), yes = "", no = " = "), base::deparse(expr = x, width.cutoff = 60L, backtick = FALSE, control = base::c("keepNA", "keepInteger", "niceNames", "showAttributes"), nlines = -1L), collapse = NULL, recycle0 = FALSE)}, simplify = TRUE, USE.NAMES = TRUE)	16	X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE			GOOD
425	paste0	paste0(base::ifelse(test = base::all(base::typeof(x = x) == "symbol", na.rm =TRUE), yes = "", no = " = "), base::deparse(expr = x, width.cutoff = 60L, backtick = FALSE, control = base::c("keepNA", "keepInteger", "niceNames", "showAttributes"), nlines = -1L), collapse = NULL, recycle0 = FALSE)	61	..., collapse = NULL, recycle0 = FALSE			GOOD
425	ifelse	ifelse(test = base::all(base::typeof(x = x) == "symbol", na.rm =TRUE), yes = "", no = " = ")	74	test, yes, no			GOOD
425	all	all(base::typeof(x = x) == "symbol", na.rm =TRUE)	94	..., na.rm = FALSE			GOOD
425	typeof	typeof(x = x)	104	x			GOOD
425	deparse	deparse(expr = x, width.cutoff = 60L, backtick = FALSE, control = base::c("keepNA", "keepInteger", "niceNames", "showAttributes"), nlines = -1L)	174	expr, width.cutoff = 60L, backtick = mode(expr) %in% c("call", "expression", "(", "function"), control = c("keepNA", "keepInteger", "niceNames", "showAttributes"), nlines = -1L			GOOD
425	c	c("keepNA", "keepInteger", "niceNames", "showAttributes")	246	...			
426	paste	paste(base::paste0(base::names(x = tempo), tempo, collapse = NULL, recycle0 = FALSE), collapse = ", ", recycle0 = FALSE, sep = " ")	16	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
426	paste0	paste0(base::names(x = tempo), tempo, collapse = NULL, recycle0 = FALSE)	28	..., collapse = NULL, recycle0 = FALSE			GOOD
426	names	names(x = tempo)	41	x			GOOD
427	c	c(col5, tempo)	15	...			
431	.in_quotes_replacement	.in_quotes_replacement(string = tempo_col3, pattern = ",", no_regex_pattern = ",", replacement = " ", perl = TRUE, function_name = function_name, package_name = package_name)	21	string, pattern, no_regex_pattern, replacement, perl, function_name, package_name			GOOD
436	length	length(x = middle_bracket_open_in_col3[[i2]])	10	x			GOOD
437	length	length(x = middle_bracket_open_in_col3[[i2]])	10	x			GOOD
437	length	length(x = middle_bracket_close_in_col3[[i2]])	65	x			GOOD
438	paste0	paste0("INTERNAL ERROR 4 IN ", function_name, " OF THE ", package_name, " PACKAGE\nmiddle_bracket_open_in_col3 AND middle_bracket_close_in_col3 MUST HAVE THE SAME LENGTH IN LOOP ", i2, "\n\nmiddle_bracket_open_in_col3 (", base::length(x = middle_bracket_open_in_col3), "):\n", base::paste(middle_bracket_open_in_col3, collapse = " ", recycle0 = FALSE, sep = " "), "\n\nmiddle_bracket_close_in_col3 (", base::length(x = middle_bracket_close_in_col3), "):\n", base::paste(middle_bracket_close_in_col3, collapse = " ", recycle0 = FALSE, sep = " "), "\n\ni2:\n", i2, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
438	nmiddle_bracket_open_in_col3	NOT_CONSIDERED	209				
438	length	length(x = middle_bracket_open_in_col3)	248	x			GOOD
438	paste	paste(middle_bracket_open_in_col3, collapse = " ", recycle0 = FALSE, sep = " ")	303	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
438	nmiddle_bracket_close_in_col3	NOT_CONSIDERED	388				
438	length	length(x = middle_bracket_close_in_col3)	428	x			GOOD
438	paste	paste(middle_bracket_close_in_col3, collapse = " ", recycle0 = FALSE, sep = " ")	484	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
439	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
439	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
439	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
439	is.null	is.null(x = warn)	118	x			GOOD
439	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
439	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
441	length	length(x = middle_bracket_open_in_col3[[i2]])	19	x			GOOD
442	.in_parenthesis_replacement	.in_parenthesis_replacement(string = tempo_col3, pattern = ",", no_regex_pattern = ",", replacement = " ", perl = TRUE, open_pos = middle_bracket_open_in_col3[[i2]][i6], close_pos = middle_bracket_close_in_col3[[i2]][i6], function_name = function_name, package_name = package_name)	21	string, pattern, no_regex_pattern, replacement, perl, open_pos, close_pos, function_name, package_name			GOOD
444	c	c(pos_rep2, tempo$pos)	19	...			
449	sub	sub(pattern = base::paste0("^", col2[i2], "[\\s\\r\\n]*\\(", collapse = NULL, recycle0 = FALSE), replacement = "", x = tempo_col3, ignore.case = FALSE, perl = TRUE, fixed = FALSE, useBytes = FALSE)	19	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
449	paste0	paste0("^", col2[i2], "[\\s\\r\\n]*\\(", collapse = NULL, recycle0 = FALSE)	39	..., collapse = NULL, recycle0 = FALSE			GOOD
450	sub	sub(pattern = "\\)$", replacement = "", x = obs_args, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE)	19	pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE			GOOD
453	strsplit	strsplit(x = obs_args, split = " *, *", fixed = FALSE, perl = FALSE, useBytes = FALSE)	22	x, split, fixed = FALSE, perl = FALSE, useBytes = FALSE			GOOD
458	is.null	is.null(x = pos_rep2)	13	x			GOOD
460	nchar	nchar(x = col2[i2], type = "chars", allowNA = FALSE, keepNA = NA)	30	x, type = "chars", allowNA = FALSE, keepNA = NA			GOOD
461	any	any(pos_rep2 <= 0, na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
462	paste0	paste0("INTERNAL ERROR 5 IN ", function_name, " OF THE ", package_name, " PACKAGE\nPOSITIONS OF REMOVED COMMAS CANOT OR LESS\n\npos_rep2 (", base::length(x = pos_rep2), "):\n", base::paste(pos_rep2, collapse = " ", recycle0 = FALSE, sep = " "), "\n\nARGUMENT STRING obs_args:\n", base::paste(obs_args, collapse = " ", recycle0 = FALSE, sep = " "), "\n\ni2:\n", i2, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
462	npos_rep2	NOT_CONSIDERED	147				
462	length	length(x = pos_rep2)	167	x			GOOD
462	paste	paste(pos_rep2, collapse = " ", recycle0 = FALSE, sep = " ")	203	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
462	paste	paste(obs_args, collapse = " ", recycle0 = FALSE, sep = " ")	306	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
463	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
463	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
463	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
463	is.null	is.null(x = warn)	118	x			GOOD
463	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
463	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
466	length	length(x = tempo_split)	19	x			GOOD
467	nchar	nchar(x = tempo_split[i6], type = "chars", allowNA = FALSE, keepNA = NA)	48	x, type = "chars", allowNA = FALSE, keepNA = NA			GOOD
468	length	length(x = tempo_log)	19	x			GOOD
469	any	any(tempo_log[i7], na.rm = TRUE)	10	..., na.rm = FALSE			GOOD
470	substr	substr(x = tempo_split[i6], start = pos_rep2[i7], stop = pos_rep2[i7])	7	x, start, stop			GOOD
473	nchar	nchar(x = tempo_split[i6], type = "chars", allowNA = FALSE, keepNA = NA)	18	x, type = "chars", allowNA = FALSE, keepNA = NA			GOOD
478	names	names(x = arg_full)	25	x			GOOD
481	length	length(x = tempo_split)	10	x			GOOD
481	length	length(x = arg_full_names)	42	x			GOOD
481	any	any(three_dots_log, na.rm = TRUE)	79	..., na.rm = FALSE			GOOD
482	paste0	paste0("INTERNAL ERROR 6 IN ", function_name, " OF THE ", package_name, " PACKAGE\nLENGTH OF tempo_split MUST LOWER OR EQUAL TO LENGTH OF arg_full_names IF ... IS NOT AN ARGUMENT OF THE FUNCTION\n\nFUNCTION: ", col2[i2], "\n\ntempo_split (", base::length(x = tempo_split), "):\n", base::paste(tempo_split, collapse = "\n", recycle0 = FALSE, sep = " "), "\n\narg_full_names (", base::length(x = arg_full_names), "):\n", base::paste(arg_full_names, collapse = "\n", , recycle0 = FALSE, sep = " "), "\n\ni2:\n", i2, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
482	ntempo_split	NOT_CONSIDERED	245				
482	length	length(x = tempo_split)	268	x			GOOD
482	paste	paste(tempo_split, collapse = "\n", recycle0 = FALSE, sep = " ")	307	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
482	narg_full_names	NOT_CONSIDERED	377				
482	length	length(x = arg_full_names)	403	x			GOOD
482	paste	paste(arg_full_names, collapse = "\n", , recycle0 = FALSE, sep = " ")	445	..., sep = " ", collapse = NULL, recycle0 = FALSE			GOOD
483	stop	stop(base::paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE), call. = FALSE, domain = NULL)	7	..., call. = TRUE, domain = NULL			GOOD
483	paste0	paste0("\n\n================\n\n", tempo.cat, "\n\n================\n\n", base::ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE)	18	..., collapse = NULL, recycle0 = FALSE			GOOD
483	ifelse	ifelse(test = base::is.null(x = warn), yes = "", no = base::paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE))	98	test, yes, no			GOOD
483	is.null	is.null(x = warn)	118	x			GOOD
483	paste0	paste0("IN ADDITION\nWARNING", base::ifelse(test = warn_count > 1, yes = "S", no = ""), ":\n\n", warn, collapse = NULL, recycle0 = FALSE)	158	..., collapse = NULL, recycle0 = FALSE			GOOD
483	ifelse	ifelse(test = warn_count > 1, yes = "S", no = "")	195	test, yes, no			GOOD
486	.all_args_here_fill	.all_args_here_fill( arg_full = arg_full,  arg_full_names = arg_full_names,  tempo_split = tempo_split,  three_dots_log = three_dots_log,  i2 = i2,  col1_i2 = col1[i2], col2_i2 = col2[i2], arg_user_setting_x = arg_user_setting$x,  function_name = function_name,  package_name = package_name  )	25	arg_full, arg_full_names, tempo_split, three_dots_log, i2, col1_i2, col2_i2, arg_user_setting_x, function_name, package_name			GOOD
498	c	c(col6, tempo_out$col6)	15	...			
499	c	c(col7, tempo_out$col7)	15	...			
500	c	c(col8, tempo_out$col8)	15	...			
504	c	c(col5, "")	15	...			
505	c	c(col6, "")	15	...			
506	c	c(col7, "")	15	...			
507	c	c(col8, "")	15	...			
516	all	all(col8 %in%base::c("", "GOOD"), na.rm = FALSE)	10	..., na.rm = FALSE			GOOD
516	c	c("", "GOOD")	29	...			
517	paste0	paste0("INSIDE ", base::as.character(x = out$arg_user_setting$x), "(), EVERYTHING SEEMS CLEAN", collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
517	as.character	as.character(x = out$arg_user_setting$x)	44	x, ...			GOOD
519	paste0	paste0("RESULT EXPORTED IN\n", path_out, "\nBUT ", tempo.cat, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
521	paste0	paste0("AFTER RUNNING ", function_name, " OF THE ", package_name, " PACKAGE:\n", tempo.cat, collapse = NULL, recycle0 = FALSE)	20	..., collapse = NULL, recycle0 = FALSE			GOOD
522	on.exit	on.exit(expr = base::cat(base::paste0("\n\n", tempo.cat, "\n\n", collapse = NULL, recycle0 = FALSE), file = "", sep = " ", fill = FALSE, labels = NULL, append = FALSE), add = FALSE, after = TRUE)	7	expr = NULL, add = FALSE, after = TRUE			GOOD
522	cat	cat(base::paste0("\n\n", tempo.cat, "\n\n", collapse = NULL, recycle0 = FALSE), file = "", sep = " ", fill = FALSE, labels = NULL, append = FALSE)	28	..., file = "", sep = " ", fill = FALSE, labels = NULL, append = FALSE			GOOD
522	paste0	paste0("\n\n", tempo.cat, "\n\n", collapse = NULL, recycle0 = FALSE)	38	..., collapse = NULL, recycle0 = FALSE			GOOD
524	data.frame	data.frame(LINE_NB = col1, FUN_NAME = col2, FUN_ARGS = col3, FUN_POS = col4, DEF_ARGS = col5, MISSING_ARG_NAMES = col6, MISSING_ARGS = col7, STATUS = col8, row.names = NULL, check.rows = FALSE, check.names = TRUE, fix.empty.names = TRUE, stringsAsFactors = FALSE)	17	..., row.names = NULL, check.rows = FALSE, check.names = TRUE, fix.empty.names = TRUE, stringsAsFactors = FALSE			GOOD
526	write.table	write.table(x = output, file = path_out, row.names = FALSE, col.names = TRUE, append = FALSE, quote = FALSE, sep = "\t", eol = "\n", na = "", dec = ".", qmethod = base::c("escape", "double"), fileEncoding = "")	8	x, file = "", append = FALSE, quote = TRUE, sep = " ", eol = "\n", na = "NA", dec = ".", row.names = TRUE, col.names = TRUE, qmethod = c("escape", "double"), fileEncoding = ""			GOOD
526	c	c("escape", "double")	177	...			
528	return	return(output)	7	NO_ARGS			
533	is.null	is.null(x = warn)	13	x			GOOD
534	on.exit	on.exit(expr = base::warning(base::paste0("FROM ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n\n", warn, collapse = NULL, recycle0 = FALSE), call. = FALSE, immediate. = FALSE, noBreaks. = FALSE, domain = NULL), add = FALSE, after = TRUE)	7	expr = NULL, add = FALSE, after = TRUE			GOOD
534	warning	warning(base::paste0("FROM ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n\n", warn, collapse = NULL, recycle0 = FALSE), call. = FALSE, immediate. = FALSE, noBreaks. = FALSE, domain = NULL)	28	..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE, domain = NULL			GOOD
534	paste0	paste0("FROM ", function_name, base::ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)), "\n\n", warn, collapse = NULL, recycle0 = FALSE)	42	..., collapse = NULL, recycle0 = FALSE			GOOD
534	ifelse	ifelse(test = base::is.null(x = package_name), yes = "", no = base::paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE))	79	test, yes, no			GOOD
534	is.null	is.null(x = package_name)	99	x			GOOD
534	paste0	paste0(" OF THE ", package_name, " PACKAGE", collapse = NULL, recycle0 = FALSE)	147	..., collapse = NULL, recycle0 = FALSE			GOOD
536	on.exit	on.exit(expr = base::options(warning.length = ini_warning_length), add = TRUE, after = TRUE)	7	expr = NULL, add = FALSE, after = TRUE			GOOD
536	options	options(warning.length = ini_warning_length)	28	...			
