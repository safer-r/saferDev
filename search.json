[{"path":"/articles/all_args_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"all_args_here","text":"","code":"source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test2.R\") source(\"https://raw.githubusercontent.com/safer-r/.github/refs/heads/main/profile/backbone.R\") FUN1 <- function(x, y){     code_for_col <- base::as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE), mode = \"any\")     code_for_col2 <- base::as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y)))     middle_bracket <- base::do.call(what = base::c, args = code_for_col)     middle_bracket2 <- base::do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) } FUN2 <- function(x, y){     middle_bracket2 <- base::do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) }"},{"path":"/articles/all_args_here.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"all_args_here","text":"","code":"# Examples that return an error # all_args_here(mean) # all_args_here(test2) all_args_here(     x = FUN2 # R function ) >  > INSIDE FUN2(), ARGUMENTS ARE MISSING. >   LINE_NB     FUN_NAME > 1       2      do.call > 2       2 parent.frame >                                                                                    FUN_ARGS > 1 do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) > 2                                                                            parent.frame() >   FUN_POS                                          DEF_ARGS MISSING_ARG_NAMES > 1      26 what, args, quote = FALSE, envir = parent.frame()                   > 2     100                                             n = 1                 n >   MISSING_ARGS              STATUS > 1                             GOOD > 2        n = 1 parent.frame(n = 1)"},{"path":"/articles/all_args_here.html","id":"argument-export-associated-with-argument-path_out-df_name-and-overwrite","dir":"Articles","previous_headings":"","what":"Argument export (associated with argument path_out, df_name and overwrite)","title":"all_args_here","text":"","code":"all_args_here(     x = FUN2, # R function     export = TRUE, # export the data frame into a .tsv file?     path_out = \".\", # pathway of the folder where to export the data frame     df_name = \"res.tsv\", # name of the exported data frame file     overwrite = TRUE # Overwrite potential df_name file already existing in path_out? ) >  > INSIDE FUN2(), ARGUMENTS ARE MISSING. > RESULT EXPORTED IN: > ./res.tsv"},{"path":"/articles/all_args_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"all_args_here","text":"","code":"all_args_here(     x = FUN1, # R function     export = FALSE, # export the data frame into a .tsv file?     path_out = \".\", # pathway of the folder where to export the data frame.     df_name = \"res.tsv\", # name of the exported data frame file     overwrite = FALSE, # Overwrite potential df_name file already existing in path_out?     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) >  > INSIDE FUN1(), ARGUMENTS ARE MISSING. >    LINE_NB     FUN_NAME > 1        2    as.vector > 2        2       unlist > 3        2       mapply > 4        2          rep > 5        2       length > 6        3    as.vector > 7        3       unlist > 8        3       mapply > 9        3          rep > 10       3       length > 11       4      do.call > 12       5      do.call > 13       5 parent.frame >                                                                                                                                                                                                                          FUN_ARGS > 1  as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE), mode = \"any\") > 2                                     unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE) > 3                                                                                           mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE) > 4                                                                                                                                                                                                 rep(x = y, base::length(x = x)) > 5                                                                                                                                                                                                                   length(x = x) > 6                                                                                                        as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y))) > 7                                                                                                                             unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y)) > 8                                                                                                                                               mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y) > 9                                                                                                                                                                                                 rep(x = y, base::length(x = x)) > 10                                                                                                                                                                                                                  length(x = x) > 11                                                                                                                                                                                   do.call(what = base::c, args = code_for_col) > 12                                                                                                                                      do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) > 13                                                                                                                                                                                                                 parent.frame() >    FUN_POS                                                     DEF_ARGS > 1       23                                              x, mode = \"any\" > 2       43                        x, recursive = TRUE, use.names = TRUE > 3       60 FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 4       94                                                       x, ... > 5      111                                                            x > 6       24                                              x, mode = \"any\" > 7       44                        x, recursive = TRUE, use.names = TRUE > 8       61 FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 9       95                                                       x, ... > 10     112                                                            x > 11      25            what, args, quote = FALSE, envir = parent.frame() > 12      26            what, args, quote = FALSE, envir = parent.frame() > 13     100                                                        n = 1 >                MISSING_ARG_NAMES > 1                                > 2                                > 3                                > 4                                > 5                                > 6                           mode > 7           recursive, use.names > 8  MoreArgs, SIMPLIFY, USE.NAMES > 9                                > 10                               > 11                  quote, envir > 12                               > 13                             n >                                          MISSING_ARGS > 1                                                     > 2                                                     > 3                                                     > 4                                                     > 5                                                     > 6                                        mode = \"any\" > 7                  recursive = TRUE, use.names = TRUE > 8  MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 9                                                     > 10                                                    > 11              quote = FALSE, envir = parent.frame() > 12                                                    > 13                                              n = 1 >                                                                                                                                     STATUS > 1                                                                                                                                     GOOD > 2                                                                                                                                     GOOD > 3                                                                                                                                     GOOD > 4                                                                                                                                     GOOD > 5                                                                                                                                     GOOD > 6   as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y)), mode = \"any\") > 7  unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y), recursive = TRUE, use.names = TRUE) > 8     mapply(x = x, y = y,FUN = function(x, y){base::rep(x = y, base::length(x = x))}, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE) > 9                                                                                                                                     GOOD > 10                                                                                                                                    GOOD > 11                                                     do.call(what = base::c, args = code_for_col, quote = FALSE, envir = parent.frame()) > 12                                                                                                                                    GOOD > 13                                                                                                                     parent.frame(n = 1)"},{"path":"/articles/arg_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"arg_check","text":"","code":"vec1 <- -1:3 # vector of integers vec2 <- 1:3 / 3 # vector of proportions vec3 <- c(1, 2, 3) # vector of integers but stored as \"double\" vec4 <- \"pearson\" # vector of characters vec5 <- c(\"a\", \"b\",\"a\", \"b\") # vector of characters mat1 <- matrix(vec1) # matrix of integers mat2 <- matrix(c(1:3 / 3, NA)) # matrix of proportions with NA"},{"path":"/articles/arg_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"arg_check","text":"","code":"vec1 # vector of integers > [1] -1  0  1  2  3 vec2 # vector of proportions > [1] 0.3333333 0.6666667 1.0000000 vec3 # vector of integers but stored as \"double\" > [1] 1 2 3 vec4 # vector of characters > [1] \"pearson\" vec5 # vector of characters > [1] \"a\" \"b\" \"a\" \"b\" mat1 # matrix of integers >      [,1] > [1,]   -1 > [2,]    0 > [3,]    1 > [4,]    2 > [5,]    3 mat2 # matrix of proportions with NA >           [,1] > [1,] 0.3333333 > [2,] 0.6666667 > [3,] 1.0000000 > [4,]        NA"},{"path":"/articles/arg_check.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"arg_check","text":"","code":"# Check that vec1 is of class integer (means that it is also a vector) -> ok arg_check(data = vec1, class = \"integer\") > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 ARGUMENT.\" >  > $object.name > [1] \"vec1\" # Check that vec1 is a numeric vector -> error because vec1 is a vector of integers arg_check(data = vec1, class = \"numeric\") > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE vec1 ARGUMENT MUST BE CLASS numeric\" >  > $object.name > [1] \"vec1\" # Check that vec1 is an integer vector of length 3 without negative values and without NA -> error because of length 5 and negative values inside vec1 arg_check(data = vec1, class = \"vector\", typeof = \"integer\", length = 3, neg_values = FALSE, na_contain = FALSE) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE vec1 ARGUMENT MUST BE LENGTH 3 AND THE vec1 ARGUMENT MUST BE MADE OF NON NEGATIVE NUMERIC VALUES.\" >  > $object.name > [1] \"vec1\" # No result displayed because the output list is assigned into res (see below the print argument) res <- arg_check(data = vec1, class = \"integer\")  # with data = NULL, the function systematically report a checking problem arg_check(data = NULL, class = \"integer\") > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE NULL ARGUMENT MUST BE CLASS integer\" >  > $object.name > [1] \"NULL\""},{"path":"/articles/arg_check.html","id":"argument-class-typeof-mode-and-length-are-the-same-as-the-corresponding-r-function-except-class-which","dir":"Articles","previous_headings":"","what":"Argument class, typeof, mode and length are the same as the corresponding R function, except class which","title":"arg_check","text":"also “vector” remains “matrix” matrices “matrix” “array”","code":"# Example arg_check(     data = vec1,      class = \"vector\",      typeof = \"integer\",      mode = \"numeric\",      length = 5,  ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 ARGUMENT.\" >  > $object.name > [1] \"vec1\" # Warning: the function does not check for inconsistencies between arguments. It just checks if everything is ok between arguments values and data arg_check(     data = vec1,      typeof = \"integer\",      mode = \"character\", # the mode \"character\" exists but is inconsistant with typeof \"integer\". However, this aspect is not signaled by the function ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE vec1 ARGUMENT MUST BE MODE character\" >  > $object.name > [1] \"vec1\"  # Error message due to wrong value in the class and length arguments arg_check(     data = vec1,      mode = \"integer\", # the mode \"integer\" does not exist in the mode() function of R ) > Error:  >  > ================ >  > ERROR IN saferDev::arg_check(). >  > THE mode ARGUMENT MUST BE ONE OF THESE VALUE: > \"logical\" > \"numeric\" > \"complex\" > \"character\" > \"list\" > \"expression\" > \"name\" > \"symbol\" > \"function\" > \"environment\" > \"S4\" > \"call\" >  > ================"},{"path":"/articles/arg_check.html","id":"argument-prop","dir":"Articles","previous_headings":"","what":"Argument prop","title":"arg_check","text":"","code":"arg_check(     data = mat2,      prop = TRUE # Check for values between 0 and 1 only ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE mat2 ARGUMENT CONTAINS NA WHILE NOT AUTHORIZED.\" >  > $object.name > [1] \"mat2\""},{"path":"/articles/arg_check.html","id":"argument-double_as_integer_allowed","dir":"Articles","previous_headings":"","what":"Argument double_as_integer_allowed","title":"arg_check","text":"","code":"arg_check(     data = vec3,      typeof = \"integer\",     double_as_integer_allowed = TRUE # with TRUE, integers stored as double are accepted ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec3 ARGUMENT.\" >  > $object.name > [1] \"vec3\""},{"path":"/articles/arg_check.html","id":"argument-options","dir":"Articles","previous_headings":"","what":"Argument options","title":"arg_check","text":"","code":"arg_check(     data = vec4,      options = c(\"pearson\", \"spearman\", \"kendall\") ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec4 ARGUMENT.\" >  > $object.name > [1] \"vec4\""},{"path":"/articles/arg_check.html","id":"argument-all_options_in_data","dir":"Articles","previous_headings":"","what":"Argument all_options_in_data","title":"arg_check","text":"","code":"# No error arg_check(     data = vec5,     options = c(\"a\", \"b\"),      all_options_in_data = TRUE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec5 ARGUMENT.\" >  > $object.name > [1] \"vec5\" # No error arg_check(     data = vec5,     options = c(\"a\", \"b\", \"c\"),      all_options_in_data = FALSE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec5 ARGUMENT.\" >  > $object.name > [1] \"vec5\" # Error arg_check(     data = vec5,     options = c(\"a\", \"b\", \"c\"),      all_options_in_data = TRUE ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec5 ARGUMENT MUST BE MADE OF ALL THESE OPTIONS:\\na\\nb\\nc\\nTHE MISSING ELEMENTS OF THE options ARGUMENT ARE:\\nc\" >  > $object.name > [1] \"vec5\""},{"path":"/articles/arg_check.html","id":"argument-na_contain","dir":"Articles","previous_headings":"","what":"Argument na_contain","title":"arg_check","text":"","code":"arg_check(     data = mat2,      class = \"matrix\",      prop = TRUE,     na_contain = FALSE # with TRUE, integers stored as double are accepted ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE mat2 ARGUMENT CONTAINS NA WHILE NOT AUTHORIZED.\" >  > $object.name > [1] \"mat2\""},{"path":"/articles/arg_check.html","id":"argument-neg_values","dir":"Articles","previous_headings":"","what":"Argument neg_values","title":"arg_check","text":"","code":"# Warning: only considered if set to FALSE, to check for non negative values when class is set to \"vector\", \"numeric\", \"matrix\", \"array\", \"data.frame\", \"table\", or typeof is set to \"double\", \"integer\", or mode is set to \"numeric\" arg_check(     data = mat1,      class = \"matrix\",     neg_values = FALSE # with TRUE, integers stored as double are accepted ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE mat1 ARGUMENT MUST BE MADE OF NON NEGATIVE NUMERIC VALUES.\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-inf_values","dir":"Articles","previous_headings":"","what":"Argument inf_values","title":"arg_check","text":"","code":"# Warning: only considered if set to FALSE, to check for non infinite values when class is set to \"vector\", \"numeric\", \"matrix\", \"array\", \"data.frame\", \"table\", or typeof is set to \"double\", \"integer\", or mode is set to \"numeric\" arg_check(     data = mat1,      class = \"matrix\",     inf_values = FALSE ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\n\\nTHE mat1 ARGUMENT MUST BE MADE OF NON INFINITE VALUES BUT IS NOT EVEN TYPE DOUBLE.\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-print","dir":"Articles","previous_headings":"","what":"Argument print","title":"arg_check","text":"","code":"# No error message printed because print is FALSE res <- arg_check(     data = mat1,      class = \"data.frame\",     print = FALSE ) # Error message printed res <- arg_check(     data = mat1,      class = \"data.frame\",     print = TRUE ) >  >  > ================ >  > ERROR >  > THE mat1 ARGUMENT MUST BE CLASS data.frame >  > ================ # Even if print is TRUE, no error message printed because no error res <- arg_check(     data = mat1,      class = \"matrix\",     print = TRUE )"},{"path":"/articles/arg_check.html","id":"arguments-data_name","dir":"Articles","previous_headings":"","what":"Arguments data_name","title":"arg_check","text":"","code":"# Example tempo <- arg_check(     data = vec1,      class = \"integer\",      data_name = \"OBSERVATION_1\" ) tempo$text > [1] \"NO PROBLEM DETECTED FOR THE OBSERVATION_1 ARGUMENT.\" # In fact, these two arguments are interesting when check() is used inside functions fun1 <- function(arg1){     tempo <- arg_check(                 data = arg1,                  class = \"integer\",                  data_name = NULL # if NULL, the name displayed is arg1     )     if(tempo$problem == TRUE){         cat(paste0(\"\\n\\n================\\n\\n\", tempo$text, \"\\n\\n================\\n\\n\"))     } } fun1(arg1 = vec4) # error message because arg1 requires a vector of integers >  >  > ================ >  > ERROR >  > THE arg1 ARGUMENT MUST BE CLASS integer >  > ================"},{"path":"/articles/arg_check.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"arg_check","text":"","code":"arg_check(     data = mat1,      class = \"matrix\",      safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function. ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE mat1 ARGUMENT.\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-lib_path-and-error_text","dir":"Articles","previous_headings":"","what":"Argument lib_path and error_text","title":"arg_check","text":"","code":"arg_check(     data = mat1,      class = \"matrix\",      lib_path = \".\", # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \" === TEXT ADDED ===\" # add information in error messages returned by the function. ) > Error:  >  > ================ >  > ERROR IN saferDev:::.pack_and_function_check() INSIDE saferDev::arg_check() === TEXT ADDED === >  > REQUIRED PACKAGE: > saferDev > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/arg_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"arg_check","text":"","code":"# See the examples of fun_info() to test different classes of objects arg_check(     data = vec1,      class = \"integer\",      typeof = NULL,      mode = NULL,      length = NULL,      prop = FALSE,      double_as_integer_allowed = FALSE,      options = NULL,      all_options_in_data = FALSE,      na_contain = FALSE,      neg_values = TRUE,      inf_values = TRUE,      print = FALSE,      data_name = NULL,      data_arg = TRUE,      safer_check = TRUE,      lib_path = NULL,     error_text = \"\"  ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 ARGUMENT.\" >  > $object.name > [1] \"vec1\""},{"path":"/articles/arg_test.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"arg_test","text":"","code":"f <- \"unique\" f2 <- \"plot\" argum <- c(\"x\", \"incomparables\") argum2 <- c(\"x\", \"y\") value <- list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)) value2 <- list(x = list(1:10, 12:13, NA, (1:10)^2),y = list(1:10, NA, NA)) error <- list(x = list(FALSE, FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE)) error2 <- list(x = list(FALSE, TRUE, TRUE, FALSE), y = list(FALSE, TRUE, TRUE))"},{"path":"/articles/arg_test.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"arg_test","text":"","code":"f # character string indicating the name of the function tested  > [1] \"unique\" argum # character vector of the arguments of fun > [1] \"x\"             \"incomparables\" value # List in which each compartment containing values of the corresponding argument in arg > $x > $x[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $x[[2]] > [1] 1 1 2 8 >  > $x[[3]] > [1] NA >  >  > $incomparable > [1]  TRUE FALSE    NA value2 # List in which each compartment containing values of the corresponding argument2 in arg > $x > $x[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $x[[2]] > [1] 12 13 >  > $x[[3]] > [1] NA >  > $x[[4]] >  [1]   1   4   9  16  25  36  49  64  81 100 >  >  > $y > $y[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $y[[2]] > [1] NA >  > $y[[3]] > [1] NA error # List indicating if an error is expected > $x > $x[[1]] > [1] FALSE >  > $x[[2]] > [1] FALSE >  > $x[[3]] > [1] TRUE >  >  > $incomparable > [1] FALSE FALSE  TRUE"},{"path":"/articles/arg_test.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"arg_test","text":"","code":"arg_test(     fun = f,      arg = argum,      val = value ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > test JOB END >  > TIME: 2025-05-18 01:05:52.296555 >  > TOTAL TIME LAPSE: 0S > $fun > [1] \"unique\" >  > $ini > arg_test(fun = f, arg = argum, val = value) >  > $data >            X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. > arg_test_1    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_2    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_3    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_4     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_5     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_6     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical >            X.SPECIAL.VALUE.OF.CLASS.logical.AND.TYPE.logical. kind problem > arg_test_1    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_2    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_3    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_4    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_5    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_6    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE >            message > arg_test_1         > arg_test_2         > arg_test_3         > arg_test_4         > arg_test_5         > arg_test_6         > arg_test_7         > arg_test_8         > arg_test_9         >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lifecycle_1.0.4   lubridate_1.9.3   > [25] magrittr_2.0.3    memoise_2.0.1     munsell_0.5.1     parallel_4.3.3    > [29] pillar_1.9.0      pkgconfig_2.0.3   pkgdown_2.0.9     purrr_1.0.2       > [33] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [37] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [41] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [45] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [49] yaml_2.3.8  arg_test(     fun = f2,      arg = argum2,      val = value2 ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 12 >  > LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2025-05-18 01:05:52.70068 > LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S >  > test JOB END >  > TIME: 2025-05-18 01:05:52.708016 >  > TOTAL TIME LAPSE: 0S > $fun > [1] \"plot\" >  > $ini > arg_test(fun = f2, arg = argum2, val = value2) >  > $data >             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. > arg_test_01    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_02    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_03    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_04    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_05    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_06    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_07    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_08    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_09    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_10     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_11     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_12     SPECIAL VALUE OF CLASS numeric AND TYPE double >             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer..1  kind problem > arg_test_01      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE > arg_test_02      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_03      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_04      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE > arg_test_05      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_06      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_07      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE > arg_test_08      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_09      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_10      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE > arg_test_11      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_12      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE >                                                                                      message > arg_test_01                                                                                  > arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_10                                                                                  > arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lifecycle_1.0.4   lubridate_1.9.3   > [25] magrittr_2.0.3    memoise_2.0.1     munsell_0.5.1     parallel_4.3.3    > [29] pillar_1.9.0      pkgconfig_2.0.3   pkgdown_2.0.9     purrr_1.0.2       > [33] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [37] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [41] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [45] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [49] yaml_2.3.8  arg_test(     fun = f,      arg = argum,      val = value,     export = TRUE,     res_path = getwd() ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > test JOB END >  > TIME: 2025-05-18 01:05:53.042591 >  > TOTAL TIME LAPSE: 0S  arg_test(     fun = f2,      arg = argum2,      val = value2,     expect_error = error2,     plot_fun = TRUE,     res_path = \".\" ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 12 >  > LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2025-05-18 01:05:53.42041 > LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S >  > NO DISCREPANCY BETWEEN EXPECTED AND OBSERVED ERRORS >  > test JOB END >  > TIME: 2025-05-18 01:05:53.430454 >  > TOTAL TIME LAPSE: 0S > $fun > [1] \"plot\" >  > $ini > arg_test(fun = f2, arg = argum2, val = value2, expect_error = error2,  >     plot_fun = TRUE, res_path = \".\") >  > $data >             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. > arg_test_01    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_02    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_03    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_04    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_05    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_06    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_07    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_08    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_09    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_10     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_11     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_12     SPECIAL VALUE OF CLASS numeric AND TYPE double >             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer..1  kind problem > arg_test_01      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE > arg_test_02      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_03      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_04      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE > arg_test_05      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_06      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_07      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE > arg_test_08      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_09      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_10      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE > arg_test_11      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE > arg_test_12      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE >             expected.error > arg_test_01          FALSE > arg_test_02           TRUE > arg_test_03           TRUE > arg_test_04           TRUE > arg_test_05           TRUE > arg_test_06           TRUE > arg_test_07           TRUE > arg_test_08           TRUE > arg_test_09           TRUE > arg_test_10          FALSE > arg_test_11           TRUE > arg_test_12           TRUE >                                                                                      message > arg_test_01                                                                                  > arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_10                                                                                  > arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lifecycle_1.0.4   lubridate_1.9.3   > [25] magrittr_2.0.3    memoise_2.0.1     munsell_0.5.1     parallel_4.3.3    > [29] pillar_1.9.0      pkgconfig_2.0.3   pkgdown_2.0.9     purrr_1.0.2       > [33] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [37] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [41] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [45] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [49] yaml_2.3.8"},{"path":"/articles/arg_test.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"arg_test","text":"","code":"arg_test(     fun = f,      arg = argum,      val= value,      expect_error = error,      parall = FALSE,      thread_nb = NULL,      print_count = 10,      plot_fun = FALSE,      export = FALSE,      res_path = \".\",      safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) # check the function \"mean\" in the environment one step above the local environment >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE $data RESULT) >  > test JOB END >  > TIME: 2025-05-18 01:05:53.853134 >  > TOTAL TIME LAPSE: 0S > $fun > [1] \"unique\" >  > $ini > arg_test(fun = f, arg = argum, val = value, expect_error = error,  >     parall = FALSE, thread_nb = NULL, print_count = 10, plot_fun = FALSE,  >     export = FALSE, res_path = \".\", safer_check = TRUE, lib_path = NULL,  >     error_text = \"\") >  > $data >            X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. > arg_test_1    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_2    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_3    SPECIAL VALUE OF CLASS integer AND TYPE integer > arg_test_4     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_5     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_6     SPECIAL VALUE OF CLASS numeric AND TYPE double > arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical > arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical >            X.SPECIAL.VALUE.OF.CLASS.logical.AND.TYPE.logical. kind problem > arg_test_1    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_2    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_3    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_4    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_5    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_6    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE > arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE >            expected.error message > arg_test_1          FALSE         > arg_test_2          FALSE         > arg_test_3           TRUE         > arg_test_4          FALSE         > arg_test_5          FALSE         > arg_test_6           TRUE         > arg_test_7           TRUE         > arg_test_8           TRUE         > arg_test_9           TRUE         >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lifecycle_1.0.4   lubridate_1.9.3   > [25] magrittr_2.0.3    memoise_2.0.1     munsell_0.5.1     parallel_4.3.3    > [29] pillar_1.9.0      pkgconfig_2.0.3   pkgdown_2.0.9     purrr_1.0.2       > [33] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [37] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [41] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [45] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [49] yaml_2.3.8"},{"path":"/articles/colons_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"colons_check","text":"","code":"fun1 <- function(){     base::sum(1, 3)   }  fun2 <- function(){     sum(1, 3)   }"},{"path":"/articles/colons_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"colons_check","text":"","code":"fun1 > function(){ >     base::sum(1, 3) >   } fun2 > function(){ >     sum(1, 3) >   }"},{"path":"/articles/colons_check.html","id":"argument-x","dir":"Articles","previous_headings":"","what":"Argument x","title":"colons_check","text":"","code":"colons_check(x = fun1) # a function name, written without quotes and brackets >  >  > AFTER RUNNING saferDev::colons_check(). > INSIDE fun1(), EVERYTHING SEEMS CLEAN. colons_check(x = fun2) # a function name, written without quotes and brackets >  >  > INSIDE fun2(), SOME :: OR ::: ARE MISSING BEFORE BASIC FUNCTIONS: >  > LINE  FUN     STRING_BEFORE > 2 sum"},{"path":"/articles/colons_check.html","id":"argument-safer_chek","dir":"Articles","previous_headings":"","what":"Argument safer_chek","title":"colons_check","text":"","code":"colons_check(     x = fun1,      afer_check = FALSE ) # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? > Error in colons_check(x = fun1, afer_check = FALSE): unused argument (afer_check = FALSE)"},{"path":"/articles/colons_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"colons_check","text":"","code":"colons_check(     x = fun1, # a function name, written without quotes and brackets     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) >  >  > AFTER RUNNING saferDev::colons_check(). > INSIDE fun1(), EVERYTHING SEEMS CLEAN."},{"path":"/articles/colons_check.html","id":"sophisticated-example","dir":"Articles","previous_headings":"","what":"Sophisticated example","title":"colons_check","text":"","code":"source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") colons_check(     x = test, # a function name, written without quotes and brackets     safer_check = TRUE # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? ) >  >  > INSIDE test(), SOME :: OR ::: ARE MISSING BEFORE BASIC FUNCTIONS: >  > LINE  FUN     STRING_BEFORE > 5 gregexpr        matches <-  > 8 regmatches      matched_strings <-  > 11    sum      > 18    sub     result <-  > 19    range        > 22    return       >  > INSIDE test(), INTERNAL FUNCTION DETECTED: > FUN1 >  > INSIDE test(), SOME :: OR ::: ARE MISSING BEFORE OTHER FUNCTIONS: >  > LINE  FUN     STRING_BEFORE > 16    roc1        base::length( > 20    roc4        tempo.cat <- base::paste0(\"IAGE\\nLENGTHS OF roc00() (\", base::ks.test("},{"path":"/articles/env_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"env_check","text":"","code":"pos <- 2 name <- \"mean\""},{"path":"/articles/env_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"env_check","text":"","code":"pos # integer indicating the position of the environment checked > [1] 2 name # character vector of the name of the function that will be checked > [1] \"mean\""},{"path":"/articles/env_check.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"env_check","text":"","code":"env_check(pos = 1) > [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN :\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh], parentenv, handlers[[nh]]): name\\n.GlobalEnv: .Random.seed name pos\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\ntools:callr\\npackage:base\\n\" env_check(pos = 2) > [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN :\\neval_with_user_handlers(expr, envir, enclos, user_handlers): enclos envir expr\\nwithCallingHandlers(withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers)), warning = wHandler, error = eHandler, message = mHandler): expr\\ndoTryCatch(return(expr), name, parentenv, handler): expr\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): expr\\ntryCatchList(expr, classes, parentenv, handlers): expr\\ntryCatch(expr, error = function(e) {\\n    call <- conditionCall(e)\\n    if (!is.null(call)) {\\n        if (identical(call[[1]], quote(doTryCatch))) \\n            call <- sys.call(-4)\\n        dcall <- deparse(call, nlines = 1)\\n        prefix <- paste(\\\"Error in\\\", dcall, \\\": \\\")\\n        LONG <- 75\\n        sm <- strsplit(conditionMessage(e), \\\"\\\\n\\\")[[1]]\\n        w <- 14 + nchar(dcall, type = \\\"w\\\") + nchar(sm[1], type = \\\"w\\\")\\n        if (is.na(w)) \\n            w <- 14 + nchar(dcall, type = \\\"b\\\") + nchar(sm[1], type = \\\"b\\\")\\n        if (w > LONG) \\n            prefix <- paste0(prefix, \\\"\\\\n  \\\")\\n    }\\n    else prefix <- \\\"Error : \\\"\\n    msg <- paste0(prefix, conditionMessage(e), \\\"\\\\n\\\")\\n    .Internal(seterrmessage(msg[1]))\\n    if (!silent && isTRUE(getOption(\\\"show.error.messages\\\"))) {\\n        cat(msg, file = outFile)\\n        .Internal(printDeferredWarnings())\\n    }\\n    invisible(structure(msg, class = \\\"try-error\\\", condition = e))\\n}): expr\\ntry(f, silent = TRUE): expr\\nevaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, debug = debug, last = i == length(out), use_try = stop_on_error != 2, keep_warning = keep_warning, keep_message = keep_message, log_echo = log_echo, log_warning = log_warning, output_handler = output_handler, include_timing = include_timing): enclos envir expr\\nevaluate::evaluate(...): enclos envir expr\\nin_dir(input_dir(), expr): expr\\nin_input_dir(evaluate(code, envir = env, new_device = FALSE, keep_warning = if (is.numeric(options$warning)) TRUE else options$warning, keep_message = if (is.numeric(options$message)) TRUE else options$message, stop_on_error = if (is.numeric(options$error)) options$error else {\\n    if (options$error && options$include) \\n        0\\n    else 2\\n}, output_handler = knit_handlers(options$render, options))): expr\\nwithCallingHandlers(if (tangle) process_tangle(group) else process_group(group), error = function(e) if (xfun::pkg_available(\\\"rlang\\\", \\\"1.0.0\\\")) rlang::entrace(e)): expr\\nwithCallingHandlers(expr, error = function(e) {\\n    loc = if (is.function(fun)) \\n        trimws(fun(label))\\n    else \\\"\\\"\\n    if (loc != \\\"\\\") \\n        loc = sprintf(\\\" at lines %s\\\", loc)\\n    message(one_string(handler(e, loc)))\\n}): expr\\nxfun:::handle_error(withCallingHandlers(if (tangle) process_tangle(group) else process_group(group), error = function(e) if (xfun::pkg_available(\\\"rlang\\\", \\\"1.0.0\\\")) rlang::entrace(e)), function(e, loc) {\\n    setwd(wd)\\n    write_utf8(res, output %n% stdout())\\n    paste0(\\\"\\\\nQuitting from lines \\\", loc)\\n}, if (labels[i] != \\\"\\\") sprintf(\\\" [%s]\\\", labels[i]), get_loc): expr\\nknitr::knit(knit_input, knit_output, envir = envir, quiet = quiet): envir\\nrmarkdown::render(envir = globalenv(), ...): envir\\n(function (what, args, quote = FALSE, envir = parent.frame()) \\n{\\n    if (!is.list(args)) \\n        stop(\\\"second argument must be a list\\\")\\n    if (quote) \\n        args <- lapply(args, enquote)\\n    .Internal(do.call(what, args, envir))\\n})(base::quote(function (..., seed = NULL) \\n{\\n    if (!is.null(seed)) {\\n        set.seed(seed)\\n        if (requireNamespace(\\\"htmlwidgets\\\", quietly = TRUE)) {\\n            htmlwidgets::setWidgetIdSeed(seed)\\n        }\\n    }\\n    rmarkdown::render(envir = globalenv(), ...)\\n}), base::quote(list(input = \\\"/__w/saferDev/saferDev/vignettes/articles/env_check.Rmd\\\", output_file = \\\"env_check.html\\\", output_dir = \\\"/__w/saferDev/saferDev/docs/articles\\\", intermediates_dir = \\\"/tmp/RtmpQPG2Qr\\\", encoding = \\\"UTF-8\\\", seed = 1014, output_format = list(knitr = list(opts_knit = NULL, opts_chunk = list(dev = \\\"ragg_png\\\", dpi = 96, fig.width = 7.29166666666667, fig.height = 4.50659250103008, fig.retina = 2, dev.args = list(bg = NA), fig.ext = \\\"png\\\", other.parameters = list()), knit_hooks = NULL, \\n    opts_hooks = NULL, opts_template = NULL), pandoc = list(to = \\\"html\\\", from = \\\"markdown+autolink_bare_uris+tex_math_single_backslash\\\", args = c(\\\"--standalone\\\", \\\"--section-divs\\\", \\\"--table-of-contents\\\", \\\"--toc-depth\\\", \\\"2\\\", \\\"--template\\\", \\\"/tmp/RtmpQPG2Qr/filedf143805ded.html\\\", \\\"--highlight-style\\\", \\\"pygments\\\"), keep_tex = FALSE, latex_engine = \\\"pdflatex\\\", ext = NULL, convert_fun = NULL, lua_filters = c(\\\"/__w/_temp/Library/rmarkdown/rmarkdown/lua/pagebreak.lua\\\", \\\"/__w/_temp/Library/rmarkdown/rmarkdown/lua/latex-div.lua\\\"\\n)), keep_md = FALSE, clean_supporting = FALSE, df_print = \\\"default\\\", pre_knit = function (...) \\n{\\n    options(width = purrr::pluck(pkg, \\\"meta\\\", \\\"code\\\", \\\"width\\\", .default = 80))\\n    if (is.function(old_pre)) {\\n        old_pre(...)\\n    }\\n}, post_knit = function (...) \\n{\\n    op(base(...), overlay(...))\\n}, pre_processor = function (...) \\n{\\n    op(base(...), overlay(...))\\n}, intermediates_generator = function (original_input, intermediates_dir) \\n{\\n    copy_render_intermediates(original_input, intermediates_dir, !self_contained)\\n}, post_processor = function (metadata, input_file, output_file, ...) \\n{\\n    original_output_file <- output_file\\n    output_file <- overlay(metadata, input_file, output_file, ...)\\n    if (!is.null(attr(output_file, \\\"post_process_original\\\"))) \\n        base(metadata, input_file, original_output_file, ...)\\n    base(metadata, input_file, output_file, ...)\\n}, file_scope = NULL, on_exit = function () \\n{\\n    if (is.function(base)) \\n        base()\\n    if (is.function(overlay)) \\n        overlay()\\n}), output_options = NULL, quiet = TRUE)), envir = base::quote(<environment>), quote = base::quote(TRUE)): envir\\nbase::do.call(base::do.call, base::c(base::readRDS(\\\"/tmp/RtmpQPG2Qr/callr-fun-df1503634f3\\\"), base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, quote = TRUE): envir\\nbase::withCallingHandlers({\\n    NULL\\n    base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\\\"/tmp/RtmpQPG2Qr/callr-fun-df1503634f3\\\"), base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, quote = TRUE), file = \\\"/tmp/RtmpQPG2Qr/callr-res-df17888c6ce\\\", compress = FALSE)\\n    base::flush(base::stdout())\\n    base::flush(base::stderr())\\n    NULL\\n    base::invisible()\\n}, error = function(e) {\\n    {\\n        callr_data <- base::as.environment(\\\"tools:callr\\\")$`__callr_data__`\\n        err <- callr_data$err\\n        if (FALSE) {\\n            base::assign(\\\".Traceback\\\", base::.traceback(4), envir = callr_data)\\n            utils::dump.frames(\\\"__callr_dump__\\\")\\n            base::assign(\\\".Last.dump\\\", .GlobalEnv$`__callr_dump__`, envir = callr_data)\\n            base::rm(\\\"__callr_dump__\\\", envir = .GlobalEnv)\\n        }\\n        e <- err$process_call(e)\\n        e2 <- err$new_error(\\\"error in callr subprocess\\\")\\n        class <- base::class\\n        class(e2) <- base::c(\\\"callr_remote_error\\\", class(e2))\\n        e2 <- err$add_trace_back(e2)\\n        cut <- base::which(e2$trace$scope == \\\"global\\\")[1]\\n        if (!base::is.na(cut)) {\\n            e2$trace <- e2$trace[-(1:cut), ]\\n        }\\n        base::saveRDS(base::list(\\\"error\\\", e2, e), file = base::paste0(\\\"/tmp/RtmpQPG2Qr/callr-res-df17888c6ce\\\", \\\".error\\\"))\\n    }\\n}, interrupt = function(e) {\\n    {\\n        callr_data <- base::as.environment(\\\"tools:callr\\\")$`__callr_data__`\\n        err <- callr_data$err\\n        if (FALSE) {\\n            base::assign(\\\".Traceback\\\", base::.traceback(4), envir = callr_data)\\n            utils::dump.frames(\\\"__callr_dump__\\\")\\n            base::assign(\\\".Last.dump\\\", .GlobalEnv$`__callr_dump__`, envir = callr_data)\\n            base::rm(\\\"__callr_dump__\\\", envir = .GlobalEnv)\\n        }\\n        e <- err$process_call(e)\\n        e2 <- err$new_error(\\\"error in callr subprocess\\\")\\n        class <- base::class\\n        class(e2) <- base::c(\\\"callr_remote_error\\\", class(e2))\\n        e2 <- err$add_trace_back(e2)\\n        cut <- base::which(e2$trace$scope == \\\"global\\\")[1]\\n        if (!base::is.na(cut)) {\\n            e2$trace <- e2$trace[-(1:cut), ]\\n        }\\n        base::saveRDS(base::list(\\\"error\\\", e2, e), file = base::paste0(\\\"/tmp/RtmpQPG2Qr/callr-res-df17888c6ce\\\", \\\".error\\\"))\\n    }\\n}, callr_message = function(e) {\\n    base::try(base::signalCondition(e))\\n}): expr\\ndoTryCatch(return(expr), name, parentenv, handler): expr\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): expr\\ntryCatchList(expr, names[-nh], parentenv, handlers[-nh]): expr\\ndoTryCatch(return(expr), name, parentenv, handler): expr\\ntryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh], parentenv, handlers[[nh]]): expr\\ntryCatchList(expr, classes, parentenv, handlers): expr\\nbase::tryCatch(base::withCallingHandlers({\\n    NULL\\n    base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\\\"/tmp/RtmpQPG2Qr/callr-fun-df1503634f3\\\"), base::list(envir = .GlobalEnv, quote = TRUE)), envir = .GlobalEnv, quote = TRUE), file = \\\"/tmp/RtmpQPG2Qr/callr-res-df17888c6ce\\\", compress = FALSE)\\n    base::flush(base::stdout())\\n    base::flush(base::stderr())\\n    NULL\\n    base::invisible()\\n}, error = function(e) {\\n    {\\n        callr_data <- base::as.environment(\\\"tools:callr\\\")$`__callr_data__`\\n        err <- callr_data$err\\n        if (FALSE) {\\n            base::assign(\\\".Traceback\\\", base::.traceback(4), envir = callr_data)\\n            utils::dump.frames(\\\"__callr_dump__\\\")\\n            base::assign(\\\".Last.dump\\\", .GlobalEnv$`__callr_dump__`, envir = callr_data)\\n            base::rm(\\\"__callr_dump__\\\", envir = .GlobalEnv)\\n        }\\n        e <- err$process_call(e)\\n        e2 <- err$new_error(\\\"error in callr subprocess\\\")\\n        class <- base::class\\n        class(e2) <- base::c(\\\"callr_remote_error\\\", class(e2))\\n        e2 <- err$add_trace_back(e2)\\n        cut <- base::which(e2$trace$scope == \\\"global\\\")[1]\\n        if (!base::is.na(cut)) {\\n            e2$trace <- e2$trace[-(1:cut), ]\\n        }\\n        base::saveRDS(base::list(\\\"error\\\", e2, e), file = base::paste0(\\\"/tmp/RtmpQPG2Qr/callr-res-df17888c6ce\\\", \\\".error\\\"))\\n    }\\n}, interrupt = function(e) {\\n    {\\n        callr_data <- base::as.environment(\\\"tools:callr\\\")$`__callr_data__`\\n        err <- callr_data$err\\n        if (FALSE) {\\n            base::assign(\\\".Traceback\\\", base::.traceback(4), envir = callr_data)\\n            utils::dump.frames(\\\"__callr_dump__\\\")\\n            base::assign(\\\".Last.dump\\\", .GlobalEnv$`__callr_dump__`, envir = callr_data)\\n            base::rm(\\\"__callr_dump__\\\", envir = .GlobalEnv)\\n        }\\n        e <- err$process_call(e)\\n        e2 <- err$new_error(\\\"error in callr subprocess\\\")\\n        class <- base::class\\n        class(e2) <- base::c(\\\"callr_remote_error\\\", class(e2))\\n        e2 <- err$add_trace_back(e2)\\n        cut <- base::which(e2$trace$scope == \\\"global\\\")[1]\\n        if (!base::is.na(cut)) {\\n            e2$trace <- e2$trace[-(1:cut), ]\\n        }\\n        base::saveRDS(base::list(\\\"error\\\", e2, e), file = base::paste0(\\\"/tmp/RtmpQPG2Qr/callr-res-df17888c6ce\\\", \\\".error\\\"))\\n    }\\n}, callr_message = function(e) {\\n    base::try(base::signalCondition(e))\\n}), error = function(e) {\\n    NULL\\n    if (FALSE) {\\n        base::try(base::stop(e))\\n    }\\n    else {\\n        base::invisible()\\n    }\\n}, interrupt = function(e) {\\n    NULL\\n    if (FALSE) {\\n        e\\n    }\\n    else {\\n        base::invisible()\\n    }\\n}): expr\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\ntools:callr\\npackage:base\\n\""},{"path":"/articles/env_check.html","id":"argument-pos","dir":"Articles","previous_headings":"","what":"Argument pos","title":"env_check","text":"","code":"env_check(pos = 1) # check the object \"NULL\" in the environment one step above the env_check() environment > [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN :\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh], parentenv, handlers[[nh]]): name\\n.GlobalEnv: .Random.seed name pos\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\ntools:callr\\npackage:base\\n\""},{"path":"/articles/env_check.html","id":"argument-name","dir":"Articles","previous_headings":"","what":"Argument name","title":"env_check","text":"","code":"env_check(name = \"mean\") # check if the object \"mean\" is in the environment one step above the env_check() environment, and if yes, returns if the same name exists in above environments > [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT mean ARE ALSO PRESENT IN :\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh], parentenv, handlers[[nh]]): name\\n.GlobalEnv: .Random.seed name pos\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\ntools:callr\\npackage:base\\n\""},{"path":"/articles/env_check.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"env_check","text":"","code":"env_check(safer_check = TRUE) # with TRUE, checkings are performed before main code running > [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN :\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh], parentenv, handlers[[nh]]): name\\n.GlobalEnv: .Random.seed name pos\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\ntools:callr\\npackage:base\\n\""},{"path":"/articles/env_check.html","id":"argument-lib_path-and-error_text","dir":"Articles","previous_headings":"","what":"Argument lib_path and error_text","title":"env_check","text":"","code":"env_check(     lib_path = \".\", # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"TEXT ADDED\" # add information in error messages returned by the function. ) > Error:  >  > ================ >  > ERROR IN saferDev:::.pack_and_function_check() INSIDE saferDev::env_check()TEXT ADDED >  > REQUIRED PACKAGE: > saferDev > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/env_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"env_check","text":"","code":"mean <- 2 env_check(     pos = 1,     name = \"mean\",     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) # check if the object \"mean\" is in the environment one step above the env_check() environment, and if yes, returns if the same name exists in above environments > [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT mean ARE ALSO PRESENT IN :\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): name\\ndoTryCatch(return(expr), name, parentenv, handler): name\\ntryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh], parentenv, handlers[[nh]]): name\\n.GlobalEnv: .Random.seed mean name pos\\npackage:base: mean\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\ntools:callr\\npackage:base\\n\""},{"path":[]},{"path":[]},{"path":"/articles/get_message.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"get_message","text":"","code":"char1 <- \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\" # single character string char2 <- \"message('ahah')\" # single character string"},{"path":"/articles/get_message.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"get_message","text":"","code":"char1 # single character string > [1] \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\" char2 # single character string > [1] \"message('ahah')\""},{"path":"/articles/get_message.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"get_message","text":"","code":"get_message(data = char1) > NULL get_message(data = char2) > NULL"},{"path":"/articles/get_message.html","id":"argument-kind","dir":"Articles","previous_headings":"","what":"Argument kind","title":"get_message","text":"","code":"get_message(data = char1, kind = \"warning\") # to get warning messages of the wilcox test > [1] \"WARNING MESSAGE REPORTED:\\nIn wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/get_message.html","id":"argument-header","dir":"Articles","previous_headings":"","what":"Argument header","title":"get_message","text":"","code":"get_message(data = char1, header = FALSE) # to get error messages (by default) without header > NULL"},{"path":"/articles/get_message.html","id":"argument-print_no","dir":"Articles","previous_headings":"","what":"Argument print_no","title":"get_message","text":"","code":"get_message(data = char1, print_no = TRUE) # print a message saying that no message reported > [1] \"NO ERROR MESSAGE REPORTED\""},{"path":"/articles/get_message.html","id":"argument-text","dir":"Articles","previous_headings":"","what":"Argument text","title":"get_message","text":"","code":"get_message(     data = char2,      print_no = TRUE,      text = \"IN A\" ) # print a message even if the argument print_no is TRUE > [1] \"NO ERROR MESSAGE REPORTED IN A\""},{"path":"/articles/get_message.html","id":"argument-kind-header-print_no-text","dir":"Articles","previous_headings":"","what":"Argument kind, header, print_no, text","title":"get_message","text":"","code":"get_message(     data = char1,      kind = \"warning\",      header = FALSE,      print_no = TRUE,      text = \"IN A\" ) # print the warning message in text > [1] \"simpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/get_message.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"get_message","text":"","code":"get_message(data = char2, safer_check = TRUE) # with TRUE, checkings are performed before main code running > NULL"},{"path":"/articles/get_message.html","id":"argument-lib_path-and-error_text","dir":"Articles","previous_headings":"","what":"Argument lib_path and error_text","title":"get_message","text":"","code":"get_message(     lib_path = \".\", # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"TEXT ADDED\" # add information in error messages returned by the function. ) > Error:  >  > ================ >  > ERROR IN saferDev::get_message()TEXT ADDED >  > FOLLOWING ARGUMENT HAS NO DEFAULT VALUE AND REQUIRE ONE: > data >  > ================"},{"path":"/articles/get_message.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"get_message","text":"","code":"get_message(     data = char1,      kind = \"warning\",      header = FALSE,     print_no = TRUE,      text = \"IN A\",     env = NULL,     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) # print the warning message in text in the environment R_GlobalEnv > [1] \"simpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/is_function_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_function_here","text":"","code":"f <- \"ggplot2::geom_point\" path <- \"blablabla\""},{"path":"/articles/is_function_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_function_here","text":"","code":"f # Character vector of function name > [1] \"ggplot2::geom_point\" path # character vector specifying the absolute pathways of the directories, this lib_path will return an error > [1] \"blablabla\""},{"path":"/articles/is_function_here.html","id":"argument-fun","dir":"Articles","previous_headings":"","what":"Argument fun","title":"is_function_here","text":"","code":"is_function_here(fun = f) # check if the package serpentine is in the computer"},{"path":"/articles/is_function_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running"},{"path":"/articles/is_function_here.html","id":"argument-lib_path-and-error_text","dir":"Articles","previous_headings":"","what":"Argument lib_path and error_text","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     lib_path = \".\", # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"TEXT ADDED\" # add information in error messages returned by the function. ) > Error:  >  > ================ >  > ERROR IN saferDev:::.pack_and_function_check() INSIDE saferDev::is_function_here()TEXT ADDED >  > REQUIRED PACKAGE: > saferDev > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_function_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) # check if the function is present in the package, returns an error because the path doesn't exist"},{"path":"/articles/is_package_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_package_here","text":"","code":"req.pkg <- \"ggplot2\" path <- \"blablabla\""},{"path":"/articles/is_package_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_package_here","text":"","code":"req.pkg # Character vector of package names > [1] \"ggplot2\" path # character vector specifying the absolute pathways of the directories, this lib_path will return an error > [1] \"blablabla\""},{"path":"/articles/is_package_here.html","id":"argument-req_package","dir":"Articles","previous_headings":"","what":"Argument req_package","title":"is_package_here","text":"","code":"is_package_here(req_package = req.pkg) # check if the package is in the computer"},{"path":"/articles/is_package_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_package_here","text":"","code":"is_package_here(     req_package = req.pkg,     safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running"},{"path":"/articles/is_package_here.html","id":"argument-lib_path-and-error_text","dir":"Articles","previous_headings":"","what":"Argument lib_path and error_text","title":"is_package_here","text":"","code":"is_package_here(     req_package = req.pkg,     lib_path = \".\", # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"TEXT ADDED\" # add information in error messages returned by the function. ) > Error:  >  > ================ >  > ERROR IN saferDev:::.pack_and_function_check() INSIDE saferDev::is_package_here()TEXT ADDED >  > REQUIRED PACKAGE: > saferDev > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_package_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_package_here","text":"```","code":"is_package_here(     req_package = req.pkg,     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) # check if the package is in the computer"},{"path":"/articles/report.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"report","text":"","code":"string1 <- \"THIS IS A LOG\" vec1 <- 1:6 # vector of integers vec2 <- letters[1:9] # vector of characters mat1 <- matrix(vec1, nrow = 2, ncol = 3, byrow = TRUE) # matrix of integer having 2 rows and 3 columns dimnames(mat1) <- list(c(\"Row 1\",\"Row 2\"), c(\"C1\", \"C2\", \"C3\")) mat2 <- mat1 mode(mat2) <- \"character\" t1 <- table(mat1) # 1D table vec3 <- as.vector(t1) names(vec3) <- letters[1:6] # vector with names t2 <- table(vec2, vec2) # 2D table l1 <- list(vec1, vec2) # list"},{"path":"/articles/report.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"report","text":"","code":"string1 # string > [1] \"THIS IS A LOG\" vec1 # vector of integers > [1] 1 2 3 4 5 6 vec2 # vector of characters > [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" vec3 # vector of integers with names. No more [1] in front of values > a b c d e f  > 1 1 1 1 1 1 mat1 # matrix of integers with the row names >       C1 C2 C3 > Row 1  1  2  3 > Row 2  4  5  6 mat2 # matrix of characters with the row names >       C1  C2  C3  > Row 1 \"1\" \"2\" \"3\" > Row 2 \"4\" \"5\" \"6\" t1 # 1D table > mat1 > 1 2 3 4 5 6  > 1 1 1 1 1 1 t2 # 2D table >     vec2 > vec2 a b c d e f g h i >    a 1 0 0 0 0 0 0 0 0 >    b 0 1 0 0 0 0 0 0 0 >    c 0 0 1 0 0 0 0 0 0 >    d 0 0 0 1 0 0 0 0 0 >    e 0 0 0 0 1 0 0 0 0 >    f 0 0 0 0 0 1 0 0 0 >    g 0 0 0 0 0 0 1 0 0 >    h 0 0 0 0 0 0 0 1 0 >    i 0 0 0 0 0 0 0 0 1 l1 # list > [[1]] > [1] 1 2 3 4 5 6 >  > [[2]] > [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\""},{"path":"/articles/report.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"report","text":"","code":"report(data = string1, path = \".\") # print the input into the output file in the path report(data = vec1, path = \".\") # idem report(data = vec2, path = \".\") # idem report(data = vec3, path = \".\") # idem report(data = mat1, path = \".\") # idem report(data = mat2, path = \".\") # idem. We cannot see that it is mode character (see noquote below) report(data = t1, path = \".\") # idem report(data = t2, path = \".\") # idem report(data = l1, path = \".\") # idem"},{"path":"/articles/report.html","id":"argument-output","dir":"Articles","previous_headings":"","what":"Argument output","title":"report","text":"","code":"report(data = vec1, output = \"test.txt\", path = \".\") # print the vector vec1 into the output file named \"test.txt\" in the path"},{"path":"/articles/report.html","id":"argument-overwrite","dir":"Articles","previous_headings":"","what":"Argument overwrite","title":"report","text":"","code":"report(data = vec2, overwrite = TRUE, output = \"test.txt\", path = \".\") # if the file exists, the output file content will be erased before printing > Error:  >  > ================ >  > ERROR IN saferDev::report(). >  > FILE DEFINED BY THE path AND output ARGUMENTS > ./test.txt > ALREADY EXISTS AND CANNOT BE OVERWRITTEN. > PLEASE: > REMOVE THE FILE > OR CHANGE THE NAME OF THE output ARGUMENT > OR SET THE overwrite ARGUMENT TO FALSE TO APPEND IN THE EXISTING FILE. >  >  > ================"},{"path":"/articles/report.html","id":"argument-rownames_kept","dir":"Articles","previous_headings":"","what":"Argument rownames_kept","title":"report","text":"","code":"report(   data = mat1,    rownames_kept = TRUE,    path = \".\" ) # keep the row names when print the matrix mat1 in the file  report(   data = mat1,    rownames_kept = FALSE,    path = \".\" ) # remove the row names  report(   data = t1,    rownames_kept = TRUE,    path = \".\" ) # keep the row names when print the table t1 in the file  report(   data = t1,    rownames_kept = FALSE,    path = \".\" ) # remove the row names  report(   data = t2,    rownames_kept = TRUE,    path = \".\" ) # keep the row names when print the table t2 in the file  report(   data = t2,    rownames_kept = FALSE,    path = \".\" ) # remove the row names"},{"path":"/articles/report.html","id":"argument-vector_cat","dir":"Articles","previous_headings":"","what":"Argument vector_cat","title":"report","text":"","code":"report(   data = vec3,    vector_cat = TRUE,    path = \".\" ) # print a vector of length > 1 using cat() instead of capture.output() : names are lost."},{"path":"/articles/report.html","id":"argument-noquote","dir":"Articles","previous_headings":"","what":"Argument noquote","title":"report","text":"","code":"report(   data = mat2,    noquote = FALSE,    path = \".\" ) # quote are kept for the characters."},{"path":"/articles/report.html","id":"argument-sep","dir":"Articles","previous_headings":"","what":"Argument sep","title":"report","text":"","code":"report(   data = vec1,    sep = 4,    path = \".\" ) # 4 lines after printed data"},{"path":"/articles/report.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"report","text":"","code":"report(     data = vec1,      safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running  > Error:  >  > ================ >  > ERROR IN saferDev::report(). >  > FOLLOWING ARGUMENT HAS NO DEFAULT VALUE AND REQUIRE ONE: > path >  > ================"},{"path":"/articles/report.html","id":"argument-lib_path-and-error_text","dir":"Articles","previous_headings":"","what":"Argument lib_path and error_text","title":"report","text":"","code":"report(     data = vec1,      lib_path = \".\", # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"TEXT ADDED\" # add information in error messages returned by the function. ) > Error:  >  > ================ >  > ERROR IN saferDev::report()TEXT ADDED >  > FOLLOWING ARGUMENT HAS NO DEFAULT VALUE AND REQUIRE ONE: > path >  > ================"},{"path":"/articles/report.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"report","text":"","code":"report(     data = mat2,      output = \"test2.txt\",      path = \".\",      overwrite = TRUE,      rownames_kept = TRUE,      vector_cat = TRUE,      noquote = FALSE,      sep = 4,     safer_check = TRUE, # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function.     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories.     error_text = \"\" # add information in error messages returned by the function. ) # matrix mat1 will be print in the file \"text2.txt\" in the path, with quote and row names being kept, and 4 lines after printing data"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haiding Wang. Author, contributor. Gael Millot. Maintainer, author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang H, Millot G (2025). saferDev: R function pipeline development. R package version 1.0.","code":"@Manual{,   title = {saferDev: R function and pipeline development},   author = {Haiding Wang and Gael Millot},   year = {2025},   note = {R package version 1.0}, }"},{"path":[]},{"path":"/index.html","id":"table-of-content","dir":"","previous_headings":"","what":"Table of content","title":"R function and pipeline development","text":"Description Content Versions Installation Licence Citations Credits Acknowledgements","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"R function and pipeline development","text":"Set R functions development R functions, written according safer project specifications.","code":""},{"path":"/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"R function and pipeline development","text":"Read vignette(\"saferDev\") details.","code":""},{"path":"/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"R function and pipeline development","text":"different saferDev releases tagged .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R function and pipeline development","text":"saferDev can currently installed GitHub: Older versions can installed like :","code":"# install.packages(\"remotes\") remotes::install_github(\"https://github.com/safer-r/saferDev\") # or open R as admin and remotes::install_github(\"https://github.com/safer-r/saferDev\", lib = \"C:/Program Files/R/R-4.4.2/library\") v <- \"v1.0\" # desired tag version remotes::install_github(paste0(\"https://github.com/safer-r/saferDev/tree/\", v))"},{"path":"/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"R function and pipeline development","text":"package can redistributed /modified terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. Distributed hope useful, without warranty; without even implied warranty merchandability fitness particular purpose. See GNU General Public License details https://www.gnu.org/licenses Licence.txt attached file.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"R function and pipeline development","text":"using functions saferDev, please cite: Wang H, Han Y, Serizay J, Millot GA (2023). R saferDev package. https://github.com/safer-r/saferDev/.","code":""},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"R function and pipeline development","text":"Haiding Wang, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Yushi Han, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Jacques Serizay, Spatial Regulation Genomes team, Institut Pasteur, Paris, France Gael . Millot, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"R function and pipeline development","text":"developers & maintainers mentioned softwares packages, including: R Git Github","code":""},{"path":"/reference/all_args_here.html","id":null,"dir":"Reference","previous_headings":"","what":"all_args_here — all_args_here","title":"all_args_here — all_args_here","text":"Verify functions used inside function written arguments. instance: base::paste0(letters[1:2], collapse = NULL, recycle0 = FALSE) paste0(letters[1:2]).","code":""},{"path":"/reference/all_args_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"all_args_here — all_args_here","text":"","code":"all_args_here(   x,   export = FALSE,   path_out = \".\",   df_name = \"res.tsv\",   overwrite = FALSE,   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/all_args_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"all_args_here — all_args_here","text":"x Function name, written without quotes brackets. export Single logical value. Export data frame .tsv file? TRUE, data frame returned function exported. path_out Single character string indicating absolute pathway folder export data frame. path_out = \".\" means R working directory set user. Ignored export FALSE df_name Single character string indicating name exported data frame file. Ignored export FALSE. overwrite Single logical value. Overwrite potential df_name file already existing path_out? Ignored export FALSE. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/all_args_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"all_args_here — all_args_here","text":"data frame indicating missing arguments message saying everything seems fine. export argument TRUE, data frame exported res.tsv instead returned. Data frame:   $LINE_NB: line number function code (starting \"<- function\" line, .e., without counting #' header lines)  $FUN_NAME: function name.  $FUN_ARGS: written arguments $FUN_NAME. \"NOT_CONSIDERED\" means function quotes $  $FUN_POS: position first character function name $LINE_NB line code.  $DEF_ARGS: defaults arguments $FUN_NAME. \"NO_ARGS\" means function arguments. \"INTERNAL_FUNCTION\" means function created inside checked function. \"SKIPPED\" means function analyzed reason indicated \"details\" section .  $MISSING_ARG_NAMES: missing argument names $FUN_ARGS.  $MISSING_ARGS: missing arguments values $FUN_ARGS.  $STATUS: either \"GOOD\", meaning arguments already written, new proposal arguments writing, indicates arguments fully written (abbreviation discouraged), nothing. additionnal message \"EVERYTHING SEEMS CLEAN\" $STATUS column made \"\" \"GOOD\".","code":""},{"path":"/reference/all_args_here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"all_args_here — all_args_here","text":"precisely, all_args_here() verifies strings opening bracket \"(\" written arguments. Thus, check function names written without brackets, like FUN argument functions, e.g., sapply(1:3, FUN = .character). perl regex used detect function name : \"([-zA-Z]|\\.[-zA-Z._])[-zA-Z0-9._]*\\s*\\(\". Currently,  all_args_here() detect functions written quotes, like \"+\"() \"rownames<-\"(x, \"\"). Function names preceeded $ considered. following R functions skipped: \"function\", \"\", \"\", \"\", \"repeat\" \"else\". Warning: following R functions also skipped (indicated \"SKIPPED\" $DEF_ARGS column returned data frame) indicated reason: \".environment\" (https://bugs.r-project.org/show_bug.cgi?id=18849). Warning: functions, like rownames(), different arguments depending whether something assigned (e.g., rownames(x) <- \"\") . all_args_here() function always propose arguments defined help page without assignement, meaning detect assignation. way -pass use \"exact\" writing function. instance, base::\"rownames<-\"(x, \"\") instead using base::rownames(x) <- \"\", use getAnywhere(\"rownames<-\") see arguments function. time, all_args_here() check inside comments, unexpected writing dupe all_args_here(). Please, report https://github.com/safer-r/saferDev/issues case. returned line numbers indicative, depending source checked. instance, saferDev::report (compiled) line numbers source file (https://github.com/safer-r/saferDev/blob/main/R/report.R). Notably, compiled functions comments anymore, compared source function sourced working environment. addition, counting starts \"<- function\" line, .e., without counting #' header lines potentially present source files. function works notably replacing first code: 1) three consecutive characters \"'\" '\"' three spaces, 2) \"\\\"'\" '\\'\"' four spaces 3) escape quotes like \\\" \\' two spaces. Warnings:  1) function properly work comma present default argument values. Please, report https://github.com/safer-r/saferDev/issues case. 2) Proposals STATUS column suggestions, difficult anticipate exceptions arguments writing.","code":""},{"path":"/reference/all_args_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"all_args_here — all_args_here","text":"Gael Millot","code":""},{"path":"/reference/all_args_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"all_args_here — all_args_here","text":"","code":"if (FALSE)  # Example that return an error all_args_here(mean) # example that return an error source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test2.R\") ; all_args_here(test2) # the checked function must be executable #> Error:  #>  #> ================ #>  #> ERROR IN saferDev:::.all_args_here_fill() INSIDE saferDev::all_args_here(). #>  #> THE TESTED FUNCTION test2 SEEMS TO HAVE A WRITING ERROR IN LINE 13 AND FUNCTION length. #> PLEASE, RUN THE TESTED FUNCTION FIRST. #>  #> ================ #>   FUN2 <- function(x, y){middle_bracket2 <- base::do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame())} all_args_here(FUN2, safer_check = FALSE) #>  #> INSIDE FUN2(), ARGUMENTS ARE MISSING. #>  #>   LINE_NB     FUN_NAME #> 1       1      do.call #> 2       1 parent.frame #>                                                                                    FUN_ARGS #> 1 do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) #> 2                                                                            parent.frame() #>   FUN_POS                                          DEF_ARGS MISSING_ARG_NAMES #> 1      41 what, args, quote = FALSE, envir = parent.frame()                   #> 2     115                                             n = 1                 n #>   MISSING_ARGS              STATUS #> 1                             GOOD #> 2        n = 1 parent.frame(n = 1) source(\"https://raw.githubusercontent.com/safer-r/.github/refs/heads/main/profile/backbone.R\") all_args_here(BACKBONE, export = TRUE, safer_check = FALSE) #>  #> AFTER RUNNING all_args_here() OF THE saferDev PACKAGE: #> RESULT EXPORTED IN: #> ./res.tsv #> BUT INSIDE BACKBONE(), EVERYTHING SEEMS CLEAN. #>"},{"path":"/reference/arg_check.html","id":null,"dir":"Reference","previous_headings":"","what":"arg_check — arg_check","title":"arg_check — arg_check","text":"Check expected values argument functions: class, type, mode, length, restricted values panel, kind numeric values addition distinction 'integer' 'double' (proportion ? Inf values authorized? negative values authorized? Integers type 'double'?)","code":""},{"path":"/reference/arg_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arg_check — arg_check","text":"","code":"arg_check(   data,   class = NULL,   typeof = NULL,   mode = NULL,   length = NULL,   prop = FALSE,   double_as_integer_allowed = FALSE,   options = NULL,   all_options_in_data = FALSE,   na_contain = FALSE,   neg_values = TRUE,   inf_values = TRUE,   print = FALSE,   data_name = NULL,   data_arg = TRUE,   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/arg_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arg_check — arg_check","text":"data Object test. class Single character string. Either one class() result \"vector\" \"ggplot2\" (.e., objects class c(\"gg\", \"ggplot\")) NULL. See warning section . typeof Single character string. Either one typeof() result NULL. mode Single character string. Either one mode() result (non-vector object) NULL. length Single numeric value indicating length object. considered NULL. prop Single logical value. numeric values 0 1 (proportion)? TRUE, can used alone, without considering class, etc. double_as_integer_allowed Single logical value. TRUE, error reported cheking message argument set typeof == \"integer\" class == \"integer\", reality typeof == \"double\" class == \"numeric\" numbers strictly zero modulo (remainder division). means <- 1, typeof() -> \"double\" considered integer double_as_integer_allowed = TRUE. WARNING: data mod 1 == 0L isTRUE(.equal(data mod 1, 0)) used argument checks integers stored double (check decimal numbers approximate integers). options Vector character strings integers indicating possible option values data argument, NULL. Numbers type \"double\" accepted 0 modulo. all_options_in_data Single logical value. TRUE, options must present least data argument, nothing else. FALSE, options must present data argument, nothing else. Ignored options base::.null. na_contain Single logical value. Can data argument contain NA? neg_values Single logical value. negative numeric values authorized? Warning: default setting TRUE, meaning , case, check performed presence negative values. neg_values argument activated set FALSE. addition, (1) neg_values = FALSE can used class, typeof mode arguments NULL, otherwise return error message, (2) presence negative values checked neg_values = FALSE tested object factor following checking message returned \"OBJECT MUST MADE NON NEGATIVE VALUES FACTOR\". inf_values Single logical value. infinite numeric values authorized (Inf -Inf)? Identical remarks neg_values argument. print Single logical value. Print message $problem TRUE? Warning: set default FALSE, facilitates control checking message output using arg_check() inside functions. See example section. data_name Single character string indicating name object test. NULL, use assigned data argument returned message. data_arg Single logical value. tested object function argument? TRUE (default), \"ARGUMENT\" written messages, otherwise \"OBJECT\". safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\". note, arg_check(), error_text also used end string returned problem detected.","code":""},{"path":"/reference/arg_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arg_check — arg_check","text":"list containing: - §problem: logical. problem detected? - §text: message indicating details problem, absence problem. - §object.name: value data_name argument (.e., name checked object provided, NULL otherwise).","code":""},{"path":"/reference/arg_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arg_check — arg_check","text":"options == NULL, least class type mode length argument must non-null. options non-null, class, type mode must NULL, length can NULL specified. function tests written arguments, even written incoherent. instance, arg_check(data = factor(1), class = \"factor\", mode = \"character\") return problem, whatever object tested data argument, object can class \"factor\" mode \"character\" (factors class \"factor\" mode \"numeric\"). note, length object class \"environment\" always 0. tested object base::.null, function always return checking problem. Argument \"class\" value \"vector\" means object tested class(data) returning \"numeric\", \"integer\", \"character\", \"logical\", \"complex\" \"expression\". Please, use another value class (e.g., class = \"call\" class = \"list\") types class objects Since R >= 4.0.0, class(matrix()) returns \"matrix\" \"array\", \"matrix\" alone . However, use argument class = \"matrix\" check matrix object (class \"matrix\" \"array\" R >= 4.0.0) use argument class = \"array\" check array object (class \"array\" R >= 4.0.0).","code":""},{"path":[]},{"path":"/reference/arg_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arg_check — arg_check","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/arg_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arg_check — arg_check","text":"","code":"test <- matrix(1:3) if (FALSE)  # Example that return an error arg_check(data = test, print = TRUE, class = \"vector\", mode = \"numeric\")  # error: THE test ARGUMENT MUST BE CLASS vector  arg_check(data = test, print = TRUE, class = \"matrix\", mode = \"numeric\") #> $problem #> [1] FALSE #>  #> $text #> [1] \"NO PROBLEM DETECTED FOR THE test ARGUMENT.\" #>  #> $object.name #> [1] \"test\" #>  arg_check(data = test, print = TRUE, class = \"matrix\", mode = \"numeric\", error_text = \" using saferDev::arg_check()\") #> $problem #> [1] FALSE #>  #> $text #> [1] \"NO PROBLEM DETECTED FOR THE test ARGUMENT using saferDev::arg_check()\" #>  #> $object.name #> [1] \"test\" #>"},{"path":"/reference/arg_test.html","id":null,"dir":"Reference","previous_headings":"","what":"arg_test — arg_test","title":"arg_test — arg_test","text":"Test combinations argument values function.","code":""},{"path":"/reference/arg_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arg_test — arg_test","text":"","code":"arg_test(   fun,   arg,   val,   expect_error = NULL,   parall = FALSE,   thread_nb = NULL,   print_count = 10,   plot_fun = FALSE,   export = FALSE,   res_path = \".\",   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/arg_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arg_test — arg_test","text":"fun Single character string indicating name function tested (without brackets). arg Vector character strings arguments fun. least arguments default values must present vector. val List number compartments equal length arg, compartment containing values corresponding argument arg. different value must list vector. instance, argument 3 arg logical argument (values accepted TRUE, FALSE, NA). Thus, compartment 3 val can either list(TRUE, FALSE, NA), c(TRUE, FALSE, NA). NULL value alone must written list(NULL). expect_error List exactly structure val argument, containing FALSE TRUE, depending whether error expected (TRUE) (FALSE) corresponding value val. message returned depending discrepancies expected observed errors. See examples . BEWARE: always possible write expected errors combination argument values. Ignored NULL. parall Single logical value. Force parallelization ? thread_nb Single numeric integer indicating number threads use ever parallelization required. NULL, available threads used. Ignored parall FALSE. print_count Single interger value. Print working progress message every print_count loops. BEWARE: can increase substentially time complete process using small integer value, like 10 instance. Use Inf loop message desired. plot_fun Single logical value. Plot plotting function tested test? Ignored tested function graphic function. export Single logical value. Export results .RData file .tsv file? FALSE, return list console (see ). BEWARE: automatically set TRUE parall TRUE. means using parallelization, results systematically exported, returned console. res_path Single character string indicating absolute pathway folder txt results pdfs, containing plots, saved (default working directory). Several txt pdf, one per thread, parallelization. Ignored export FALSE. Must specified parall TRUE export TRUE. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/arg_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arg_test — arg_test","text":"One several pdf plotting function tested plot_fun argument TRUE. , export FALSE list containing: - $fun: tested function. - $ini: initial input values. - $data: data frame combination tested, containing following columns: # different values tested, named arguments      - $kind: vector character strings indicating kind test result: either \"ERROR\", \"WARNING\", \"OK\".      - $problem: logical vector indicating error . - $expected.error: optional logical vector indicating expected error specified expect_error argument.      - $message: either NULL $kind always \"OK\", messages. - $sys.info: system packages info. export TRUE: - list object .RData file. - also $data data frame .tsv file. - expect_error non NULL discrepancy, $data data frame .tsv file containing rows discrepancies expected observed errors.","code":""},{"path":"/reference/arg_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arg_test — arg_test","text":"Limited 43 arguments least 2 values . total number arguments tested can additional arguments single value. limit due nested \"\" loops (https://stat.ethz.ch/pipermail/r-help/2008-March/157341.html), limitation away number tests performed 2^43.","code":""},{"path":[]},{"path":"/reference/arg_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arg_test — arg_test","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/arg_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arg_test — arg_test","text":"","code":"arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA))) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> test JOB END #>  #> TIME: 2025-05-18 01:05:31.491561 #>  #> TOTAL TIME LAPSE: 0S #>  #>  #> $fun #> [1] \"unique\" #>  #> $ini #> arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(x = list(1:10,  #>     c(1, 1, 2, 8), NA), incomparable = c(TRUE, FALSE, NA))) #>  #> $data #>            X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. #> arg_test_1    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_2    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_3    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_4     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_5     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_6     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical #>            X.SPECIAL.VALUE.OF.CLASS.logical.AND.TYPE.logical. kind problem #> arg_test_1    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_2    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_3    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_4    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_5    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_6    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #>            message #> arg_test_1         #> arg_test_2         #> arg_test_3         #> arg_test_4         #> arg_test_5         #> arg_test_6         #> arg_test_7         #> arg_test_8         #> arg_test_9         #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      brio_1.1.4         #>  [5] bslib_0.7.0        cachem_1.0.8       cli_3.6.2          colorspace_2.1-0   #>  [9] compiler_4.3.3     curl_5.2.1         desc_1.4.3         digest_0.6.35      #> [13] downlit_0.4.3      evaluate_0.23      fansi_1.0.6        fastmap_1.1.1      #> [17] fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      glue_1.7.0         #> [21] grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  htmlwidgets_1.6.4  #> [25] httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     knitr_1.46         #> [29] lifecycle_1.0.4    lubridate_1.9.3    magrittr_2.0.3     memoise_2.0.1      #> [33] munsell_0.5.1      parallel_4.3.3     pillar_1.9.0       pkgconfig_2.0.3    #> [37] pkgdown_2.0.9      purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [41] remotes_2.5.0.9000 rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [45] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [49] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [53] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [57] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA),  incomparable = c(TRUE, FALSE, NA)), expect_error = list(x = list(FALSE, FALSE, TRUE),  incomparable = c(FALSE, FALSE, TRUE))) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE $data RESULT) #>  #> test JOB END #>  #> TIME: 2025-05-18 01:05:31.725361 #>  #> TOTAL TIME LAPSE: 0S #>  #>  #> $fun #> [1] \"unique\" #>  #> $ini #> arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(x = list(1:10,  #>     c(1, 1, 2, 8), NA), incomparable = c(TRUE, FALSE, NA)), expect_error = list(x = list(FALSE,  #>     FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE))) #>  #> $data #>            X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. #> arg_test_1    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_2    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_3    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_4     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_5     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_6     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical #>            X.SPECIAL.VALUE.OF.CLASS.logical.AND.TYPE.logical. kind problem #> arg_test_1    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_2    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_3    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_4    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_5    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_6    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_7    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_8    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #> arg_test_9    SPECIAL VALUE OF CLASS logical AND TYPE logical   OK   FALSE #>            expected.error message #> arg_test_1          FALSE         #> arg_test_2          FALSE         #> arg_test_3           TRUE         #> arg_test_4          FALSE         #> arg_test_5          FALSE         #> arg_test_6           TRUE         #> arg_test_7           TRUE         #> arg_test_8           TRUE         #> arg_test_9           TRUE         #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      brio_1.1.4         #>  [5] bslib_0.7.0        cachem_1.0.8       cli_3.6.2          colorspace_2.1-0   #>  [9] compiler_4.3.3     curl_5.2.1         desc_1.4.3         digest_0.6.35      #> [13] downlit_0.4.3      evaluate_0.23      fansi_1.0.6        fastmap_1.1.1      #> [17] fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      glue_1.7.0         #> [21] grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  htmlwidgets_1.6.4  #> [25] httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     knitr_1.46         #> [29] lifecycle_1.0.4    lubridate_1.9.3    magrittr_2.0.3     memoise_2.0.1      #> [33] munsell_0.5.1      parallel_4.3.3     pillar_1.9.0       pkgconfig_2.0.3    #> [37] pkgdown_2.0.9      purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [41] remotes_2.5.0.9000 rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [45] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [49] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [53] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [57] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)),  expect_error = list(x = c(FALSE, FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE)),  export = TRUE, res_path = getwd()) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE discrepancy_table_from_arg_test_1-9.tsv FILE) #>  #> test JOB END #>  #> TIME: 2025-05-18 01:05:31.961253 #>  #> TOTAL TIME LAPSE: 0S #>  #>   if (FALSE)  # Example that return an error arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(A = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)))) arg_test(fun = \"round\", arg = c(\"data\", \"dec.nb\", \"after.lead.zero\"), val = list(L1 = list(c(1, 1.0002256, 1.23568), \"a\", NA), L2 = list(2, c(1,3), NA), L3 = c(TRUE, FALSE, NA))) #> Error:  #>  #> ================ #>  #> ERROR IN saferDev::arg_test(). #>  #> SOME OF THE STRINGS IN arg ARE NOT ARGUMENTS OF fun. #> fun ARGUMENTS: #>  #> PROBLEMATIC STRINGS IN arg: #> data dec.nb after.lead.zero #>  #> ================ #>    arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10, 12:13, NA, (1:10)^2),  y = list(1:10, NA, NA)),  expect_error = list(x = list(FALSE, TRUE, TRUE, FALSE),  y = list(FALSE, TRUE, TRUE)), parall = FALSE, thread_nb = NULL, plot_fun = TRUE,  res_path = \".\", lib_path = NULL) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 12 #>  #> LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2025-05-18 01:05:32.319401 #> LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S #>  #> NO DISCREPANCY BETWEEN EXPECTED AND OBSERVED ERRORS #>  #> test JOB END #>  #> TIME: 2025-05-18 01:05:32.334635 #>  #> TOTAL TIME LAPSE: 0S #>  #>  #> $fun #> [1] \"plot\" #>  #> $ini #> arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10,  #>     12:13, NA, (1:10)^2), y = list(1:10, NA, NA)), expect_error = list(x = list(FALSE,  #>     TRUE, TRUE, FALSE), y = list(FALSE, TRUE, TRUE)), parall = FALSE,  #>     thread_nb = NULL, plot_fun = TRUE, res_path = \".\", lib_path = NULL) #>  #> $data #>             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. #> arg_test_01    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_02    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_03    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_04    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_05    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_06    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_07    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_08    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_09    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_10     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_11     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_12     SPECIAL VALUE OF CLASS numeric AND TYPE double #>             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer..1  kind problem #> arg_test_01      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE #> arg_test_02      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_03      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_04      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE #> arg_test_05      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_06      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_07      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE #> arg_test_08      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_09      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_10      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE #> arg_test_11      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_12      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #>             expected.error #> arg_test_01          FALSE #> arg_test_02           TRUE #> arg_test_03           TRUE #> arg_test_04           TRUE #> arg_test_05           TRUE #> arg_test_06           TRUE #> arg_test_07           TRUE #> arg_test_08           TRUE #> arg_test_09           TRUE #> arg_test_10          FALSE #> arg_test_11           TRUE #> arg_test_12           TRUE #>                                                                                      message #> arg_test_01                                                                                  #> arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_10                                                                                  #> arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      brio_1.1.4         #>  [5] bslib_0.7.0        cachem_1.0.8       cli_3.6.2          colorspace_2.1-0   #>  [9] compiler_4.3.3     curl_5.2.1         desc_1.4.3         digest_0.6.35      #> [13] downlit_0.4.3      evaluate_0.23      fansi_1.0.6        fastmap_1.1.1      #> [17] fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      glue_1.7.0         #> [21] grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  htmlwidgets_1.6.4  #> [25] httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     knitr_1.46         #> [29] lifecycle_1.0.4    lubridate_1.9.3    magrittr_2.0.3     memoise_2.0.1      #> [33] munsell_0.5.1      parallel_4.3.3     pillar_1.9.0       pkgconfig_2.0.3    #> [37] pkgdown_2.0.9      purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [41] remotes_2.5.0.9000 rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [45] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [49] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [53] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [57] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10, 12:13, NA, (1:10)^2),  y = list(1:10, NA, NA)), parall = FALSE, thread_nb = 4,  plot_fun = TRUE, res_path = \".\",  lib_path = NULL) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 12 #>  #> LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2025-05-18 01:05:32.609875 #> LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S #>  #> test JOB END #>  #> TIME: 2025-05-18 01:05:32.619715 #>  #> TOTAL TIME LAPSE: 0S #>  #>  #> $fun #> [1] \"plot\" #>  #> $ini #> arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10,  #>     12:13, NA, (1:10)^2), y = list(1:10, NA, NA)), parall = FALSE,  #>     thread_nb = 4, plot_fun = TRUE, res_path = \".\", lib_path = NULL) #>  #> $data #>             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer. #> arg_test_01    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_02    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_03    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_04    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_05    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_06    SPECIAL VALUE OF CLASS integer AND TYPE integer #> arg_test_07    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_08    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_09    SPECIAL VALUE OF CLASS logical AND TYPE logical #> arg_test_10     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_11     SPECIAL VALUE OF CLASS numeric AND TYPE double #> arg_test_12     SPECIAL VALUE OF CLASS numeric AND TYPE double #>             X.SPECIAL.VALUE.OF.CLASS.integer.AND.TYPE.integer..1  kind problem #> arg_test_01      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE #> arg_test_02      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_03      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_04      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE #> arg_test_05      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_06      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_07      SPECIAL VALUE OF CLASS integer AND TYPE integer ERROR    TRUE #> arg_test_08      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_09      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_10      SPECIAL VALUE OF CLASS integer AND TYPE integer    OK   FALSE #> arg_test_11      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #> arg_test_12      SPECIAL VALUE OF CLASS logical AND TYPE logical ERROR    TRUE #>                                                                                      message #> arg_test_01                                                                                  #> arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_10                                                                                  #> arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      brio_1.1.4         #>  [5] bslib_0.7.0        cachem_1.0.8       cli_3.6.2          colorspace_2.1-0   #>  [9] compiler_4.3.3     curl_5.2.1         desc_1.4.3         digest_0.6.35      #> [13] downlit_0.4.3      evaluate_0.23      fansi_1.0.6        fastmap_1.1.1      #> [17] fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      glue_1.7.0         #> [21] grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  htmlwidgets_1.6.4  #> [25] httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     knitr_1.46         #> [29] lifecycle_1.0.4    lubridate_1.9.3    magrittr_2.0.3     memoise_2.0.1      #> [33] munsell_0.5.1      parallel_4.3.3     pillar_1.9.0       pkgconfig_2.0.3    #> [37] pkgdown_2.0.9      purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [41] remotes_2.5.0.9000 rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [45] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [49] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [53] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [57] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>"},{"path":"/reference/colons_check.html","id":null,"dir":"Reference","previous_headings":"","what":"colons_check — colons_check","title":"colons_check — colons_check","text":"Verify functions used inside function preceeded package attribution. instance: base::mean() mean(), saferDev:::.base_op_check() .base_op_check(). Warning: check package good one. Use all_args_here() .","code":""},{"path":"/reference/colons_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colons_check — colons_check","text":"","code":"colons_check(x, safer_check = TRUE, lib_path = NULL, error_text = \"\")"},{"path":"/reference/colons_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"colons_check — colons_check","text":"x function name, written without quotes brackets. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/colons_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"colons_check — colons_check","text":"table-like message indicating missing :: ::: message saying everything seems fine. Table-like: column 1, line number function code (starting \"<- function\" line, .e., without counting #' header lines); column 2,  function name; column 3, code preceeding function name. missing :: :::, message also indicates internal functions created inside checked function code, since functions :: :::.","code":""},{"path":"/reference/colons_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"colons_check — colons_check","text":"Use result modify code function like : <PACKAGE>::<FUNCTION> (<PACKAGE>:::<FUNCTION> function names starting dot) precisely, colons_check() verifies strings opening bracket \"(\" preceeded \"::\" \":::\" checked per se, incorrect writting, like saferDev::.colons_check_message() returns error, base:::sum() ok base::sum(). manner, three colons checked returns error. Warning: function check function names written without brackets, like FUN argument functions, e.g., sapply(1:3, FUN = .character). perl regex used detect function name : \"([-zA-Z]|\\.[-zA-Z._])[-zA-Z0-9._]*\\s*\\(\". Currently,  all_args_here() detect functions written quotes, like \"+\"() \"rownames<-\"(x, \"\"). Function names preceeded $ considered. following R functions skipped: \"function\", \"\", \"\", \"\", \"repeat\" \"else\". time, all_args_here() check inside comments, unexpected writting dupe all_args_here(). Please, report https://github.com/safer-r/saferDev/issues case. returned line numbers indicative, depending source checked. instance, saferDev::report (compiled) line numbers source file (https://github.com/safer-r/saferDev/blob/main/R/report.R). Notably, compiled functions comments anymore, compared source function sourced working environment. addition, counting starts \"<- function\" line, .e., without counting #' header lines potentially present source files. note, package creation, devtools::check() command tells functions wrongly attributed package. Example:      checking dependencies R code ... WARNING       '::' ':::' import declared : 'sbase'       Missing unexported objects:         'base::dev.' 'base::graphics.' 'base::hcl' 'base::par' 'base::read.table' 'saferGG::report'","code":""},{"path":"/reference/colons_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"colons_check — colons_check","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/colons_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"colons_check — colons_check","text":"","code":"colons_check(mean) #>  #>  #> INSIDE mean(), SOME :: OR ::: ARE MISSING BEFORE BASIC FUNCTIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 2\tUseMethod\t\t #>  colons_check(colons_check) #>  #>  #> AFTER RUNNING saferDev::colons_check(). #> INSIDE colons_check(), EVERYTHING SEEMS CLEAN. #>  source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") ; colons_check(test) #>  #>  #> INSIDE test(), SOME :: OR ::: ARE MISSING BEFORE BASIC FUNCTIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 5\tgregexpr\t\tmatches <-  #> 8\tregmatches\t\tmatched_strings <-  #> 11\tsum\t\t #> 18\tsub\t\tresult <-  #> 19\trange\t\t #> 22\treturn\t\t #>  #> INSIDE test(), INTERNAL FUNCTION DETECTED: #> FUN1 #>  #> INSIDE test(), SOME :: OR ::: ARE MISSING BEFORE OTHER FUNCTIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 16\troc1\t\tbase::length( #> 20\troc4\t\ttempo.cat <- base::paste0(\"IAGE\\nLENGTHS OF roc00() (\", base::ks.test( #>"},{"path":"/reference/dot-all_args_here_fill.html","id":null,"dir":"Reference","previous_headings":"","what":".all_args_here_fill — .all_args_here_fill","title":".all_args_here_fill — .all_args_here_fill","text":"Get $MISSING_ARG_NAMES, $MISSING_ARGS $NEW all_args_here().","code":""},{"path":"/reference/dot-all_args_here_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".all_args_here_fill — .all_args_here_fill","text":"","code":".all_args_here_fill(   arg_full,   arg_full_names,   tempo_split,   three_dots_log,   i2,   col1_i2,   col2_i2,   arg_user_setting_x,   warn,   warn_count,   lib_path,   error_text )"},{"path":"/reference/dot-all_args_here_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".all_args_here_fill — .all_args_here_fill","text":"arg_full List arguments function default value. arg_full_names Vector strings names arguments function. Can NULL. tempo_split Vector strings observed argument writing function. three_dots_log Vector logical. ... present among arg_full_names. i2 Single positive non null integer value indicating loop number. col1_i2 Single positive non null integer value indicating code line number checked function. col2_i2 Single string indicating name checked sub function. arg_user_setting_x Single string indicating name checked function. warn Single warning string. Can NULL. warn_count Single positive integer value indicating warning count. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-all_args_here_fill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".all_args_here_fill — .all_args_here_fill","text":"list:    $col6: $MISSING_ARG_NAMES.    $col7: $MISSING_ARGS.    $col8: $STATUS.","code":""},{"path":"/reference/dot-all_args_here_fill.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".all_args_here_fill — .all_args_here_fill","text":"- Warning: requires saferDev::arg_check. safer Backbone section \"######## check required functions required packages\" add function checking presence saferDev:::.all_args_here_fill.","code":""},{"path":"/reference/dot-all_args_here_fill.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".all_args_here_fill — .all_args_here_fill","text":"Gael Millot","code":""},{"path":"/reference/dot-all_args_here_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".all_args_here_fill — .all_args_here_fill","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.all_args_here_fill(arg_full = list(x = quote(expr = )), arg_full_names = \"x\", tempo_split = \"x\", three_dots_log = FALSE, i2 = 1, col1_i2 = 1, col2_i2 =  \"length\", arg_user_setting_x = \"\\\"FUN1\\\"\", warn = NULL, warn_count = 0, lib_path = NULL, error_text = \" INSIDE P1::F1\")"},{"path":"/reference/dot-base_op_check.html","id":null,"dir":"Reference","previous_headings":"","what":".base_op_check — .base_op_check","title":".base_op_check — .base_op_check","text":"Check critical operators R present packages global env. Others functions R scope can overwritten safer functions always use :: using function.","code":""},{"path":"/reference/dot-base_op_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".base_op_check — .base_op_check","text":"","code":".base_op_check(error_text)"},{"path":"/reference/dot-base_op_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".base_op_check — .base_op_check","text":"error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-base_op_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".base_op_check — .base_op_check","text":"error message least one checked operator present R scope, nothing otherwise.","code":""},{"path":"/reference/dot-base_op_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".base_op_check — .base_op_check","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/dot-base_op_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".base_op_check — .base_op_check","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.base_op_check(error_text = \" INSIDE fun1.\") # nothing should happen assign(\"!\", 1) ; assign(\"+\", 2) ; saferDev:::.base_op_check(error_text = \" INSIDE fun1.\") # this example returns an error rm(\"!\") ; rm(\"+\")"},{"path":"/reference/dot-colons_check_message.html","id":null,"dir":"Reference","previous_headings":"","what":".colons_check_message — .colons_check_message","title":".colons_check_message — .colons_check_message","text":"Create message colons_check() function.","code":""},{"path":"/reference/dot-colons_check_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".colons_check_message — .colons_check_message","text":"","code":".colons_check_message(   list_fun,   list_fun_pos,   line_nb,   ini,   arg_user_setting2,   text,   internal_fun_names,   lib_path,   error_text )"},{"path":"/reference/dot-colons_check_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".colons_check_message — .colons_check_message","text":"list_fun List names functions. list_fun_pos List positions first character names functions ini. line_nb Vector integers corresponding line numbers. ini Vector strings initial function code analyzed. arg_user_setting2 List arg user settings. text Either \"BASIC\" \"\". internal_fun_names Vector strings names internal functions function code analyzed. Can NULL. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-colons_check_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".colons_check_message — .colons_check_message","text":"list:  $output.cat: message (string).  $colon_not_here: logical vector. list_fun contain function names without :: ::: ?","code":""},{"path":"/reference/dot-colons_check_message.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".colons_check_message — .colons_check_message","text":"- Warning: requires saferDev::arg_check, saferDev:::.noclean_functions. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.colons_check_message.","code":""},{"path":"/reference/dot-colons_check_message.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".colons_check_message — .colons_check_message","text":"Gael Millot","code":""},{"path":"/reference/dot-colons_check_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".colons_check_message — .colons_check_message","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.colons_check_message(list_fun = list(c2 = \"UseMethod\"), list_fun_pos = list(c2 = 1), line_nb = 2, ini = c(\"function (x, ...) \", \"UseMethod(\\\"mean\\\")\"), arg_user_setting2 = list(x = \"mean\"), text = \"BASIC\", internal_fun_names = NULL, lib_path = NULL, error_text = \" INSIDE P1::F1\")"},{"path":"/reference/dot-extract_all_fun_names.html","id":null,"dir":"Reference","previous_headings":"","what":".extract_all_fun_names — .extract_all_fun_names","title":".extract_all_fun_names — .extract_all_fun_names","text":"Extract function names.","code":""},{"path":"/reference/dot-extract_all_fun_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".extract_all_fun_names — .extract_all_fun_names","text":"","code":".extract_all_fun_names(text, pattern, lib_path, error_text)"},{"path":"/reference/dot-extract_all_fun_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".extract_all_fun_names — .extract_all_fun_names","text":"text Single string. pattern Single string perl regex extract function names. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-extract_all_fun_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".extract_all_fun_names — .extract_all_fun_names","text":"List containing: $string: function names without parenthesis. $pos: position first character function names input string","code":""},{"path":"/reference/dot-extract_all_fun_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".extract_all_fun_names — .extract_all_fun_names","text":"- Warning: requires saferDev::arg_check. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.extract_all_fun_names.","code":""},{"path":"/reference/dot-extract_all_fun_names.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".extract_all_fun_names — .extract_all_fun_names","text":"Gael Millot","code":""},{"path":"/reference/dot-extract_all_fun_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".extract_all_fun_names — .extract_all_fun_names","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.extract_all_fun_names(text = 'This is a test string with sum()', pattern = \"([a-zA-Z]|\\\\.[a-zA-Z._])[a-zA-Z0-9._]*\\\\s*\\\\(\", lib_path = NULL, error_text = \" INSIDE P1::F1\")"},{"path":"/reference/dot-fun_args_pos.html","id":null,"dir":"Reference","previous_headings":"","what":".fun_args_pos — .fun_args_pos","title":".fun_args_pos — .fun_args_pos","text":"Return positions 1st letter first function name string, well opening closing parenthesis, well positions internal parenthesis (inside parenthesis).","code":""},{"path":"/reference/dot-fun_args_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".fun_args_pos — .fun_args_pos","text":"","code":".fun_args_pos(text, pattern, lib_path, error_text)"},{"path":"/reference/dot-fun_args_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".fun_args_pos — .fun_args_pos","text":"text Single string. pattern Single string perl regex extract function name (), using generally paste0(<FUNCTION_NAME>, \"[\\s\\r\\n]*\\(\"). lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-fun_args_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".fun_args_pos — .fun_args_pos","text":"list containing two positions: $begin_fun: position 1st letter function name. $begin: position \"(\" function. $end: position closing \")\" function. $middle_bracket_pos: list positions couple brackets middle begin end positions. compartment, first number position ( second position ). NULL inside brackets.","code":""},{"path":"/reference/dot-fun_args_pos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".fun_args_pos — .fun_args_pos","text":"- Warning: string must cleaned form brackets quotes. Use .in_quotes_replacement() . - Warning: quotes strings escaped, position ( \\\"( 3, 4. - Warning: requires saferDev::arg_check. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.fun_args_pos","code":""},{"path":"/reference/dot-fun_args_pos.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".fun_args_pos — .fun_args_pos","text":"Gael Millot","code":""},{"path":"/reference/dot-fun_args_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".fun_args_pos — .fun_args_pos","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) # Warning : examples only with strings that must be cleaned from brackets between quotes saferDev:::.fun_args_pos(text = ' \"a\" ; paste0(\"I\", paste0(sum(1:3), collapse = \" \"), min(1) ) ; range(2)', pattern = paste0(\"paste0\", \"[\\\\s\\\\r\\\\n]*\\\\(\"), lib_path = NULL, error_text = \" INSIDE P1::F1\")"},{"path":"/reference/dot-functions_detect.html","id":null,"dir":"Reference","previous_headings":"","what":".functions_detect — .functions_detect","title":".functions_detect — .functions_detect","text":"Detect functions names used inside function.","code":""},{"path":"/reference/dot-functions_detect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".functions_detect — .functions_detect","text":"","code":".functions_detect(x, skipped_base, arg_user_setting2, lib_path, error_text)"},{"path":"/reference/dot-functions_detect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".functions_detect — .functions_detect","text":"x Function name, written without quotes brackets. skipped_base Vector strings specifying basic functions skipped detection. arg_user_setting2 Argument user settings list. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-functions_detect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".functions_detect — .functions_detect","text":"list: $code: vector strings code tested function. $all_basic_funs: vector strings names basic R functions. $fun_names: list names functions, considering base::c(\"function\", \"\", \"\", \"\", \"repeat\"). Compartment names indicate code line number functions $code. $fun_names_pos: list position first character $fun_names. Compartment names indicate code line number functions $code. $code_line_nb: vector integers code line numbers code non empty compartment $fun_names $fun_names_pos. $internal_fun_names: vector string names internal functions code tested function. $arg_user_setting: list arg user settings tested function.","code":""},{"path":"/reference/dot-functions_detect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".functions_detect — .functions_detect","text":"check functions inside code exist. Use regex pattern \"([-zA-Z]|\\.[-zA-Z._])[-zA-Z0-9._]*\\s*\\(\" detect function code. $all_basic_funs functions base::c(\"package:stats\", \"package:graphics\",  \"package:grDevices\", \"package:utils\", \"package:datasets\", \"package:methods\", \"Autoloads\", \"package:base\"). Warning: requires saferDev::arg_check, saferDev:::.extract_all_fun_names, saferDev:::.has_odd_number_of_quotes. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.functions_detect.","code":""},{"path":"/reference/dot-functions_detect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".functions_detect — .functions_detect","text":"Gael Millot","code":""},{"path":"/reference/dot-functions_detect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".functions_detect — .functions_detect","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) source(\"C:\\\\Users\\\\gmillot\\\\Documents\\\\Git_projects\\\\safer-r\\\\saferDev\\\\dev\\\\other\\\\test.R\") ; saferDev:::.functions_detect(x = test, arg_user_setting2 = base::list(x =  as.name(x = \"test\")), skipped_base = c(\"function\", \"if\", \"for\", \"while\", \"repeat\", \"else\"), lib_path = NULL, error_text = \" INSIDE P1::F1\") #> $code #>  [1] \"function (text, pattern) \"                                                          #>  [2] \"{\"                                                                                  #>  [3] \"FUN1 <- function() {\"                                                               #>  [4] \"}\"                                                                                  #>  [5] \"matches <- gregexpr(pattern = base::paste0(pattern, \\\"\\\\\\\\(#\\\"), \"                  #>  [6] \"text = text)\"                                                                       #>  [7] \"dt <- base::c(2:8)\"                                                                 #>  [8] \"matched_strings <- regmatches(x = text, m = matches)[[1]]\"                          #>  [9] \"FUN1()\"                                                                             #> [10] \"tempo4 <- a$regmatches(x = text, m = matches)[[1]]\"                                 #> [11] \"sum(1:3)\"                                                                           #> [12] \"a$regmatches(x = 1)\"                                                                #> [13] \"tempo5 <- a$count\"                                                                  #> [14] \"tempo.cat <- base::paste0(\\\"INTERNAL ERROR 4 IN \\\", function.name, \"                #> [15] \"\\\" OF THE \\\", package.name, \\\" PACKAGE\\\\nLENGTHS OF col1 (\\\", \"                     #> [16] \"base::length(roc1()), \\\"), col2 (\\\", base::length(roc2), \"                          #> [17] \"\\\"), AND col3 (\\\", base::length(roc3), \\\"), SHOULD BE EQUAL\\\\n\\\")\"                  #> [18] \"result <- sub(\\\"\\\\\\\\($##\\\", \\\"\\\", matched_strings)\"                                 #> [19] \"range(1:3)\"                                                                         #> [20] \"tempo.cat <- base::paste0(\\\"IAGE\\\\nLENGTHS OF roc00() (\\\", base::ks.test(roc4()), \" #> [21] \"\\\"), and roc0 (\\\", base::length(roc5), \\\") SHOULL\\\\n\\\")\"                            #> [22] \"return(baba)\"                                                                       #> [23] \"base::return(bobo)\"                                                                 #> [24] \"}\"                                                                                  #>  #> $all_basic_funs #>                          package:stats1                          package:stats2  #>                              \".MFclass\"                       \".checkMFClasses\"  #>                          package:stats3                          package:stats4  #>                           \".getXlevels\"                               \".lm.fit\"  #>                          package:stats5                          package:stats6  #>                         \".nknots.smspl\"                         \".preformat.ts\"  #>                          package:stats7                          package:stats8  #>                         \".vcov.aliased\"                                   \"AIC\"  #>                          package:stats9                         package:stats10  #>                               \"ARMAacf\"                              \"ARMAtoMA\"  #>                         package:stats11                         package:stats12  #>                                   \"BIC\"                              \"Box.test\"  #>                         package:stats13                         package:stats14  #>                                     \"C\"                                     \"D\"  #>                         package:stats15                         package:stats16  #>                            \"DF2formula\"                                 \"Gamma\"  #>                         package:stats17                         package:stats18  #>                           \"HoltWinters\"                                   \"IQR\"  #>                         package:stats19                         package:stats20  #>                        \"KalmanForecast\"                            \"KalmanLike\"  #>                         package:stats21                         package:stats22  #>                             \"KalmanRun\"                          \"KalmanSmooth\"  #>                         package:stats23                         package:stats24  #>                       \"NLSstAsymptotic\"                         \"NLSstClosestX\"  #>                         package:stats25                         package:stats26  #>                      \"NLSstLfAsymptote\"                      \"NLSstRtAsymptote\"  #>                         package:stats27                         package:stats28  #>                               \"PP.test\"                                  \"Pair\"  #>                         package:stats29                         package:stats30  #>                                   \"SSD\"                               \"SSasymp\"  #>                         package:stats31                         package:stats32  #>                            \"SSasympOff\"                           \"SSasympOrig\"  #>                         package:stats33                         package:stats34  #>                               \"SSbiexp\"                                 \"SSfol\"  #>                         package:stats35                         package:stats36  #>                                 \"SSfpl\"                            \"SSgompertz\"  #>                         package:stats37                         package:stats38  #>                               \"SSlogis\"                              \"SSmicmen\"  #>                         package:stats39                         package:stats40  #>                             \"SSweibull\"                              \"StructTS\"  #>                         package:stats41                         package:stats42  #>                              \"TukeyHSD\"                                   \"acf\"  #>                         package:stats43                         package:stats44  #>                                \"acf2AR\"                             \"add.scope\"  #>                         package:stats45                         package:stats46  #>                                  \"add1\"                            \"addmargins\"  #>                         package:stats47                         package:stats48  #>                             \"aggregate\"                  \"aggregate.data.frame\"  #>                         package:stats49                         package:stats50  #>                          \"aggregate.ts\"                                 \"alias\"  #>                         package:stats51                         package:stats52  #>                                 \"anova\"                           \"ansari.test\"  #>                         package:stats53                         package:stats54  #>                                   \"aov\"                                \"approx\"  #>                         package:stats55                         package:stats56  #>                             \"approxfun\"                                    \"ar\"  #>                         package:stats57                         package:stats58  #>                               \"ar.burg\"                                \"ar.mle\"  #>                         package:stats59                         package:stats60  #>                                \"ar.ols\"                                 \"ar.yw\"  #>                         package:stats61                         package:stats62  #>                                 \"arima\"                             \"arima.sim\"  #>                         package:stats63                         package:stats64  #>                                \"arima0\"                           \"arima0.diag\"  #>                         package:stats65                         package:stats66  #>                         \"as.dendrogram\"                               \"as.dist\"  #>                         package:stats67                         package:stats68  #>                            \"as.formula\"                             \"as.hclust\"  #>                         package:stats69                         package:stats70  #>                            \"as.stepfun\"                                 \"as.ts\"  #>                         package:stats71                         package:stats72  #>                     \"asOneSidedFormula\"                                   \"ave\"  #>                         package:stats73                         package:stats74  #>                      \"bandwidth.kernel\"                         \"bartlett.test\"  #>                         package:stats75                         package:stats76  #>                            \"binom.test\"                              \"binomial\"  #>                         package:stats77                         package:stats78  #>                                \"biplot\"                                 \"bw.SJ\"  #>                         package:stats79                         package:stats80  #>                                \"bw.bcv\"                                \"bw.nrd\"  #>                         package:stats81                         package:stats82  #>                               \"bw.nrd0\"                                \"bw.ucv\"  #>                         package:stats83                         package:stats84  #>                                \"cancor\"                            \"case.names\"  #>                         package:stats85                         package:stats86  #>                                   \"ccf\"                            \"chisq.test\"  #>                         package:stats87                         package:stats88  #>                              \"cmdscale\"                                  \"coef\"  #>                         package:stats89                         package:stats90  #>                          \"coefficients\"                        \"complete.cases\"  #>                         package:stats91                         package:stats92  #>                               \"confint\"                       \"confint.default\"  #>                         package:stats93                         package:stats94  #>                            \"confint.lm\"                           \"constrOptim\"  #>                         package:stats95                         package:stats96  #>                             \"contr.SAS\"                         \"contr.helmert\"  #>                         package:stats97                         package:stats98  #>                            \"contr.poly\"                             \"contr.sum\"  #>                         package:stats99                        package:stats100  #>                       \"contr.treatment\"                             \"contrasts\"  #>                        package:stats101                        package:stats102  #>                           \"contrasts<-\"                              \"convolve\"  #>                        package:stats103                        package:stats104  #>                        \"cooks.distance\"                            \"cophenetic\"  #>                        package:stats105                        package:stats106  #>                                   \"cor\"                              \"cor.test\"  #>                        package:stats107                        package:stats108  #>                                   \"cov\"                                \"cov.wt\"  #>                        package:stats109                        package:stats110  #>                               \"cov2cor\"                              \"covratio\"  #>                        package:stats111                        package:stats112  #>                                \"cpgram\"                                \"cutree\"  #>                        package:stats113                        package:stats114  #>                                 \"cycle\"                                 \"dbeta\"  #>                        package:stats115                        package:stats116  #>                                \"dbinom\"                               \"dcauchy\"  #>                        package:stats117                        package:stats118  #>                                \"dchisq\"                             \"decompose\"  #>                        package:stats119                        package:stats120  #>                       \"delete.response\"                                \"deltat\"  #>                        package:stats121                        package:stats122  #>                            \"dendrapply\"                               \"density\"  #>                        package:stats123                        package:stats124  #>                       \"density.default\"                                 \"deriv\"  #>                        package:stats125                        package:stats126  #>                                \"deriv3\"                              \"deviance\"  #>                        package:stats127                        package:stats128  #>                                  \"dexp\"                                    \"df\"  #>                        package:stats129                        package:stats130  #>                             \"df.kernel\"                           \"df.residual\"  #>                        package:stats131                        package:stats132  #>                                \"dfbeta\"                               \"dfbetas\"  #>                        package:stats133                        package:stats134  #>                                \"dffits\"                                \"dgamma\"  #>                        package:stats135                        package:stats136  #>                                 \"dgeom\"                                \"dhyper\"  #>                        package:stats137                        package:stats138  #>                               \"diffinv\"                                  \"dist\"  #>                        package:stats139                        package:stats140  #>                                \"dlnorm\"                                \"dlogis\"  #>                        package:stats141                        package:stats142  #>                             \"dmultinom\"                               \"dnbinom\"  #>                        package:stats143                        package:stats144  #>                                 \"dnorm\"                                 \"dpois\"  #>                        package:stats145                        package:stats146  #>                            \"drop.scope\"                            \"drop.terms\"  #>                        package:stats147                        package:stats148  #>                                 \"drop1\"                             \"dsignrank\"  #>                        package:stats149                        package:stats150  #>                                    \"dt\"                            \"dummy.coef\"  #>                        package:stats151                        package:stats152  #>                         \"dummy.coef.lm\"                                 \"dunif\"  #>                        package:stats153                        package:stats154  #>                              \"dweibull\"                               \"dwilcox\"  #>                        package:stats155                        package:stats156  #>                                  \"ecdf\"                           \"eff.aovlist\"  #>                        package:stats157                        package:stats158  #>                               \"effects\"                                 \"embed\"  #>                        package:stats159                        package:stats160  #>                                   \"end\"                                \"estVar\"  #>                        package:stats161                        package:stats162  #>                    \"expand.model.frame\"                            \"extractAIC\"  #>                        package:stats163                        package:stats164  #>                              \"factanal\"                          \"factor.scope\"  #>                        package:stats165                        package:stats166  #>                                \"family\"                                   \"fft\"  #>                        package:stats167                        package:stats168  #>                                \"filter\"                           \"fisher.test\"  #>                        package:stats169                        package:stats170  #>                                \"fitted\"                         \"fitted.values\"  #>                        package:stats171                        package:stats172  #>                               \"fivenum\"                          \"fligner.test\"  #>                        package:stats173                        package:stats174  #>                               \"formula\"                             \"frequency\"  #>                        package:stats175                        package:stats176  #>                         \"friedman.test\"                                \"ftable\"  #>                        package:stats177                        package:stats178  #>                              \"gaussian\"                               \"getCall\"  #>                        package:stats179                        package:stats180  #>                            \"getInitial\"                          \"get_all_vars\"  #>                        package:stats181                        package:stats182  #>                                   \"glm\"                           \"glm.control\"  #>                        package:stats183                        package:stats184  #>                               \"glm.fit\"                                \"hasTsp\"  #>                        package:stats185                        package:stats186  #>                                   \"hat\"                             \"hatvalues\"  #>                        package:stats187                        package:stats188  #>                                \"hclust\"                               \"heatmap\"  #>                        package:stats189                        package:stats190  #>                             \"influence\"                    \"influence.measures\"  #>                        package:stats191                        package:stats192  #>                             \"integrate\"                      \"interaction.plot\"  #>                        package:stats193                        package:stats194  #>                      \"inverse.gaussian\"                        \"is.empty.model\"  #>                        package:stats195                        package:stats196  #>                               \"is.leaf\"                                \"is.mts\"  #>                        package:stats197                        package:stats198  #>                            \"is.stepfun\"                                 \"is.ts\"  #>                        package:stats199                        package:stats200  #>                           \"is.tskernel\"                                \"isoreg\"  #>                        package:stats201                        package:stats202  #>                             \"kernapply\"                                \"kernel\"  #>                        package:stats203                        package:stats204  #>                                \"kmeans\"                                 \"knots\"  #>                        package:stats205                        package:stats206  #>                          \"kruskal.test\"                               \"ks.test\"  #>                        package:stats207                        package:stats208  #>                               \"ksmooth\"                                   \"lag\"  #>                        package:stats209                        package:stats210  #>                              \"lag.plot\"                                  \"line\"  #>                        package:stats211                        package:stats212  #>                                    \"lm\"                                \"lm.fit\"  #>                        package:stats213                        package:stats214  #>                          \"lm.influence\"                               \"lm.wfit\"  #>                        package:stats215                        package:stats216  #>                              \"loadings\"                                 \"loess\"  #>                        package:stats217                        package:stats218  #>                         \"loess.control\"                          \"loess.smooth\"  #>                        package:stats219                        package:stats220  #>                                \"logLik\"                                \"loglin\"  #>                        package:stats221                        package:stats222  #>                                \"lowess\"                               \"ls.diag\"  #>                        package:stats223                        package:stats224  #>                              \"ls.print\"                                 \"lsfit\"  #>                        package:stats225                        package:stats226  #>                                   \"mad\"                           \"mahalanobis\"  #>                        package:stats227                        package:stats228  #>                             \"make.link\"                             \"makeARIMA\"  #>                        package:stats229                        package:stats230  #>                       \"makepredictcall\"                                \"manova\"  #>                        package:stats231                        package:stats232  #>                       \"mantelhaen.test\"                          \"mauchly.test\"  #>                        package:stats233                        package:stats234  #>                          \"mcnemar.test\"                                \"median\"  #>                        package:stats235                        package:stats236  #>                        \"median.default\"                             \"medpolish\"  #>                        package:stats237                        package:stats238  #>                         \"model.extract\"                           \"model.frame\"  #>                        package:stats239                        package:stats240  #>                   \"model.frame.default\"                          \"model.matrix\"  #>                        package:stats241                        package:stats242  #>                  \"model.matrix.default\"                       \"model.matrix.lm\"  #>                        package:stats243                        package:stats244  #>                          \"model.offset\"                        \"model.response\"  #>                        package:stats245                        package:stats246  #>                          \"model.tables\"                         \"model.weights\"  #>                        package:stats247                        package:stats248  #>                             \"monthplot\"                             \"mood.test\"  #>                        package:stats249                        package:stats250  #>                                 \"mvfft\"                             \"na.action\"  #>                        package:stats251                        package:stats252  #>                         \"na.contiguous\"                            \"na.exclude\"  #>                        package:stats253                        package:stats254  #>                               \"na.fail\"                               \"na.omit\"  #>                        package:stats255                        package:stats256  #>                               \"na.pass\"                             \"napredict\"  #>                        package:stats257                        package:stats258  #>                               \"naprint\"                               \"naresid\"  #>                        package:stats259                        package:stats260  #>                                 \"nextn\"                                   \"nlm\"  #>                        package:stats261                        package:stats262  #>                                \"nlminb\"                                   \"nls\"  #>                        package:stats263                        package:stats264  #>                           \"nls.control\"                                  \"nobs\"  #>                        package:stats265                        package:stats266  #>                          \"numericDeriv\"                                \"offset\"  #>                        package:stats267                        package:stats268  #>                           \"oneway.test\"                                 \"optim\"  #>                        package:stats269                        package:stats270  #>                             \"optimHess\"                              \"optimise\"  #>                        package:stats271                        package:stats272  #>                              \"optimize\"                      \"order.dendrogram\"  #>                        package:stats273                        package:stats274  #>                              \"p.adjust\"                      \"p.adjust.methods\"  #>                        package:stats275                        package:stats276  #>                                  \"pacf\"                    \"pairwise.prop.test\"  #>                        package:stats277                        package:stats278  #>                       \"pairwise.t.test\"                        \"pairwise.table\"  #>                        package:stats279                        package:stats280  #>                  \"pairwise.wilcox.test\"                                 \"pbeta\"  #>                        package:stats281                        package:stats282  #>                                \"pbinom\"                             \"pbirthday\"  #>                        package:stats283                        package:stats284  #>                               \"pcauchy\"                                \"pchisq\"  #>                        package:stats285                        package:stats286  #>                                  \"pexp\"                                    \"pf\"  #>                        package:stats287                        package:stats288  #>                                \"pgamma\"                                 \"pgeom\"  #>                        package:stats289                        package:stats290  #>                                \"phyper\"                               \"plclust\"  #>                        package:stats291                        package:stats292  #>                                \"plnorm\"                                \"plogis\"  #>                        package:stats293                        package:stats294  #>                             \"plot.ecdf\"                   \"plot.spec.coherency\"  #>                        package:stats295                        package:stats296  #>                       \"plot.spec.phase\"                          \"plot.stepfun\"  #>                        package:stats297                        package:stats298  #>                               \"plot.ts\"                               \"pnbinom\"  #>                        package:stats299                        package:stats300  #>                                 \"pnorm\"                               \"poisson\"  #>                        package:stats301                        package:stats302  #>                          \"poisson.test\"                                  \"poly\"  #>                        package:stats303                        package:stats304  #>                                 \"polym\"                                 \"power\"  #>                        package:stats305                        package:stats306  #>                      \"power.anova.test\"                       \"power.prop.test\"  #>                        package:stats307                        package:stats308  #>                          \"power.t.test\"                               \"ppoints\"  #>                        package:stats309                        package:stats310  #>                                 \"ppois\"                                   \"ppr\"  #>                        package:stats311                        package:stats312  #>                                \"prcomp\"                               \"predict\"  #>                        package:stats313                        package:stats314  #>                           \"predict.glm\"                            \"predict.lm\"  #>                        package:stats315                        package:stats316  #>                               \"preplot\"                              \"princomp\"  #>                        package:stats317                        package:stats318  #>                          \"printCoefmat\"                               \"profile\"  #>                        package:stats319                        package:stats320  #>                                  \"proj\"                                \"promax\"  #>                        package:stats321                        package:stats322  #>                             \"prop.test\"                       \"prop.trend.test\"  #>                        package:stats323                        package:stats324  #>                             \"psignrank\"                              \"psmirnov\"  #>                        package:stats325                        package:stats326  #>                                    \"pt\"                                \"ptukey\"  #>                        package:stats327                        package:stats328  #>                                 \"punif\"                              \"pweibull\"  #>                        package:stats329                        package:stats330  #>                               \"pwilcox\"                                 \"qbeta\"  #>                        package:stats331                        package:stats332  #>                                \"qbinom\"                             \"qbirthday\"  #>                        package:stats333                        package:stats334  #>                               \"qcauchy\"                                \"qchisq\"  #>                        package:stats335                        package:stats336  #>                                  \"qexp\"                                    \"qf\"  #>                        package:stats337                        package:stats338  #>                                \"qgamma\"                                 \"qgeom\"  #>                        package:stats339                        package:stats340  #>                                \"qhyper\"                                \"qlnorm\"  #>                        package:stats341                        package:stats342  #>                                \"qlogis\"                               \"qnbinom\"  #>                        package:stats343                        package:stats344  #>                                 \"qnorm\"                                 \"qpois\"  #>                        package:stats345                        package:stats346  #>                                \"qqline\"                                \"qqnorm\"  #>                        package:stats347                        package:stats348  #>                                \"qqplot\"                             \"qsignrank\"  #>                        package:stats349                        package:stats350  #>                              \"qsmirnov\"                                    \"qt\"  #>                        package:stats351                        package:stats352  #>                                \"qtukey\"                            \"quade.test\"  #>                        package:stats353                        package:stats354  #>                              \"quantile\"                                 \"quasi\"  #>                        package:stats355                        package:stats356  #>                         \"quasibinomial\"                          \"quasipoisson\"  #>                        package:stats357                        package:stats358  #>                                 \"qunif\"                              \"qweibull\"  #>                        package:stats359                        package:stats360  #>                               \"qwilcox\"                              \"r2dtable\"  #>                        package:stats361                        package:stats362  #>                              \"rWishart\"                                 \"rbeta\"  #>                        package:stats363                        package:stats364  #>                                \"rbinom\"                               \"rcauchy\"  #>                        package:stats365                        package:stats366  #>                                \"rchisq\"                           \"read.ftable\"  #>                        package:stats367                        package:stats368  #>                           \"rect.hclust\"                           \"reformulate\"  #>                        package:stats369                        package:stats370  #>                               \"relevel\"                               \"reorder\"  #>                        package:stats371                        package:stats372  #>                          \"replications\"                               \"reshape\"  #>                        package:stats373                        package:stats374  #>                                 \"resid\"                             \"residuals\"  #>                        package:stats375                        package:stats376  #>                         \"residuals.glm\"                          \"residuals.lm\"  #>                        package:stats377                        package:stats378  #>                                  \"rexp\"                                    \"rf\"  #>                        package:stats379                        package:stats380  #>                                \"rgamma\"                                 \"rgeom\"  #>                        package:stats381                        package:stats382  #>                                \"rhyper\"                                \"rlnorm\"  #>                        package:stats383                        package:stats384  #>                                \"rlogis\"                             \"rmultinom\"  #>                        package:stats385                        package:stats386  #>                               \"rnbinom\"                                 \"rnorm\"  #>                        package:stats387                        package:stats388  #>                                 \"rpois\"                             \"rsignrank\"  #>                        package:stats389                        package:stats390  #>                              \"rsmirnov\"                             \"rstandard\"  #>                        package:stats391                        package:stats392  #>                              \"rstudent\"                                    \"rt\"  #>                        package:stats393                        package:stats394  #>                                 \"runif\"                                \"runmed\"  #>                        package:stats395                        package:stats396  #>                              \"rweibull\"                               \"rwilcox\"  #>                        package:stats397                        package:stats398  #>                        \"scatter.smooth\"                             \"screeplot\"  #>                        package:stats399                        package:stats400  #>                                    \"sd\"                           \"se.contrast\"  #>                        package:stats401                        package:stats402  #>                             \"selfStart\"                              \"setNames\"  #>                        package:stats403                        package:stats404  #>                          \"shapiro.test\"                                 \"sigma\"  #>                        package:stats405                        package:stats406  #>                              \"simulate\"                                \"smooth\"  #>                        package:stats407                        package:stats408  #>                         \"smooth.spline\"                            \"smoothEnds\"  #>                        package:stats409                        package:stats410  #>                          \"sortedXyData\"                               \"spec.ar\"  #>                        package:stats411                        package:stats412  #>                            \"spec.pgram\"                            \"spec.taper\"  #>                        package:stats413                        package:stats414  #>                              \"spectrum\"                                \"spline\"  #>                        package:stats415                        package:stats416  #>                             \"splinefun\"                            \"splinefunH\"  #>                        package:stats417                        package:stats418  #>                                 \"start\"                            \"stat.anova\"  #>                        package:stats419                        package:stats420  #>                                  \"step\"                               \"stepfun\"  #>                        package:stats421                        package:stats422  #>                                   \"stl\"                           \"summary.aov\"  #>                        package:stats423                        package:stats424  #>                           \"summary.glm\"                            \"summary.lm\"  #>                        package:stats425                        package:stats426  #>                        \"summary.manova\"                       \"summary.stepfun\"  #>                        package:stats427                        package:stats428  #>                                \"supsmu\"                                \"symnum\"  #>                        package:stats429                        package:stats430  #>                                \"t.test\"                              \"termplot\"  #>                        package:stats431                        package:stats432  #>                                 \"terms\"                         \"terms.formula\"  #>                        package:stats433                        package:stats434  #>                                  \"time\"                              \"toeplitz\"  #>                        package:stats435                        package:stats436  #>                             \"toeplitz2\"                                    \"ts\"  #>                        package:stats437                        package:stats438  #>                          \"ts.intersect\"                               \"ts.plot\"  #>                        package:stats439                        package:stats440  #>                              \"ts.union\"                              \"tsSmooth\"  #>                        package:stats441                        package:stats442  #>                                \"tsdiag\"                                   \"tsp\"  #>                        package:stats443                        package:stats444  #>                                 \"tsp<-\"                               \"uniroot\"  #>                        package:stats445                        package:stats446  #>                                \"update\"                        \"update.default\"  #>                        package:stats447                        package:stats448  #>                        \"update.formula\"                                   \"var\"  #>                        package:stats449                        package:stats450  #>                              \"var.test\"                        \"variable.names\"  #>                        package:stats451                        package:stats452  #>                               \"varimax\"                                  \"vcov\"  #>                        package:stats453                        package:stats454  #>                         \"weighted.mean\"                    \"weighted.residuals\"  #>                        package:stats455                        package:stats456  #>                               \"weights\"                           \"wilcox.test\"  #>                        package:stats457                        package:stats458  #>                                \"window\"                              \"window<-\"  #>                        package:stats459                        package:stats460  #>                          \"write.ftable\"                                 \"xtabs\"  #>                       package:graphics1                       package:graphics2  #>                       \".filled.contour\"                                  \"Axis\"  #>                       package:graphics3                       package:graphics4  #>                                \"abline\"                                \"arrows\"  #>                       package:graphics5                       package:graphics6  #>                             \"assocplot\"                               \"axTicks\"  #>                       package:graphics7                       package:graphics8  #>                                  \"axis\"                             \"axis.Date\"  #>                       package:graphics9                      package:graphics10  #>                          \"axis.POSIXct\"                               \"barplot\"  #>                      package:graphics11                      package:graphics12  #>                       \"barplot.default\"                                   \"box\"  #>                      package:graphics13                      package:graphics14  #>                               \"boxplot\"                       \"boxplot.default\"  #>                      package:graphics15                      package:graphics16  #>                        \"boxplot.matrix\"                                   \"bxp\"  #>                      package:graphics17                      package:graphics18  #>                                \"cdplot\"                                  \"clip\"  #>                      package:graphics19                      package:graphics20  #>                          \"close.screen\"                          \"co.intervals\"  #>                      package:graphics21                      package:graphics22  #>                               \"contour\"                       \"contour.default\"  #>                      package:graphics23                      package:graphics24  #>                                \"coplot\"                                 \"curve\"  #>                      package:graphics25                      package:graphics26  #>                              \"dotchart\"                          \"erase.screen\"  #>                      package:graphics27                      package:graphics28  #>                        \"filled.contour\"                          \"fourfoldplot\"  #>                      package:graphics29                      package:graphics30  #>                                 \"frame\"                            \"grconvertX\"  #>                      package:graphics31                      package:graphics32  #>                            \"grconvertY\"                                  \"grid\"  #>                      package:graphics33                      package:graphics34  #>                                  \"hist\"                          \"hist.default\"  #>                      package:graphics35                      package:graphics36  #>                              \"identify\"                                 \"image\"  #>                      package:graphics37                      package:graphics38  #>                         \"image.default\"                                \"layout\"  #>                      package:graphics39                      package:graphics40  #>                           \"layout.show\"                                   \"lcm\"  #>                      package:graphics41                      package:graphics42  #>                                \"legend\"                                 \"lines\"  #>                      package:graphics43                      package:graphics44  #>                         \"lines.default\"                               \"locator\"  #>                      package:graphics45                      package:graphics46  #>                              \"matlines\"                               \"matplot\"  #>                      package:graphics47                      package:graphics48  #>                             \"matpoints\"                            \"mosaicplot\"  #>                      package:graphics49                      package:graphics50  #>                                 \"mtext\"                                 \"pairs\"  #>                      package:graphics51                      package:graphics52  #>                         \"pairs.default\"                          \"panel.smooth\"  #>                      package:graphics53                      package:graphics54  #>                                   \"par\"                                 \"persp\"  #>                      package:graphics55                      package:graphics56  #>                                   \"pie\"                                  \"plot\"  #>                      package:graphics57                      package:graphics58  #>                          \"plot.default\"                           \"plot.design\"  #>                      package:graphics59                      package:graphics60  #>                         \"plot.function\"                              \"plot.new\"  #>                      package:graphics61                      package:graphics62  #>                           \"plot.window\"                               \"plot.xy\"  #>                      package:graphics63                      package:graphics64  #>                                \"points\"                        \"points.default\"  #>                      package:graphics65                      package:graphics66  #>                               \"polygon\"                              \"polypath\"  #>                      package:graphics67                      package:graphics68  #>                           \"rasterImage\"                                  \"rect\"  #>                      package:graphics69                      package:graphics70  #>                                   \"rug\"                                \"screen\"  #>                      package:graphics71                      package:graphics72  #>                              \"segments\"                         \"smoothScatter\"  #>                      package:graphics73                      package:graphics74  #>                             \"spineplot\"                          \"split.screen\"  #>                      package:graphics75                      package:graphics76  #>                                 \"stars\"                                  \"stem\"  #>                      package:graphics77                      package:graphics78  #>                             \"strheight\"                            \"stripchart\"  #>                      package:graphics79                      package:graphics80  #>                              \"strwidth\"                         \"sunflowerplot\"  #>                      package:graphics81                      package:graphics82  #>                               \"symbols\"                                  \"text\"  #>                      package:graphics83                      package:graphics84  #>                          \"text.default\"                                 \"title\"  #>                      package:graphics85                      package:graphics86  #>                                 \"xinch\"                               \"xspline\"  #>                      package:graphics87                      package:graphics88  #>                                \"xyinch\"                                 \"yinch\"  #>                      package:grDevices1                      package:grDevices2  #>                             \".axisPars\"                             \".clipPath\"  #>                      package:grDevices3                      package:grDevices4  #>                          \".defineGroup\"                                \".devUp\"  #>                      package:grDevices5                      package:grDevices6  #>                \".linearGradientPattern\"                                 \".mask\"  #>                      package:grDevices7                      package:grDevices8  #>                              \".opIndex\"                \".radialGradientPattern\"  #>                      package:grDevices9                     package:grDevices10  #>                            \".ruleIndex\"                          \".setClipPath\"  #>                     package:grDevices11                     package:grDevices12  #>                              \".setMask\"                           \".setPattern\"  #>                     package:grDevices13                     package:grDevices14  #>                        \".tilingPattern\"                             \".useGroup\"  #>                     package:grDevices15                     package:grDevices16  #>                               \"CIDFont\"                               \"Hershey\"  #>                     package:grDevices17                     package:grDevices18  #>                             \"Type1Font\"                                   \"X11\"  #>                     package:grDevices19                     package:grDevices20  #>                           \"X11.options\"                               \"X11Font\"  #>                     package:grDevices21                     package:grDevices22  #>                              \"X11Fonts\"                           \"adjustcolor\"  #>                     package:grDevices23                     package:grDevices24  #>                      \"as.graphicsAnnot\"                             \"as.raster\"  #>                     package:grDevices25                     package:grDevices26  #>                             \"axisTicks\"                                \"bitmap\"  #>                     package:grDevices27                     package:grDevices28  #>                                \"blues9\"                                   \"bmp\"  #>                     package:grDevices29                     package:grDevices30  #>                         \"boxplot.stats\"                       \"cairoSymbolFont\"  #>                     package:grDevices31                     package:grDevices32  #>                             \"cairo_pdf\"                              \"cairo_ps\"  #>                     package:grDevices33                     package:grDevices34  #>                         \"check.options\"                                 \"chull\"  #>                     package:grDevices35                     package:grDevices36  #>                                    \"cm\"                             \"cm.colors\"  #>                     package:grDevices37                     package:grDevices38  #>                               \"col2rgb\"                        \"colorConverter\"  #>                     package:grDevices39                     package:grDevices40  #>                             \"colorRamp\"                      \"colorRampPalette\"  #>                     package:grDevices41                     package:grDevices42  #>                                \"colors\"                           \"colorspaces\"  #>                     package:grDevices43                     package:grDevices44  #>                               \"colours\"                          \"contourLines\"  #>                     package:grDevices45                     package:grDevices46  #>                          \"convertColor\"                              \"densCols\"  #>                     package:grDevices47                     package:grDevices48  #>                      \"dev.capabilities\"                           \"dev.capture\"  #>                     package:grDevices49                     package:grDevices50  #>                           \"dev.control\"                              \"dev.copy\"  #>                     package:grDevices51                     package:grDevices52  #>                          \"dev.copy2eps\"                          \"dev.copy2pdf\"  #>                     package:grDevices53                     package:grDevices54  #>                               \"dev.cur\"                             \"dev.flush\"  #>                     package:grDevices55                     package:grDevices56  #>                              \"dev.hold\"                       \"dev.interactive\"  #>                     package:grDevices57                     package:grDevices58  #>                              \"dev.list\"                               \"dev.new\"  #>                     package:grDevices59                     package:grDevices60  #>                              \"dev.next\"                               \"dev.off\"  #>                     package:grDevices61                     package:grDevices62  #>                              \"dev.prev\"                             \"dev.print\"  #>                     package:grDevices63                     package:grDevices64  #>                               \"dev.set\"                              \"dev.size\"  #>                     package:grDevices65                     package:grDevices66  #>                            \"dev2bitmap\"                         \"devAskNewPage\"  #>                     package:grDevices67                     package:grDevices68  #>                   \"deviceIsInteractive\"                            \"embedFonts\"  #>                     package:grDevices69                     package:grDevices70  #>                           \"embedGlyphs\"                           \"extendrange\"  #>                     package:grDevices71                     package:grDevices72  #>                      \"getGraphicsEvent\"                   \"getGraphicsEventEnv\"  #>                     package:grDevices73                     package:grDevices74  #>                           \"glyphAnchor\"                             \"glyphFont\"  #>                     package:grDevices75                     package:grDevices76  #>                         \"glyphFontList\"                           \"glyphHeight\"  #>                     package:grDevices77                     package:grDevices78  #>                     \"glyphHeightBottom\"                             \"glyphInfo\"  #>                     package:grDevices79                     package:grDevices80  #>                             \"glyphJust\"                            \"glyphWidth\"  #>                     package:grDevices81                     package:grDevices82  #>                        \"glyphWidthLeft\"                         \"grSoftVersion\"  #>                     package:grDevices83                     package:grDevices84  #>                          \"graphics.off\"                                  \"gray\"  #>                     package:grDevices85                     package:grDevices86  #>                           \"gray.colors\"                                  \"grey\"  #>                     package:grDevices87                     package:grDevices88  #>                           \"grey.colors\"                                   \"hcl\"  #>                     package:grDevices89                     package:grDevices90  #>                            \"hcl.colors\"                              \"hcl.pals\"  #>                     package:grDevices91                     package:grDevices92  #>                           \"heat.colors\"                                   \"hsv\"  #>                     package:grDevices93                     package:grDevices94  #>                             \"is.raster\"                                  \"jpeg\"  #>                     package:grDevices95                     package:grDevices96  #>                              \"make.rgb\"                               \"n2mfrow\"  #>                     package:grDevices97                     package:grDevices98  #>                             \"nclass.FD\"                        \"nclass.Sturges\"  #>                     package:grDevices99                    package:grDevices100  #>                          \"nclass.scott\"                               \"palette\"  #>                    package:grDevices101                    package:grDevices102  #>                        \"palette.colors\"                          \"palette.pals\"  #>                    package:grDevices103                    package:grDevices104  #>                                   \"pdf\"                           \"pdf.options\"  #>                    package:grDevices105                    package:grDevices106  #>                              \"pdfFonts\"                                \"pictex\"  #>                    package:grDevices107                    package:grDevices108  #>                                   \"png\"                            \"postscript\"  #>                    package:grDevices109                    package:grDevices110  #>                       \"postscriptFonts\"                            \"ps.options\"  #>                    package:grDevices111                    package:grDevices112  #>                                \"quartz\"                        \"quartz.options\"  #>                    package:grDevices113                    package:grDevices114  #>                           \"quartz.save\"                            \"quartzFont\"  #>                    package:grDevices115                    package:grDevices116  #>                           \"quartzFonts\"                               \"rainbow\"  #>                    package:grDevices117                    package:grDevices118  #>                        \"recordGraphics\"                            \"recordPlot\"  #>                    package:grDevices119                    package:grDevices120  #>                            \"replayPlot\"                                   \"rgb\"  #>                    package:grDevices121                    package:grDevices122  #>                               \"rgb2hsv\"                              \"savePlot\"  #>                    package:grDevices123                    package:grDevices124  #>                                \"setEPS\"                   \"setGraphicsEventEnv\"  #>                    package:grDevices125                    package:grDevices126  #>              \"setGraphicsEventHandlers\"                                 \"setPS\"  #>                    package:grDevices127                    package:grDevices128  #>                                   \"svg\"                        \"terrain.colors\"  #>                    package:grDevices129                    package:grDevices130  #>                                  \"tiff\"                           \"topo.colors\"  #>                    package:grDevices131                    package:grDevices132  #>                               \"trans3d\"                                   \"x11\"  #>                    package:grDevices133                    package:grDevices134  #>                                  \"xfig\"                             \"xy.coords\"  #>                    package:grDevices135                    package:grDevices136  #>                               \"xyTable\"                            \"xyz.coords\"  #>                          package:utils1                          package:utils2  #>                              \".AtNames\"                          \".DollarNames\"  #>                          package:utils3                          package:utils4  #>                     \".RtangleCodeLabel\"                            \".S3methods\"  #>                          package:utils5                          package:utils6  #>                               \".romans\"                                     \"?\"  #>                          package:utils7                          package:utils8  #>                              \"RShowDoc\"                           \"RSiteSearch\"  #>                          package:utils9                         package:utils10  #>                                 \"Rprof\"                              \"Rprofmem\"  #>                         package:utils11                         package:utils12  #>                               \"Rtangle\"                         \"RtangleFinish\"  #>                         package:utils13                         package:utils14  #>                        \"RtangleRuncode\"                          \"RtangleSetup\"  #>                         package:utils15                         package:utils16  #>                       \"RtangleWritedoc\"                     \"RweaveChunkPrefix\"  #>                         package:utils17                         package:utils18  #>                     \"RweaveEvalWithOpt\"                           \"RweaveLatex\"  #>                         package:utils19                         package:utils20  #>                     \"RweaveLatexFinish\"                    \"RweaveLatexOptions\"  #>                         package:utils21                         package:utils22  #>                      \"RweaveLatexSetup\"                   \"RweaveLatexWritedoc\"  #>                         package:utils23                         package:utils24  #>                         \"RweaveTryStop\"                               \"Stangle\"  #>                         package:utils25                         package:utils26  #>                                \"Sweave\"                           \"SweaveHooks\"  #>                         package:utils27                         package:utils28  #>                        \"SweaveSyntConv\"                     \"SweaveSyntaxLatex\"  #>                         package:utils29                         package:utils30  #>                     \"SweaveSyntaxNoweb\"                             \"URLdecode\"  #>                         package:utils31                         package:utils32  #>                             \"URLencode\"                                  \"View\"  #>                         package:utils33                         package:utils34  #>                                 \"adist\"                                 \"alarm\"  #>                         package:utils35                         package:utils36  #>                               \"apropos\"                              \"aregexec\"  #>                         package:utils37                         package:utils38  #>                          \"argsAnywhere\"                             \"as.person\"  #>                         package:utils39                         package:utils40  #>                         \"as.personList\"                         \"as.relistable\"  #>                         package:utils41                         package:utils42  #>                              \"as.roman\"                           \"asDateBuilt\"  #>                         package:utils43                         package:utils44  #>                              \"askYesNo\"                                \"aspell\"  #>                         package:utils45                         package:utils46  #>                \"aspell_package_C_files\"                \"aspell_package_R_files\"  #>                         package:utils47                         package:utils48  #>               \"aspell_package_Rd_files\"              \"aspell_package_vignettes\"  #>                         package:utils49                         package:utils50  #> \"aspell_write_personal_dictionary_file\"                   \"assignInMyNamespace\"  #>                         package:utils51                         package:utils52  #>                     \"assignInNamespace\"                    \"available.packages\"  #>                         package:utils53                         package:utils54  #>                              \"bibentry\"                             \"browseEnv\"  #>                         package:utils55                         package:utils56  #>                             \"browseURL\"                       \"browseVignettes\"  #>                         package:utils57                         package:utils58  #>                            \"bug.report\"                        \"capture.output\"  #>                         package:utils59                         package:utils60  #>                          \"changedFiles\"                             \"charClass\"  #>                         package:utils61                         package:utils62  #>                             \"checkCRAN\"                      \"chooseBioCmirror\"  #>                         package:utils63                         package:utils64  #>                      \"chooseCRANmirror\"                              \"citEntry\"  #>                         package:utils65                         package:utils66  #>                             \"citFooter\"                             \"citHeader\"  #>                         package:utils67                         package:utils68  #>                              \"citation\"                                  \"cite\"  #>                         package:utils69                         package:utils70  #>                            \"citeNatbib\"                          \"close.socket\"  #>                         package:utils71                         package:utils72  #>                               \"clrhash\"                                 \"combn\"  #>                         package:utils73                         package:utils74  #>                        \"compareVersion\"                           \"contrib.url\"  #>                         package:utils75                         package:utils76  #>                          \"count.fields\"                           \"create.post\"  #>                         package:utils77                         package:utils78  #>                                  \"data\"                            \"data.entry\"  #>                         package:utils79                         package:utils80  #>                             \"dataentry\"                                    \"de\"  #>                         package:utils81                         package:utils82  #>                              \"de.ncols\"                            \"de.restore\"  #>                         package:utils83                         package:utils84  #>                              \"de.setup\"                             \"debugcall\"  #>                         package:utils85                         package:utils86  #>                              \"debugger\"                                  \"demo\"  #>                         package:utils87                         package:utils88  #>                         \"download.file\"                     \"download.packages\"  #>                         package:utils89                         package:utils90  #>                           \"dump.frames\"                                  \"edit\"  #>                         package:utils91                         package:utils92  #>                                 \"emacs\"                               \"example\"  #>                         package:utils93                         package:utils94  #>                             \"file.edit\"                          \"fileSnapshot\"  #>                         package:utils95                         package:utils96  #>                             \"file_test\"                                  \"find\"  #>                         package:utils97                         package:utils98  #>                        \"findCRANmirror\"                           \"findLineNum\"  #>                         package:utils99                        package:utils100  #>                           \"findMatches\"                                   \"fix\"  #>                        package:utils101                        package:utils102  #>                        \"fixInNamespace\"                         \"flush.console\"  #>                        package:utils103                        package:utils104  #>                              \"formatOL\"                              \"formatUL\"  #>                        package:utils105                        package:utils106  #>                           \"getAnywhere\"                        \"getCRANmirrors\"  #>                        package:utils107                        package:utils108  #>                      \"getFromNamespace\"                          \"getParseData\"  #>                        package:utils109                        package:utils110  #>                          \"getParseText\"                           \"getS3method\"  #>                        package:utils111                        package:utils112  #>                       \"getSrcDirectory\"                        \"getSrcFilename\"  #>                        package:utils113                        package:utils114  #>                        \"getSrcLocation\"                             \"getSrcref\"  #>                        package:utils115                        package:utils116  #>                     \"getTxtProgressBar\"                               \"gethash\"  #>                        package:utils117                        package:utils118  #>                               \"glob2rx\"                       \"globalVariables\"  #>                        package:utils119                        package:utils120  #>                               \"hasName\"                               \"hashtab\"  #>                        package:utils121                        package:utils122  #>                                  \"head\"                           \"head.matrix\"  #>                        package:utils123                        package:utils124  #>                                  \"help\"                          \"help.request\"  #>                        package:utils125                        package:utils126  #>                           \"help.search\"                            \"help.start\"  #>                        package:utils127                        package:utils128  #>                               \"history\"                            \"hsearch_db\"  #>                        package:utils129                        package:utils130  #>                   \"hsearch_db_concepts\"                   \"hsearch_db_keywords\"  #>                        package:utils131                        package:utils132  #>                      \"install.packages\"                    \"installed.packages\"  #>                        package:utils133                        package:utils134  #>                            \"is.hashtab\"                         \"is.relistable\"  #>                        package:utils135                        package:utils136  #>                            \"isS3method\"                        \"isS3stdGeneric\"  #>                        package:utils137                        package:utils138  #>                         \"limitedLabels\"                           \"loadhistory\"  #>                        package:utils139                        package:utils140  #>                       \"localeToCharset\"                                \"ls.str\"  #>                        package:utils141                        package:utils142  #>                               \"lsf.str\"                            \"maintainer\"  #>                        package:utils143                        package:utils144  #>                    \"make.packages.html\"                           \"make.socket\"  #>                        package:utils145                        package:utils146  #>             \"makeRweaveLatexCodeRunner\"                               \"maphash\"  #>                        package:utils147                        package:utils148  #>                          \"memory.limit\"                           \"memory.size\"  #>                        package:utils149                        package:utils150  #>                                  \"menu\"                               \"methods\"  #>                        package:utils151                        package:utils152  #>                           \"mirror2html\"                            \"modifyList\"  #>                        package:utils153                        package:utils154  #>                          \"new.packages\"                                  \"news\"  #>                        package:utils155                        package:utils156  #>                                   \"nsl\"                               \"numhash\"  #>                        package:utils157                        package:utils158  #>                           \"object.size\"                          \"old.packages\"  #>                        package:utils159                        package:utils160  #>                             \"osVersion\"                      \"package.skeleton\"  #>                        package:utils161                        package:utils162  #>                           \"packageDate\"                    \"packageDescription\"  #>                        package:utils163                        package:utils164  #>                           \"packageName\"                         \"packageStatus\"  #>                        package:utils165                        package:utils166  #>                        \"packageVersion\"                                  \"page\"  #>                        package:utils167                        package:utils168  #>                                \"person\"                            \"personList\"  #>                        package:utils169                        package:utils170  #>                                  \"pico\"                        \"process.events\"  #>                        package:utils171                        package:utils172  #>                                \"prompt\"                            \"promptData\"  #>                        package:utils173                        package:utils174  #>                          \"promptImport\"                         \"promptPackage\"  #>                        package:utils175                        package:utils176  #>                          \"rc.getOption\"                            \"rc.options\"  #>                        package:utils177                        package:utils178  #>                           \"rc.settings\"                             \"rc.status\"  #>                        package:utils179                        package:utils180  #>                              \"read.DIF\"                              \"read.csv\"  #>                        package:utils181                        package:utils182  #>                             \"read.csv2\"                            \"read.delim\"  #>                        package:utils183                        package:utils184  #>                           \"read.delim2\"                          \"read.fortran\"  #>                        package:utils185                        package:utils186  #>                              \"read.fwf\"                           \"read.socket\"  #>                        package:utils187                        package:utils188  #>                            \"read.table\"                      \"readCitationFile\"  #>                        package:utils189                        package:utils190  #>                               \"recover\"                                \"relist\"  #>                        package:utils191                        package:utils192  #>                               \"remhash\"                       \"remove.packages\"  #>                        package:utils193                        package:utils194  #>                          \"removeSource\"                                 \"rtags\"  #>                        package:utils195                        package:utils196  #>                           \"savehistory\"                           \"select.list\"  #>                        package:utils197                        package:utils198  #>                           \"sessionInfo\"                         \"setBreakpoint\"  #>                        package:utils199                        package:utils200  #>                       \"setRepositories\"                     \"setTxtProgressBar\"  #>                        package:utils201                        package:utils202  #>                               \"sethash\"                                 \"stack\"  #>                        package:utils203                        package:utils204  #>                                   \"str\"                            \"strOptions\"  #>                        package:utils205                        package:utils206  #>                            \"strcapture\"                          \"summaryRprof\"  #>                        package:utils207                        package:utils208  #>                  \"suppressForeignCheck\"                                  \"tail\"  #>                        package:utils209                        package:utils210  #>                           \"tail.matrix\"                                   \"tar\"  #>                        package:utils211                        package:utils212  #>                             \"timestamp\"                              \"toBibtex\"  #>                        package:utils213                        package:utils214  #>                               \"toLatex\"                        \"txtProgressBar\"  #>                        package:utils215                        package:utils216  #>                          \"type.convert\"                               \"typhash\"  #>                        package:utils217                        package:utils218  #>                           \"undebugcall\"                               \"unstack\"  #>                        package:utils219                        package:utils220  #>                                 \"untar\"                                 \"unzip\"  #>                        package:utils221                        package:utils222  #>                       \"update.packages\"                               \"upgrade\"  #>                        package:utils223                        package:utils224  #>                              \"url.show\"                                    \"vi\"  #>                        package:utils225                        package:utils226  #>                              \"vignette\"                           \"warnErrList\"  #>                        package:utils227                        package:utils228  #>                             \"write.csv\"                            \"write.csv2\"  #>                        package:utils229                        package:utils230  #>                          \"write.socket\"                           \"write.table\"  #>                        package:utils231                        package:utils232  #>                                 \"xedit\"                                \"xemacs\"  #>                        package:utils233                       package:datasets1  #>                                   \"zip\"                         \"AirPassengers\"  #>                       package:datasets2                       package:datasets3  #>                               \"BJsales\"                          \"BJsales.lead\"  #>                       package:datasets4                       package:datasets5  #>                                   \"BOD\"                                   \"CO2\"  #>                       package:datasets6                       package:datasets7  #>                           \"ChickWeight\"                                 \"DNase\"  #>                       package:datasets8                       package:datasets9  #>                        \"EuStockMarkets\"                          \"Formaldehyde\"  #>                      package:datasets10                      package:datasets11  #>                          \"HairEyeColor\"                          \"Harman23.cor\"  #>                      package:datasets12                      package:datasets13  #>                          \"Harman74.cor\"                              \"Indometh\"  #>                      package:datasets14                      package:datasets15  #>                          \"InsectSprays\"                        \"JohnsonJohnson\"  #>                      package:datasets16                      package:datasets17  #>                             \"LakeHuron\"                      \"LifeCycleSavings\"  #>                      package:datasets18                      package:datasets19  #>                              \"Loblolly\"                                  \"Nile\"  #>                      package:datasets20                      package:datasets21  #>                                \"Orange\"                         \"OrchardSprays\"  #>                      package:datasets22                      package:datasets23  #>                           \"PlantGrowth\"                             \"Puromycin\"  #>                      package:datasets24                      package:datasets25  #>                             \"Seatbelts\"                                \"Theoph\"  #>                      package:datasets26                      package:datasets27  #>                               \"Titanic\"                           \"ToothGrowth\"  #>                      package:datasets28                      package:datasets29  #>                         \"UCBAdmissions\"                        \"UKDriverDeaths\"  #>                      package:datasets30                      package:datasets31  #>                                 \"UKgas\"                           \"USAccDeaths\"  #>                      package:datasets32                      package:datasets33  #>                             \"USArrests\"                        \"USJudgeRatings\"  #>                      package:datasets34                      package:datasets35  #>                 \"USPersonalExpenditure\"                             \"UScitiesD\"  #>                      package:datasets36                      package:datasets37  #>                              \"VADeaths\"                              \"WWWusage\"  #>                      package:datasets38                      package:datasets39  #>                           \"WorldPhones\"                           \"ability.cov\"  #>                      package:datasets40                      package:datasets41  #>                              \"airmiles\"                            \"airquality\"  #>                      package:datasets42                      package:datasets43  #>                              \"anscombe\"                                \"attenu\"  #>                      package:datasets44                      package:datasets45  #>                              \"attitude\"                               \"austres\"  #>                      package:datasets46                      package:datasets47  #>                               \"beaver1\"                               \"beaver2\"  #>                      package:datasets48                      package:datasets49  #>                                  \"cars\"                              \"chickwts\"  #>                      package:datasets50                      package:datasets51  #>                                   \"co2\"                               \"crimtab\"  #>                      package:datasets52                      package:datasets53  #>                           \"discoveries\"                                 \"esoph\"  #>                      package:datasets54                      package:datasets55  #>                                  \"euro\"                            \"euro.cross\"  #>                      package:datasets56                      package:datasets57  #>                              \"eurodist\"                              \"faithful\"  #>                      package:datasets58                      package:datasets59  #>                               \"fdeaths\"                                \"freeny\"  #>                      package:datasets60                      package:datasets61  #>                              \"freeny.x\"                              \"freeny.y\"  #>                      package:datasets62                      package:datasets63  #>                                \"infert\"                                  \"iris\"  #>                      package:datasets64                      package:datasets65  #>                                 \"iris3\"                               \"islands\"  #>                      package:datasets66                      package:datasets67  #>                               \"ldeaths\"                                    \"lh\"  #>                      package:datasets68                      package:datasets69  #>                               \"longley\"                                  \"lynx\"  #>                      package:datasets70                      package:datasets71  #>                               \"mdeaths\"                                \"morley\"  #>                      package:datasets72                      package:datasets73  #>                                \"mtcars\"                                \"nhtemp\"  #>                      package:datasets74                      package:datasets75  #>                                \"nottem\"                                   \"npk\"  #>                      package:datasets76                      package:datasets77  #>                    \"occupationalStatus\"                                \"precip\"  #>                      package:datasets78                      package:datasets79  #>                            \"presidents\"                              \"pressure\"  #>                      package:datasets80                      package:datasets81  #>                                \"quakes\"                                 \"randu\"  #>                      package:datasets82                      package:datasets83  #>                                \"rivers\"                                  \"rock\"  #>                      package:datasets84                      package:datasets85  #>                                 \"sleep\"                            \"stack.loss\"  #>                      package:datasets86                      package:datasets87  #>                               \"stack.x\"                             \"stackloss\"  #>                      package:datasets88                      package:datasets89  #>                             \"state.abb\"                            \"state.area\"  #>                      package:datasets90                      package:datasets91  #>                          \"state.center\"                        \"state.division\"  #>                      package:datasets92                      package:datasets93  #>                            \"state.name\"                          \"state.region\"  #>                      package:datasets94                      package:datasets95  #>                             \"state.x77\"                         \"sunspot.month\"  #>                      package:datasets96                      package:datasets97  #>                          \"sunspot.year\"                              \"sunspots\"  #>                      package:datasets98                      package:datasets99  #>                                 \"swiss\"                              \"treering\"  #>                     package:datasets100                     package:datasets101  #>                                 \"trees\"                                 \"uspop\"  #>                     package:datasets102                     package:datasets103  #>                               \"volcano\"                            \"warpbreaks\"  #>                     package:datasets104                        package:methods1  #>                                 \"women\"              \".EmptyPrimitiveSkeletons\"  #>                        package:methods2                        package:methods3  #>                       \".OldClassesList\"                            \".S4methods\"  #>                        package:methods4                        package:methods5  #>              \".ShortPrimitiveSkeletons\"                               \".__C__(\"  #>                        package:methods6                        package:methods7  #>                           \".__C__.NULL\"                          \".__C__.Other\"  #>                        package:methods8                        package:methods9  #>                    \".__C__.environment\"                    \".__C__.externalptr\"  #>                       package:methods10                       package:methods11  #>                           \".__C__.name\"                              \".__C__<-\"  #>                       package:methods12                       package:methods13  #>                             \".__C__ANY\"        \".__C__ClassUnionRepresentation\"  #>                       package:methods14                       package:methods15  #>                            \".__C__Date\"                \".__C__EmptyMethodsList\"  #>                       package:methods16                       package:methods17  #>               \".__C__LinearMethodsList\"                \".__C__MethodDefinition\"  #>                       package:methods18                       package:methods19  #>       \".__C__MethodDefinitionWithTrace\"           \".__C__MethodSelectionReport\"  #>                       package:methods20                       package:methods21  #>                  \".__C__MethodWithNext\"         \".__C__MethodWithNextWithTrace\"  #>                       package:methods22                       package:methods23  #>                     \".__C__MethodsList\"                            \".__C__NULL\"  #>                       package:methods24                       package:methods25  #>              \".__C__ObjectsWithPackage\"                \".__C__OptionalFunction\"  #>                       package:methods26                       package:methods27  #>                         \".__C__POSIXct\"                         \".__C__POSIXlt\"  #>                       package:methods28                       package:methods29  #>                          \".__C__POSIXt\"                  \".__C__PossibleMethod\"  #>                       package:methods30                       package:methods31  #>                              \".__C__S3\"                              \".__C__S4\"  #>                       package:methods32                       package:methods33  #>                 \".__C__SClassExtension\"          \".__C__SealedMethodDefinition\"  #>                       package:methods34                       package:methods35  #>                \".__C__SuperClassMethod\"                         \".__C__VIRTUAL\"  #>                       package:methods36                       package:methods37  #>           \".__C__activeBindingFunction\"                           \".__C__anova\"  #>                       package:methods38                       package:methods39  #>                       \".__C__anova.glm\"                  \".__C__anova.glm.null\"  #>                       package:methods40                       package:methods41  #>                             \".__C__aov\"                           \".__C__array\"  #>                       package:methods42                       package:methods43  #>                         \".__C__builtin\"                            \".__C__call\"  #>                       package:methods44                       package:methods45  #>                       \".__C__character\"          \".__C__classGeneratorFunction\"  #>                       package:methods46                       package:methods47  #>                       \".__C__className\"               \".__C__classPrototypeDef\"  #>                       package:methods48                       package:methods49  #>             \".__C__classRepresentation\"                         \".__C__complex\"  #>                       package:methods50                       package:methods51  #>            \".__C__conditionalExtension\"                      \".__C__data.frame\"  #>                       package:methods52                       package:methods53  #>             \".__C__data.frameRowLabels\"          \".__C__defaultBindingFunction\"  #>                       package:methods54                       package:methods55  #>                         \".__C__density\"            \".__C__derivedDefaultMethod\"  #>                       package:methods56                       package:methods57  #>   \".__C__derivedDefaultMethodWithTrace\"                          \".__C__double\"  #>                       package:methods58                       package:methods59  #>                     \".__C__dump.frames\"                     \".__C__envRefClass\"  #>                       package:methods60                       package:methods61  #>                     \".__C__environment\"                      \".__C__expression\"  #>                       package:methods62                       package:methods63  #>               \".__C__externalRefMethod\"                     \".__C__externalptr\"  #>                       package:methods64                       package:methods65  #>                          \".__C__factor\"                             \".__C__for\"  #>                       package:methods66                       package:methods67  #>                         \".__C__formula\"                        \".__C__function\"  #>                       package:methods68                       package:methods69  #>               \".__C__functionWithTrace\"                 \".__C__genericFunction\"  #>                       package:methods70                       package:methods71  #>        \".__C__genericFunctionWithTrace\"                             \".__C__glm\"  #>                       package:methods72                       package:methods73  #>                        \".__C__glm.null\"            \".__C__groupGenericFunction\"  #>                       package:methods74                       package:methods75  #>   \".__C__groupGenericFunctionWithTrace\"                         \".__C__hsearch\"  #>                       package:methods76                       package:methods77  #>                              \".__C__if\"                         \".__C__integer\"  #>                       package:methods78                       package:methods79  #>                       \".__C__integrate\"          \".__C__internalDispatchMethod\"  #>                       package:methods80                       package:methods81  #>                        \".__C__language\"                      \".__C__libraryIQR\"  #>                       package:methods82                       package:methods83  #>                            \".__C__list\"                   \".__C__listOfMethods\"  #>                       package:methods84                       package:methods85  #>                              \".__C__lm\"                   \".__C__localRefClass\"  #>                       package:methods86                       package:methods87  #>                          \".__C__logLik\"                         \".__C__logical\"  #>                       package:methods88                       package:methods89  #>                            \".__C__maov\"                          \".__C__matrix\"  #>                       package:methods90                       package:methods91  #>                         \".__C__missing\"                             \".__C__mlm\"  #>                       package:methods92                       package:methods93  #>                          \".__C__mtable\"                             \".__C__mts\"  #>                       package:methods94                       package:methods95  #>                            \".__C__name\"                       \".__C__namedList\"  #>                       package:methods96                       package:methods97  #>                    \".__C__nonStructure\"              \".__C__nonstandardGeneric\"  #>                       package:methods98                       package:methods99  #>      \".__C__nonstandardGenericFunction\"     \".__C__nonstandardGenericWithTrace\"  #>                      package:methods100                      package:methods101  #> \".__C__nonstandardGroupGenericFunction\"                         \".__C__numeric\"  #>                      package:methods102                      package:methods103  #>                        \".__C__oldClass\"                  \".__C__optionalMethod\"  #>                      package:methods104                      package:methods105  #>                         \".__C__ordered\"                      \".__C__packageIQR\"  #>                      package:methods106                      package:methods107  #>                     \".__C__packageInfo\"                             \".__C__raw\"  #>                      package:methods108                      package:methods109  #>                    \".__C__recordedplot\"                        \".__C__refClass\"  #>                      package:methods110                      package:methods111  #>          \".__C__refClassRepresentation\"                \".__C__refGeneratorSlot\"  #>                      package:methods112                      package:methods113  #>                    \".__C__refMethodDef\"           \".__C__refMethodDefWithTrace\"  #>                      package:methods114                      package:methods115  #>                       \".__C__refObject\"              \".__C__refObjectGenerator\"  #>                      package:methods116                      package:methods117  #>                          \".__C__repeat\"                             \".__C__rle\"  #>                      package:methods118                      package:methods119  #>                       \".__C__signature\"                          \".__C__socket\"  #>                      package:methods120                      package:methods121  #>               \".__C__sourceEnvironment\"                         \".__C__special\"  #>                      package:methods122                      package:methods123  #>                 \".__C__standardGeneric\"        \".__C__standardGenericWithTrace\"  #>                      package:methods124                      package:methods125  #>                       \".__C__structure\"                   \".__C__summary.table\"  #>                      package:methods126                      package:methods127  #>                  \".__C__summaryDefault\"                           \".__C__table\"  #>                      package:methods128                      package:methods129  #>                       \".__C__traceable\"                              \".__C__ts\"  #>                      package:methods130                      package:methods131  #>              \".__C__uninitializedField\"                          \".__C__vector\"  #>                      package:methods132                      package:methods133  #>                           \".__C__while\"                               \".__C__{\"  #>                      package:methods134                      package:methods135  #>                          \".__T__$:base\"                        \".__T__$<-:base\"  #>                      package:methods136                      package:methods137  #>                      \".__T__Arith:base\"                 \".__T__Compare:methods\"  #>                      package:methods138                      package:methods139  #>                    \".__T__Complex:base\"                      \".__T__Logic:base\"  #>                      package:methods140                      package:methods141  #>                   \".__T__Math2:methods\"                       \".__T__Math:base\"  #>                      package:methods142                      package:methods143  #>                        \".__T__Ops:base\"                    \".__T__Summary:base\"  #>                      package:methods144                      package:methods145  #>                          \".__T__[:base\"                        \".__T__[<-:base\"  #>                      package:methods146                      package:methods147  #>                       \".__T__[[<-:base\"           \".__T__addNextMethod:methods\"  #>                      package:methods148                      package:methods149  #>                     \".__T__body<-:base\"                  \".__T__cbind2:methods\"  #>                      package:methods150                      package:methods151  #>                  \".__T__coerce:methods\"                \".__T__coerce<-:methods\"  #>                      package:methods152                      package:methods153  #>              \".__T__initialize:methods\"                  \".__T__kronecker:base\"  #>                      package:methods154                      package:methods155  #>              \".__T__loadMethod:methods\"                  \".__T__rbind2:methods\"  #>                      package:methods156                      package:methods157  #>                    \".__T__show:methods\"             \".__T__slotsFromS3:methods\"  #>                      package:methods158                      package:methods159  #>                             \".classEnv\"                         \".doTracePrint\"  #>                      package:methods160                      package:methods161  #>                              \".hasSlot\"                   \".selectSuperClasses\"  #>                      package:methods162                      package:methods163  #>                            \".slotNames\"                     \".untracedFunction\"  #>                      package:methods164                      package:methods165  #>                       \".valueClassTest\"                                 \"Arith\"  #>                      package:methods166                      package:methods167  #>                               \"Compare\"                               \"Complex\"  #>                      package:methods168                      package:methods169  #>                                 \"Logic\"                                  \"Math\"  #>                      package:methods170                      package:methods171  #>                                 \"Math2\"                       \"MethodAddCoerce\"  #>                      package:methods172                      package:methods173  #>                           \"MethodsList\"                     \"MethodsListSelect\"  #>                      package:methods174                      package:methods175  #>                                   \"Ops\"                                 \"Quote\"  #>                      package:methods176                      package:methods177  #>                               \"S3Class\"                             \"S3Class<-\"  #>                      package:methods178                      package:methods179  #>                                \"S3Part\"                              \"S3Part<-\"  #>                      package:methods180                      package:methods181  #>                       \"SignatureMethod\"                               \"Summary\"  #>                      package:methods182                      package:methods183  #>                         \"addNextMethod\"                              \"allNames\"  #>                      package:methods184                      package:methods185  #>                                    \"as\"                                  \"as<-\"  #>                      package:methods186                      package:methods187  #>                    \"asMethodDefinition\"                        \"assignClassDef\"  #>                      package:methods188                      package:methods189  #>                 \"assignMethodsMetaData\"                    \"balanceMethodsList\"  #>                      package:methods190                      package:methods191  #>                                \"body<-\"                 \"cacheGenericsMetaData\"  #>                      package:methods192                      package:methods193  #>                         \"cacheMetaData\"                           \"cacheMethod\"  #>                      package:methods194                      package:methods195  #>                           \"callGeneric\"                        \"callNextMethod\"  #>                      package:methods196                      package:methods197  #>                             \"canCoerce\"                                \"cbind2\"  #>                      package:methods198                      package:methods199  #>                     \"checkAtAssignment\"                   \"checkSlotAssignment\"  #>                      package:methods200                      package:methods201  #>                            \"classLabel\"                         \"classMetaName\"  #>                      package:methods202                      package:methods203  #>                             \"className\"                           \"classesToAM\"  #>                      package:methods204                      package:methods205  #>                                \"coerce\"                              \"coerce<-\"  #>                      package:methods206                      package:methods207  #>               \"completeClassDefinition\"                       \"completeExtends\"  #>                      package:methods208                      package:methods209  #>                    \"completeSubclasses\"                         \"conformMethod\"  #>                      package:methods210                      package:methods211  #>                       \"defaultDumpName\"                      \"defaultPrototype\"  #>                      package:methods212                      package:methods213  #>                     \"doPrimitiveMethod\"                            \"dumpMethod\"  #>                      package:methods214                      package:methods215  #>                           \"dumpMethods\"                                    \"el\"  #>                      package:methods216                      package:methods217  #>                                  \"el<-\"                               \"elNamed\"  #>                      package:methods218                      package:methods219  #>                             \"elNamed<-\"                            \"empty.dump\"  #>                      package:methods220                      package:methods221  #>                      \"emptyMethodsList\"                            \"evalOnLoad\"  #>                      package:methods222                      package:methods223  #>                            \"evalSource\"                           \"evalqOnLoad\"  #>                      package:methods224                      package:methods225  #>                        \"existsFunction\"                          \"existsMethod\"  #>                      package:methods226                      package:methods227  #>                               \"extends\"                     \"externalRefMethod\"  #>                      package:methods228                      package:methods229  #>                    \"finalDefaultMethod\"                             \"findClass\"  #>                      package:methods230                      package:methods231  #>                          \"findFunction\"                            \"findMethod\"  #>                      package:methods232                      package:methods233  #>                  \"findMethodSignatures\"                           \"findMethods\"  #>                      package:methods234                      package:methods235  #>                            \"findUnique\"                             \"fixPre1.8\"  #>                      package:methods236                      package:methods237  #>                            \"formalArgs\"                          \"functionBody\"  #>                      package:methods238                      package:methods239  #>                        \"functionBody<-\"                      \"generic.skeleton\"  #>                      package:methods240                      package:methods241  #>                    \"getAllSuperClasses\"                              \"getClass\"  #>                      package:methods242                      package:methods243  #>                           \"getClassDef\"                            \"getClasses\"  #>                      package:methods244                      package:methods245  #>                           \"getDataPart\"                           \"getFunction\"  #>                      package:methods246                      package:methods247  #>                            \"getGeneric\"                           \"getGenerics\"  #>                      package:methods248                      package:methods249  #>                              \"getGroup\"                       \"getGroupMembers\"  #>                      package:methods250                      package:methods251  #>                        \"getLoadActions\"                             \"getMethod\"  #>                      package:methods252                      package:methods253  #>                            \"getMethods\"                 \"getMethodsForDispatch\"  #>                      package:methods254                      package:methods255  #>                    \"getMethodsMetaData\"                        \"getPackageName\"  #>                      package:methods256                      package:methods257  #>                           \"getRefClass\"                              \"getSlots\"  #>                      package:methods258                      package:methods259  #>                           \"getValidity\"                                \"hasArg\"  #>                      package:methods260                      package:methods261  #>                         \"hasLoadAction\"                             \"hasMethod\"  #>                      package:methods262                      package:methods263  #>                            \"hasMethods\"                       \"implicitGeneric\"  #>                      package:methods264                      package:methods265  #>                    \"inheritedSlotNames\"                         \"initFieldArgs\"  #>                      package:methods266                      package:methods267  #>                         \"initRefFields\"                            \"initialize\"  #>                      package:methods268                      package:methods269  #>                    \"insertClassMethods\"                          \"insertMethod\"  #>                      package:methods270                      package:methods271  #>                          \"insertSource\"                                    \"is\"  #>                      package:methods272                      package:methods273  #>                               \"isClass\"                            \"isClassDef\"  #>                      package:methods274                      package:methods275  #>                          \"isClassUnion\"                             \"isGeneric\"  #>                      package:methods276                      package:methods277  #>                       \"isGrammarSymbol\"                               \"isGroup\"  #>                      package:methods278                      package:methods279  #>                           \"isRematched\"                         \"isSealedClass\"  #>                      package:methods280                      package:methods281  #>                        \"isSealedMethod\"                        \"isVirtualClass\"  #>                      package:methods282                      package:methods283  #>                            \"isXS3Class\"                             \"kronecker\"  #>                      package:methods284                      package:methods285  #>                            \"languageEl\"                          \"languageEl<-\"  #>                      package:methods286                      package:methods287  #>                        \"linearizeMlist\"                       \"listFromMethods\"  #>                      package:methods288                      package:methods289  #>                         \"listFromMlist\"                            \"loadMethod\"  #>                      package:methods290                      package:methods291  #>               \"makeClassRepresentation\"                           \"makeExtends\"  #>                      package:methods292                      package:methods293  #>                           \"makeGeneric\"                       \"makeMethodsList\"  #>                      package:methods294                      package:methods295  #>             \"makePrototypeFromClassDef\"                   \"makeStandardGeneric\"  #>                      package:methods296                      package:methods297  #>                        \"matchSignature\"                          \"mergeMethods\"  #>                      package:methods298                      package:methods299  #>                          \"metaNameUndo\"                       \"method.skeleton\"  #>                      package:methods300                      package:methods301  #>                 \"methodSignatureMatrix\"                \"methodsPackageMetaName\"  #>                      package:methods302                      package:methods303  #>                            \"missingArg\"                       \"multipleClasses\"  #>                      package:methods304                      package:methods305  #>                                   \"new\"                              \"newBasic\"  #>                      package:methods306                      package:methods307  #>                \"newClassRepresentation\"                        \"newEmptyObject\"  #>                      package:methods308                      package:methods309  #>                           \"packageSlot\"                         \"packageSlot<-\"  #>                      package:methods310                      package:methods311  #>                       \"possibleExtends\"                       \"prohibitGeneric\"  #>                      package:methods312                      package:methods313  #>                           \"promptClass\"                         \"promptMethods\"  #>                      package:methods314                      package:methods315  #>                             \"prototype\"                                \"rbind2\"  #>                      package:methods316                      package:methods317  #>       \"reconcilePropertiesAndPrototype\"              \"registerImplicitGenerics\"  #>                      package:methods318                      package:methods319  #>                     \"rematchDefinition\"                           \"removeClass\"  #>                      package:methods320                      package:methods321  #>                         \"removeGeneric\"                          \"removeMethod\"  #>                      package:methods322                      package:methods323  #>                         \"removeMethods\"                        \"representation\"  #>                      package:methods324                      package:methods325  #>                        \"requireMethods\"                            \"resetClass\"  #>                      package:methods326                      package:methods327  #>                          \"resetGeneric\"                             \"sealClass\"  #>                      package:methods328                      package:methods329  #>                          \"selectMethod\"                    \"selectSuperClasses\"  #>                      package:methods330                      package:methods331  #>                                 \"setAs\"                              \"setClass\"  #>                      package:methods332                      package:methods333  #>                         \"setClassUnion\"                           \"setDataPart\"  #>                      package:methods334                      package:methods335  #>                            \"setGeneric\"                    \"setGenericImplicit\"  #>                      package:methods336                      package:methods337  #>                       \"setGroupGeneric\"                                 \"setIs\"  #>                      package:methods338                      package:methods339  #>                         \"setLoadAction\"                        \"setLoadActions\"  #>                      package:methods340                      package:methods341  #>                             \"setMethod\"                           \"setOldClass\"  #>                      package:methods342                      package:methods343  #>                        \"setPackageName\"                   \"setPrimitiveMethods\"  #>                      package:methods344                      package:methods345  #>                           \"setRefClass\"                      \"setReplaceMethod\"  #>                      package:methods346                      package:methods347  #>                           \"setValidity\"                                  \"show\"  #>                      package:methods348                      package:methods349  #>                             \"showClass\"                           \"showDefault\"  #>                      package:methods350                      package:methods351  #>                           \"showExtends\"                           \"showMethods\"  #>                      package:methods352                      package:methods353  #>                             \"showMlist\"                              \"sigToEnv\"  #>                      package:methods354                      package:methods355  #>                             \"signature\"                                  \"slot\"  #>                      package:methods356                      package:methods357  #>                                \"slot<-\"                             \"slotNames\"  #>                      package:methods358                      package:methods359  #>                           \"slotsFromS3\"                      \"substituteDirect\"  #>                      package:methods360                      package:methods361  #>                \"substituteFunctionArgs\"                       \"superClassDepth\"  #>                      package:methods362                      package:methods363  #>                  \"testInheritedMethods\"                           \"testVirtual\"  #>                      package:methods364                      package:methods365  #>                                \"tryNew\"                   \"unRematchDefinition\"  #>                      package:methods366                      package:methods367  #>                           \"validObject\"                        \"validSlotNames\"  #>                               Autoloads                           package:base1  #>                           \".Autoloaded\"                                     \"!\"  #>                           package:base2                           package:base3  #>                             \"!.hexmode\"                             \"!.octmode\"  #>                           package:base4                           package:base5  #>                                    \"!=\"                                     \"$\"  #>                           package:base6                           package:base7  #>                             \"$.DLLInfo\"                     \"$.package_version\"  #>                           package:base8                           package:base9  #>                                   \"$<-\"                           \"$<-.POSIXlt\"  #>                          package:base10                          package:base11  #>                        \"$<-.data.frame\"                                    \"%%\"  #>                          package:base12                          package:base13  #>                                   \"%*%\"                                   \"%/%\"  #>                          package:base14                          package:base15  #>                                  \"%in%\"                                   \"%o%\"  #>                          package:base16                          package:base17  #>                                   \"%x%\"                                     \"&\"  #>                          package:base18                          package:base19  #>                                    \"&&\"                             \"&.hexmode\"  #>                          package:base20                          package:base21  #>                             \"&.octmode\"                                     \"(\"  #>                          package:base22                          package:base23  #>                                     \"*\"                            \"*.difftime\"  #>                          package:base24                          package:base25  #>                                     \"+\"                                \"+.Date\"  #>                          package:base26                          package:base27  #>                              \"+.POSIXt\"                                     \"-\"  #>                          package:base28                          package:base29  #>                                \"-.Date\"                              \"-.POSIXt\"  #>                          package:base30                          package:base31  #>                                \"...elt\"                             \"...length\"  #>                          package:base32                          package:base33  #>                              \"...names\"                         \"..deparseOpts\"  #>                          package:base34                          package:base35  #>                        \"..getNamespace\"                              \".ArgsEnv\"  #>                          package:base36                          package:base37  #>                          \".AutoloadEnv\"                     \".BaseNamespaceEnv\"  #>                          package:base38                          package:base39  #>                                    \".C\"                  \".C_R_addTaskCallback\"  #>                          package:base40                          package:base41  #>             \".C_R_getTaskCallbackNames\"               \".C_R_removeTaskCallback\"  #>                          package:base42                          package:base43  #>                                 \".Call\"                        \".Call.graphics\"  #>                          package:base44                          package:base45  #>                                 \".Date\"                              \".Defunct\"  #>                          package:base46                          package:base47  #>                           \".Deprecated\"                               \".Device\"  #>                          package:base48                          package:base49  #>                              \".Devices\"                             \".External\"  #>                          package:base50                          package:base51  #>                    \".External.graphics\"                            \".External2\"  #>                          package:base52                          package:base53  #>                              \".F_dchdc\"                              \".F_dqrcf\"  #>                          package:base54                          package:base55  #>                             \".F_dqrdc2\"                             \".F_dqrqty\"  #>                          package:base56                          package:base57  #>                              \".F_dqrqy\"                             \".F_dqrrsd\"  #>                          package:base58                          package:base59  #>                              \".F_dqrxb\"                              \".F_dtrco\"  #>                          package:base60                          package:base61  #>                            \".First.sys\"                              \".Fortran\"  #>                          package:base62                          package:base63  #>                       \".GenericArgsEnv\"                            \".GlobalEnv\"  #>                          package:base64                          package:base65  #>                             \".Internal\"                        \".LC.categories\"  #>                          package:base66                          package:base67  #>                           \".Last.value\"                              \".Library\"  #>                          package:base68                          package:base69  #>                         \".Library.site\"                              \".Machine\"  #>                          package:base70                          package:base71  #>                    \".NotYetImplemented\"                           \".NotYetUsed\"  #>                          package:base72                          package:base73  #>                    \".OptRequireMethods\"                              \".Options\"  #>                          package:base74                          package:base75  #>                              \".POSIXct\"                              \".POSIXlt\"  #>                          package:base76                          package:base77  #>                             \".Platform\"                            \".Primitive\"  #>                          package:base78                          package:base79  #>                  \".S3PrimitiveGenerics\"                     \".S3_methods_table\"  #>                          package:base80                          package:base81  #>                             \".S3method\"                               \".Script\"  #>                          package:base82                          package:base83  #>                        \".TAOCP1997init\"                          \".__H__.cbind\"  #>                          package:base84                          package:base85  #>                          \".__H__.rbind\"                  \".__S3MethodsTable__.\"  #>                          package:base86                          package:base87  #>                        \".amatch_bounds\"                         \".amatch_costs\"  #>                          package:base88                          package:base89  #>                              \".bincode\"                          \".cache_class\"  #>                          package:base90                          package:base91  #>                         \".check_tzones\"                               \".class2\"  #>                          package:base92                          package:base93  #>                                  \".col\"                             \".colMeans\"  #>                          package:base94                          package:base95  #>                              \".colSums\"               \".decode_numeric_version\"  #>                          package:base96                          package:base97  #>                          \".deparseOpts\"                               \".detach\"  #>                          package:base98                          package:base99  #>                             \".difftime\"                           \".doSortWrap\"  #>                         package:base100                         package:base101  #>                              \".doTrace\"                               \".doWrap\"  #>                         package:base102                         package:base103  #>                              \".dynLibs\"               \".encode_numeric_version\"  #>                         package:base104                         package:base105  #>                \".expand_R_libs_env_var\"                         \".format.zeros\"  #>                         package:base106                         package:base107  #>                      \".formula2varlist\"                         \".getNamespace\"  #>                         package:base108                         package:base109  #>                     \".getNamespaceInfo\"                  \".getRequiredPackages\"  #>                         package:base110                         package:base111  #>                 \".getRequiredPackages2\"                                   \".gt\"  #>                         package:base112                         package:base113  #>                                  \".gtn\"                    \".handleSimpleError\"  #>                         package:base114                         package:base115  #>                  \".isMethodsDispatchOn\"                               \".isOpen\"  #>                         package:base116                         package:base117  #>                            \".kappa_tri\"                      \".knownS3Generics\"  #>                         package:base118                         package:base119  #>                            \".kronecker\"                         \".leap.seconds\"  #>                         package:base120                         package:base121  #>                             \".libPaths\"                          \".makeMessage\"  #>                         package:base122                         package:base123  #>                 \".make_numeric_version\"                               \".mapply\"  #>                         package:base124                         package:base125  #>                            \".maskedMsg\"                   \".mergeExportMethods\"  #>                         package:base126                         package:base127  #>                   \".mergeImportMethods\"                           \".noGenerics\"  #>                         package:base128                         package:base129  #>                \".packageStartupMessage\"                             \".packages\"  #>                         package:base130                         package:base131  #>                               \".popath\"                               \".pretty\"  #>                         package:base132                         package:base133  #>                            \".primTrace\"                          \".primUntrace\"  #>                         package:base134                         package:base135  #>                                \".rmpkg\"                                  \".row\"  #>                         package:base136                         package:base137  #>                             \".rowMeans\"                         \".rowNamesDF<-\"  #>                         package:base138                         package:base139  #>                              \".rowSums\"                       \".row_names_info\"  #>                         package:base140                         package:base141  #>                        \".set_row_names\"                  \".signalSimpleWarning\"  #>                         package:base142                         package:base143  #>                     \".standard_regexps\"                               \".subset\"  #>                         package:base144                         package:base145  #>                              \".subset2\"                         \".sys.timezone\"  #>                         package:base146                         package:base147  #>                            \".traceback\"                   \".tryResumeInterrupt\"  #>                         package:base148                         package:base149  #>                         \".userHooksEnv\"                         \".valid.factor\"  #>                         package:base150                         package:base151  #>                                     \"/\"                            \"/.difftime\"  #>                         package:base152                         package:base153  #>                                     \":\"                                    \"::\"  #>                         package:base154                         package:base155  #>                                   \":::\"                                     \"<\"  #>                         package:base156                         package:base157  #>                                    \"<-\"                                   \"<<-\"  #>                         package:base158                         package:base159  #>                                    \"<=\"                                     \"=\"  #>                         package:base160                         package:base161  #>                                    \"==\"                                     \">\"  #>                         package:base162                         package:base163  #>                                    \">=\"                                     \"@\"  #>                         package:base164                         package:base165  #>                                   \"@<-\"                                   \"Arg\"  #>                         package:base166                         package:base167  #>                                  \"Conj\"                           \"Cstack_info\"  #>                         package:base168                         package:base169  #>                              \"Encoding\"                            \"Encoding<-\"  #>                         package:base170                         package:base171  #>                                     \"F\"                                \"Filter\"  #>                         package:base172                         package:base173  #>                                  \"Find\"                                     \"I\"  #>                         package:base174                         package:base175  #>                               \"ISOdate\"                           \"ISOdatetime\"  #>                         package:base176                         package:base177  #>                                    \"Im\"                               \"LETTERS\"  #>                         package:base178                         package:base179  #>                                \"La.svd\"                            \"La_library\"  #>                         package:base180                         package:base181  #>                            \"La_version\"                                   \"Map\"  #>                         package:base182                         package:base183  #>                             \"Math.Date\"                           \"Math.POSIXt\"  #>                         package:base184                         package:base185  #>                       \"Math.data.frame\"                         \"Math.difftime\"  #>                         package:base186                         package:base187  #>                           \"Math.factor\"                                   \"Mod\"  #>                         package:base188                         package:base189  #>                                  \"NCOL\"                                  \"NROW\"  #>                         package:base190                         package:base191  #>                                \"Negate\"                            \"NextMethod\"  #>                         package:base192                         package:base193  #>                            \"OlsonNames\"                              \"Ops.Date\"  #>                         package:base194                         package:base195  #>                            \"Ops.POSIXt\"                        \"Ops.data.frame\"  #>                         package:base196                         package:base197  #>                          \"Ops.difftime\"                            \"Ops.factor\"  #>                         package:base198                         package:base199  #>                   \"Ops.numeric_version\"                           \"Ops.ordered\"  #>                         package:base200                         package:base201  #>                              \"Position\"                             \"R.Version\"  #>                         package:base202                         package:base203  #>                                \"R.home\"                             \"R.version\"  #>                         package:base204                         package:base205  #>                      \"R.version.string\"                               \"RNGkind\"  #>                         package:base206                         package:base207  #>                            \"RNGversion\"                         \"R_compiled_by\"  #>                         package:base208                         package:base209  #>                      \"R_system_version\"                                    \"Re\"  #>                         package:base210                         package:base211  #>                                \"Recall\"                                \"Reduce\"  #>                         package:base212                         package:base213  #>                          \"Summary.Date\"                       \"Summary.POSIXct\"  #>                         package:base214                         package:base215  #>                       \"Summary.POSIXlt\"                    \"Summary.data.frame\"  #>                         package:base216                         package:base217  #>                      \"Summary.difftime\"                        \"Summary.factor\"  #>                         package:base218                         package:base219  #>               \"Summary.numeric_version\"                       \"Summary.ordered\"  #>                         package:base220                         package:base221  #>                              \"Sys.Date\"                             \"Sys.chmod\"  #>                         package:base222                         package:base223  #>                            \"Sys.getenv\"                         \"Sys.getlocale\"  #>                         package:base224                         package:base225  #>                            \"Sys.getpid\"                              \"Sys.glob\"  #>                         package:base226                         package:base227  #>                              \"Sys.info\"                        \"Sys.localeconv\"  #>                         package:base228                         package:base229  #>                          \"Sys.readlink\"                       \"Sys.setFileTime\"  #>                         package:base230                         package:base231  #>                       \"Sys.setLanguage\"                            \"Sys.setenv\"  #>                         package:base232                         package:base233  #>                         \"Sys.setlocale\"                             \"Sys.sleep\"  #>                         package:base234                         package:base235  #>                              \"Sys.time\"                          \"Sys.timezone\"  #>                         package:base236                         package:base237  #>                             \"Sys.umask\"                          \"Sys.unsetenv\"  #>                         package:base238                         package:base239  #>                             \"Sys.which\"                                     \"T\"  #>                         package:base240                         package:base241  #>                             \"UseMethod\"                             \"Vectorize\"  #>                         package:base242                         package:base243  #>                                     \"[\"                                \"[.AsIs\"  #>                         package:base244                         package:base245  #>                         \"[.DLLInfoList\"                                \"[.Date\"  #>                         package:base246                         package:base247  #>                               \"[.Dlist\"                             \"[.POSIXct\"  #>                         package:base248                         package:base249  #>                             \"[.POSIXlt\"                          \"[.data.frame\"  #>                         package:base250                         package:base251  #>                            \"[.difftime\"                              \"[.factor\"  #>                         package:base252                         package:base253  #>                             \"[.hexmode\"                              \"[.listof\"  #>                         package:base254                         package:base255  #>                             \"[.noquote\"                     \"[.numeric_version\"  #>                         package:base256                         package:base257  #>                             \"[.octmode\"                         \"[.simple.list\"  #>                         package:base258                         package:base259  #>                               \"[.table\"                            \"[.warnings\"  #>                         package:base260                         package:base261  #>                                   \"[<-\"                              \"[<-.Date\"  #>                         package:base262                         package:base263  #>                           \"[<-.POSIXct\"                           \"[<-.POSIXlt\"  #>                         package:base264                         package:base265  #>                        \"[<-.data.frame\"                          \"[<-.difftime\"  #>                         package:base266                         package:base267  #>                            \"[<-.factor\"                   \"[<-.numeric_version\"  #>                         package:base268                         package:base269  #>                                    \"[[\"                               \"[[.Date\"  #>                         package:base270                         package:base271  #>                            \"[[.POSIXct\"                            \"[[.POSIXlt\"  #>                         package:base272                         package:base273  #>                         \"[[.data.frame\"                             \"[[.factor\"  #>                         package:base274                         package:base275  #>                    \"[[.numeric_version\"                                  \"[[<-\"  #>                         package:base276                         package:base277  #>                          \"[[<-.POSIXlt\"                       \"[[<-.data.frame\"  #>                         package:base278                         package:base279  #>                           \"[[<-.factor\"                  \"[[<-.numeric_version\"  #>                         package:base280                         package:base281  #>                                     \"^\"                            \"abbreviate\"  #>                         package:base282                         package:base283  #>                                   \"abs\"                                  \"acos\"  #>                         package:base284                         package:base285  #>                                 \"acosh\"                 \"activeBindingFunction\"  #>                         package:base286                         package:base287  #>                                 \"addNA\"                       \"addTaskCallback\"  #>                         package:base288                         package:base289  #>                                 \"agrep\"                                \"agrepl\"  #>                         package:base290                         package:base291  #>                                 \"alist\"                                   \"all\"  #>                         package:base292                         package:base293  #>                             \"all.equal\"                      \"all.equal.POSIXt\"  #>                         package:base294                         package:base295  #>                   \"all.equal.character\"                     \"all.equal.default\"  #>                         package:base296                         package:base297  #>                 \"all.equal.envRefClass\"                 \"all.equal.environment\"  #>                         package:base298                         package:base299  #>                      \"all.equal.factor\"                     \"all.equal.formula\"  #>                         package:base300                         package:base301  #>                    \"all.equal.function\"                    \"all.equal.language\"  #>                         package:base302                         package:base303  #>                        \"all.equal.list\"                     \"all.equal.numeric\"  #>                         package:base304                         package:base305  #>                         \"all.equal.raw\"                             \"all.names\"  #>                         package:base306                         package:base307  #>                              \"all.vars\"                       \"allowInterrupts\"  #>                         package:base308                         package:base309  #>                                   \"any\"                         \"anyDuplicated\"  #>                         package:base310                         package:base311  #>                   \"anyDuplicated.array\"              \"anyDuplicated.data.frame\"  #>                         package:base312                         package:base313  #>                 \"anyDuplicated.default\"                  \"anyDuplicated.matrix\"  #>                         package:base314                         package:base315  #>                                 \"anyNA\"                         \"anyNA.POSIXlt\"  #>                         package:base316                         package:base317  #>                      \"anyNA.data.frame\"                 \"anyNA.numeric_version\"  #>                         package:base318                         package:base319  #>                                 \"aperm\"                         \"aperm.default\"  #>                         package:base320                         package:base321  #>                           \"aperm.table\"                                \"append\"  #>                         package:base322                         package:base323  #>                                 \"apply\"                                  \"args\"  #>                         package:base324                         package:base325  #>                                 \"array\"                              \"array2DF\"  #>                         package:base326                         package:base327  #>                              \"arrayInd\"                               \"as.Date\"  #>                         package:base328                         package:base329  #>                       \"as.Date.POSIXct\"                       \"as.Date.POSIXlt\"  #>                         package:base330                         package:base331  #>                     \"as.Date.character\"                       \"as.Date.default\"  #>                         package:base332                         package:base333  #>                        \"as.Date.factor\"                       \"as.Date.numeric\"  #>                         package:base334                         package:base335  #>                            \"as.POSIXct\"                       \"as.POSIXct.Date\"  #>                         package:base336                         package:base337  #>                    \"as.POSIXct.POSIXlt\"                    \"as.POSIXct.default\"  #>                         package:base338                         package:base339  #>                    \"as.POSIXct.numeric\"                            \"as.POSIXlt\"  #>                         package:base340                         package:base341  #>                       \"as.POSIXlt.Date\"                    \"as.POSIXlt.POSIXct\"  #>                         package:base342                         package:base343  #>                  \"as.POSIXlt.character\"                    \"as.POSIXlt.default\"  #>                         package:base344                         package:base345  #>                     \"as.POSIXlt.factor\"                    \"as.POSIXlt.numeric\"  #>                         package:base346                         package:base347  #>                              \"as.array\"                      \"as.array.default\"  #>                         package:base348                         package:base349  #>                               \"as.call\"                          \"as.character\"  #>                         package:base350                         package:base351  #>                     \"as.character.Date\"                   \"as.character.POSIXt\"  #>                         package:base352                         package:base353  #>                \"as.character.condition\"                  \"as.character.default\"  #>                         package:base354                         package:base355  #>                    \"as.character.error\"                   \"as.character.factor\"  #>                         package:base356                         package:base357  #>                  \"as.character.hexmode\"          \"as.character.numeric_version\"  #>                         package:base358                         package:base359  #>                  \"as.character.octmode\"                   \"as.character.srcref\"  #>                         package:base360                         package:base361  #>                            \"as.complex\"                         \"as.data.frame\"  #>                         package:base362                         package:base363  #>                    \"as.data.frame.AsIs\"                    \"as.data.frame.Date\"  #>                         package:base364                         package:base365  #>                 \"as.data.frame.POSIXct\"                 \"as.data.frame.POSIXlt\"  #>                         package:base366                         package:base367  #>                   \"as.data.frame.array\"               \"as.data.frame.character\"  #>                         package:base368                         package:base369  #>                 \"as.data.frame.complex\"              \"as.data.frame.data.frame\"  #>                         package:base370                         package:base371  #>                 \"as.data.frame.default\"                \"as.data.frame.difftime\"  #>                         package:base372                         package:base373  #>                  \"as.data.frame.factor\"                 \"as.data.frame.integer\"  #>                         package:base374                         package:base375  #>                    \"as.data.frame.list\"                 \"as.data.frame.logical\"  #>                         package:base376                         package:base377  #>                  \"as.data.frame.matrix\"            \"as.data.frame.model.matrix\"  #>                         package:base378                         package:base379  #>                 \"as.data.frame.noquote\"                 \"as.data.frame.numeric\"  #>                         package:base380                         package:base381  #>         \"as.data.frame.numeric_version\"                 \"as.data.frame.ordered\"  #>                         package:base382                         package:base383  #>                     \"as.data.frame.raw\"                   \"as.data.frame.table\"  #>                         package:base384                         package:base385  #>                      \"as.data.frame.ts\"                  \"as.data.frame.vector\"  #>                         package:base386                         package:base387  #>                           \"as.difftime\"                             \"as.double\"  #>                         package:base388                         package:base389  #>                     \"as.double.POSIXlt\"                    \"as.double.difftime\"  #>                         package:base390                         package:base391  #>                        \"as.environment\"                         \"as.expression\"  #>                         package:base392                         package:base393  #>                 \"as.expression.default\"                             \"as.factor\"  #>                         package:base394                         package:base395  #>                           \"as.function\"                   \"as.function.default\"  #>                         package:base396                         package:base397  #>                            \"as.hexmode\"                            \"as.integer\"  #>                         package:base398                         package:base399  #>                               \"as.list\"                          \"as.list.Date\"  #>                         package:base400                         package:base401  #>                       \"as.list.POSIXct\"                       \"as.list.POSIXlt\"  #>                         package:base402                         package:base403  #>                    \"as.list.data.frame\"                       \"as.list.default\"  #>                         package:base404                         package:base405  #>                      \"as.list.difftime\"                   \"as.list.environment\"  #>                         package:base406                         package:base407  #>                        \"as.list.factor\"                      \"as.list.function\"  #>                         package:base408                         package:base409  #>               \"as.list.numeric_version\"                            \"as.logical\"  #>                         package:base410                         package:base411  #>                     \"as.logical.factor\"                             \"as.matrix\"  #>                         package:base412                         package:base413  #>                     \"as.matrix.POSIXlt\"                  \"as.matrix.data.frame\"  #>                         package:base414                         package:base415  #>                     \"as.matrix.default\"                     \"as.matrix.noquote\"  #>                         package:base416                         package:base417  #>                               \"as.name\"                               \"as.null\"  #>                         package:base418                         package:base419  #>                       \"as.null.default\"                            \"as.numeric\"  #>                         package:base420                         package:base421  #>                    \"as.numeric_version\"                            \"as.octmode\"  #>                         package:base422                         package:base423  #>                            \"as.ordered\"                    \"as.package_version\"  #>                         package:base424                         package:base425  #>                           \"as.pairlist\"                                 \"as.qr\"  #>                         package:base426                         package:base427  #>                                \"as.raw\"                             \"as.single\"  #>                         package:base428                         package:base429  #>                     \"as.single.default\"                             \"as.symbol\"  #>                         package:base430                         package:base431  #>                              \"as.table\"                      \"as.table.default\"  #>                         package:base432                         package:base433  #>                             \"as.vector\"                     \"as.vector.POSIXlt\"  #>                         package:base434                         package:base435  #>                  \"as.vector.data.frame\"                      \"as.vector.factor\"  #>                         package:base436                         package:base437  #>                           \"asNamespace\"                                  \"asS3\"  #>                         package:base438                         package:base439  #>                                  \"asS4\"                                  \"asin\"  #>                         package:base440                         package:base441  #>                                 \"asinh\"                                \"asplit\"  #>                         package:base442                         package:base443  #>                                \"assign\"                                  \"atan\"  #>                         package:base444                         package:base445  #>                                 \"atan2\"                                 \"atanh\"  #>                         package:base446                         package:base447  #>                                \"attach\"                       \"attachNamespace\"  #>                         package:base448                         package:base449  #>                                  \"attr\"                        \"attr.all.equal\"  #>                         package:base450                         package:base451  #>                                \"attr<-\"                            \"attributes\"  #>                         package:base452                         package:base453  #>                          \"attributes<-\"                              \"autoload\"  #>                         package:base454                         package:base455  #>                            \"autoloader\"                             \"backsolve\"  #>                         package:base456                         package:base457  #>                        \"balancePOSIXlt\"                               \"baseenv\"  #>                         package:base458                         package:base459  #>                              \"basename\"                               \"besselI\"  #>                         package:base460                         package:base461  #>                               \"besselJ\"                               \"besselK\"  #>                         package:base462                         package:base463  #>                               \"besselY\"                                  \"beta\"  #>                         package:base464                         package:base465  #>                       \"bindingIsActive\"                       \"bindingIsLocked\"  #>                         package:base466                         package:base467  #>                        \"bindtextdomain\"                               \"bitwAnd\"  #>                         package:base468                         package:base469  #>                               \"bitwNot\"                                \"bitwOr\"  #>                         package:base470                         package:base471  #>                            \"bitwShiftL\"                            \"bitwShiftR\"  #>                         package:base472                         package:base473  #>                               \"bitwXor\"                                  \"body\"  #>                         package:base474                         package:base475  #>                                \"body<-\"                                \"bquote\"  #>                         package:base476                         package:base477  #>                                 \"break\"                               \"browser\"  #>                         package:base478                         package:base479  #>                      \"browserCondition\"                       \"browserSetDebug\"  #>                         package:base480                         package:base481  #>                           \"browserText\"                              \"builtins\"  #>                         package:base482                         package:base483  #>                                    \"by\"                         \"by.data.frame\"  #>                         package:base484                         package:base485  #>                            \"by.default\"                                \"bzfile\"  #>                         package:base486                         package:base487  #>                                     \"c\"                                \"c.Date\"  #>                         package:base488                         package:base489  #>                             \"c.POSIXct\"                             \"c.POSIXlt\"  #>                         package:base490                         package:base491  #>                            \"c.difftime\"                              \"c.factor\"  #>                         package:base492                         package:base493  #>                             \"c.noquote\"                     \"c.numeric_version\"  #>                         package:base494                         package:base495  #>                            \"c.warnings\"                                  \"call\"  #>                         package:base496                         package:base497  #>                                \"callCC\"                          \"capabilities\"  #>                         package:base498                         package:base499  #>                              \"casefold\"                                   \"cat\"  #>                         package:base500                         package:base501  #>                                 \"cbind\"                      \"cbind.data.frame\"  #>                         package:base502                         package:base503  #>                               \"ceiling\"                           \"char.expand\"  #>                         package:base504                         package:base505  #>                             \"charToRaw\"                             \"character\"  #>                         package:base506                         package:base507  #>                             \"charmatch\"                                \"chartr\"  #>                         package:base508                         package:base509  #>                               \"chkDots\"                                  \"chol\"  #>                         package:base510                         package:base511  #>                          \"chol.default\"                              \"chol2inv\"  #>                         package:base512                         package:base513  #>                                \"choose\"                       \"chooseOpsMethod\"  #>                         package:base514                         package:base515  #>               \"chooseOpsMethod.default\"                                 \"class\"  #>                         package:base516                         package:base517  #>                               \"class<-\"                         \"clearPushBack\"  #>                         package:base518                         package:base519  #>                                 \"close\"                      \"close.connection\"  #>                         package:base520                         package:base521  #>                         \"close.srcfile\"                    \"close.srcfilealias\"  #>                         package:base522                         package:base523  #>                   \"closeAllConnections\"                                   \"col\"  #>                         package:base524                         package:base525  #>                              \"colMeans\"                               \"colSums\"  #>                         package:base526                         package:base527  #>                              \"colnames\"                            \"colnames<-\"  #>                         package:base528                         package:base529  #>                           \"commandArgs\"                               \"comment\"  #>                         package:base530                         package:base531  #>                             \"comment<-\"                               \"complex\"  #>                         package:base532                         package:base533  #>                       \"computeRestarts\"                         \"conditionCall\"  #>                         package:base534                         package:base535  #>               \"conditionCall.condition\"                      \"conditionMessage\"  #>                         package:base536                         package:base537  #>            \"conditionMessage.condition\"                         \"conflictRules\"  #>                         package:base538                         package:base539  #>                             \"conflicts\"                          \"contributors\"  #>                         package:base540                         package:base541  #>                                   \"cos\"                                  \"cosh\"  #>                         package:base542                         package:base543  #>                                 \"cospi\"                             \"crossprod\"  #>                         package:base544                         package:base545  #>                                \"cummax\"                                \"cummin\"  #>                         package:base546                         package:base547  #>                               \"cumprod\"                                \"cumsum\"  #>                         package:base548                         package:base549  #>                        \"curlGetHeaders\"                                   \"cut\"  #>                         package:base550                         package:base551  #>                              \"cut.Date\"                            \"cut.POSIXt\"  #>                         package:base552                         package:base553  #>                           \"cut.default\"                                \"dQuote\"  #>                         package:base554                         package:base555  #>                            \"data.class\"                            \"data.frame\"  #>                         package:base556                         package:base557  #>                           \"data.matrix\"                                  \"date\"  #>                         package:base558                         package:base559  #>                                 \"debug\"                        \"debuggingState\"  #>                         package:base560                         package:base561  #>                             \"debugonce\"              \"default.stringsAsFactors\"  #>                         package:base562                         package:base563  #>                         \"delayedAssign\"                               \"deparse\"  #>                         package:base564                         package:base565  #>                              \"deparse1\"                                   \"det\"  #>                         package:base566                         package:base567  #>                                \"detach\"                           \"determinant\"  #>                         package:base568                         package:base569  #>                    \"determinant.matrix\"                                  \"dget\"  #>                         package:base570                         package:base571  #>                                  \"diag\"                                \"diag<-\"  #>                         package:base572                         package:base573  #>                                  \"diff\"                             \"diff.Date\"  #>                         package:base574                         package:base575  #>                           \"diff.POSIXt\"                          \"diff.default\"  #>                         package:base576                         package:base577  #>                         \"diff.difftime\"                              \"difftime\"  #>                         package:base578                         package:base579  #>                               \"digamma\"                                   \"dim\"  #>                         package:base580                         package:base581  #>                        \"dim.data.frame\"                                 \"dim<-\"  #>                         package:base582                         package:base583  #>                              \"dimnames\"                   \"dimnames.data.frame\"  #>                         package:base584                         package:base585  #>                            \"dimnames<-\"                 \"dimnames<-.data.frame\"  #>                         package:base586                         package:base587  #>                                   \"dir\"                            \"dir.create\"  #>                         package:base588                         package:base589  #>                            \"dir.exists\"                               \"dirname\"  #>                         package:base590                         package:base591  #>                               \"do.call\"                             \"dontCheck\"  #>                         package:base592                         package:base593  #>                                \"double\"                                  \"dput\"  #>                         package:base594                         package:base595  #>                                  \"drop\"                            \"droplevels\"  #>                         package:base596                         package:base597  #>                 \"droplevels.data.frame\"                     \"droplevels.factor\"  #>                         package:base598                         package:base599  #>                                  \"dump\"                            \"duplicated\"  #>                         package:base600                         package:base601  #>                    \"duplicated.POSIXlt\"                      \"duplicated.array\"  #>                         package:base602                         package:base603  #>                 \"duplicated.data.frame\"                    \"duplicated.default\"  #>                         package:base604                         package:base605  #>                     \"duplicated.matrix\"            \"duplicated.numeric_version\"  #>                         package:base606                         package:base607  #>                   \"duplicated.warnings\"                              \"dyn.load\"  #>                         package:base608                         package:base609  #>                            \"dyn.unload\"                                \"dynGet\"  #>                         package:base610                         package:base611  #>                                \"eapply\"                                 \"eigen\"  #>                         package:base612                         package:base613  #>                              \"emptyenv\"                            \"enc2native\"  #>                         package:base614                         package:base615  #>                              \"enc2utf8\"                          \"encodeString\"  #>                         package:base616                         package:base617  #>                              \"endsWith\"                               \"enquote\"  #>                         package:base618                         package:base619  #>                           \"env.profile\"                           \"environment\"  #>                         package:base620                         package:base621  #>                         \"environment<-\"                   \"environmentIsLocked\"  #>                         package:base622                         package:base623  #>                       \"environmentName\"                        \"errorCondition\"  #>                         package:base624                         package:base625  #>                                  \"eval\"                           \"eval.parent\"  #>                         package:base626                         package:base627  #>                                 \"evalq\"                                \"exists\"  #>                         package:base628                         package:base629  #>                                   \"exp\"                           \"expand.grid\"  #>                         package:base630                         package:base631  #>                                 \"expm1\"                            \"expression\"  #>                         package:base632                         package:base633  #>                        \"extSoftVersion\"                                \"factor\"  #>                         package:base634                         package:base635  #>                             \"factorial\"                                  \"fifo\"  #>                         package:base636                         package:base637  #>                                  \"file\"                           \"file.access\"  #>                         package:base638                         package:base639  #>                           \"file.append\"                           \"file.choose\"  #>                         package:base640                         package:base641  #>                             \"file.copy\"                           \"file.create\"  #>                         package:base642                         package:base643  #>                           \"file.exists\"                             \"file.info\"  #>                         package:base644                         package:base645  #>                             \"file.link\"                             \"file.mode\"  #>                         package:base646                         package:base647  #>                            \"file.mtime\"                             \"file.path\"  #>                         package:base648                         package:base649  #>                           \"file.remove\"                           \"file.rename\"  #>                         package:base650                         package:base651  #>                             \"file.show\"                             \"file.size\"  #>                         package:base652                         package:base653  #>                          \"file.symlink\"                          \"find.package\"  #>                         package:base654                         package:base655  #>                          \"findInterval\"                        \"findPackageEnv\"  #>                         package:base656                         package:base657  #>                           \"findRestart\"                                 \"floor\"  #>                         package:base658                         package:base659  #>                                 \"flush\"                      \"flush.connection\"  #>                         package:base660                         package:base661  #>                                   \"for\"                                 \"force\"  #>                         package:base662                         package:base663  #>                          \"forceAndCall\"                               \"formals\"  #>                         package:base664                         package:base665  #>                             \"formals<-\"                                \"format\"  #>                         package:base666                         package:base667  #>                           \"format.AsIs\"                           \"format.Date\"  #>                         package:base668                         package:base669  #>                        \"format.POSIXct\"                        \"format.POSIXlt\"  #>                         package:base670                         package:base671  #>                     \"format.data.frame\"                        \"format.default\"  #>                         package:base672                         package:base673  #>                       \"format.difftime\"                         \"format.factor\"  #>                         package:base674                         package:base675  #>                        \"format.hexmode\"                           \"format.info\"  #>                         package:base676                         package:base677  #>                     \"format.libraryIQR\"                \"format.numeric_version\"  #>                         package:base678                         package:base679  #>                        \"format.octmode\"                    \"format.packageInfo\"  #>                         package:base680                         package:base681  #>                           \"format.pval\"                 \"format.summaryDefault\"  #>                         package:base682                         package:base683  #>                               \"formatC\"                              \"formatDL\"  #>                         package:base684                         package:base685  #>                          \"forwardsolve\"                              \"function\"  #>                         package:base686                         package:base687  #>                                 \"gamma\"                                    \"gc\"  #>                         package:base688                         package:base689  #>                               \"gc.time\"                                \"gcinfo\"  #>                         package:base690                         package:base691  #>                             \"gctorture\"                            \"gctorture2\"  #>                         package:base692                         package:base693  #>                                   \"get\"                                  \"get0\"  #>                         package:base694                         package:base695  #>                     \"getAllConnections\"                         \"getCallingDLL\"  #>                         package:base696                         package:base697  #>                        \"getCallingDLLe\"                         \"getConnection\"  #>                         package:base698                         package:base699  #>              \"getDLLRegisteredRoutines\"      \"getDLLRegisteredRoutines.DLLInfo\"  #>                         package:base700                         package:base701  #>    \"getDLLRegisteredRoutines.character\"                            \"getElement\"  #>                         package:base702                         package:base703  #>                      \"getExportedValue\"                               \"getHook\"  #>                         package:base704                         package:base705  #>                         \"getLoadedDLLs\"                          \"getNamespace\"  #>                         package:base706                         package:base707  #>                   \"getNamespaceExports\"                   \"getNamespaceImports\"  #>                         package:base708                         package:base709  #>                      \"getNamespaceInfo\"                      \"getNamespaceName\"  #>                         package:base710                         package:base711  #>                     \"getNamespaceUsers\"                   \"getNamespaceVersion\"  #>                         package:base712                         package:base713  #>                   \"getNativeSymbolInfo\"                             \"getOption\"  #>                         package:base714                         package:base715  #>                           \"getRversion\"                           \"getSrcLines\"  #>                         package:base716                         package:base717  #>                  \"getTaskCallbackNames\"                         \"geterrmessage\"  #>                         package:base718                         package:base719  #>                               \"gettext\"                              \"gettextf\"  #>                         package:base720                         package:base721  #>                                 \"getwd\"                                    \"gl\"  #>                         package:base722                         package:base723  #>                 \"globalCallingHandlers\"                             \"globalenv\"  #>                         package:base724                         package:base725  #>                              \"gregexec\"                              \"gregexpr\"  #>                         package:base726                         package:base727  #>                                  \"grep\"                               \"grepRaw\"  #>                         package:base728                         package:base729  #>                                 \"grepl\"                              \"grouping\"  #>                         package:base730                         package:base731  #>                                  \"gsub\"                                 \"gzcon\"  #>                         package:base732                         package:base733  #>                                \"gzfile\"                                 \"iconv\"  #>                         package:base734                         package:base735  #>                             \"iconvlist\"                         \"icuGetCollate\"  #>                         package:base736                         package:base737  #>                         \"icuSetCollate\"                             \"identical\"  #>                         package:base738                         package:base739  #>                              \"identity\"                                    \"if\"  #>                         package:base740                         package:base741  #>                                \"ifelse\"                         \"importIntoEnv\"  #>                         package:base742                         package:base743  #>                               \"infoRDS\"                              \"inherits\"  #>                         package:base744                         package:base745  #>                             \"intToBits\"                             \"intToUtf8\"  #>                         package:base746                         package:base747  #>                               \"integer\"                           \"interaction\"  #>                         package:base748                         package:base749  #>                           \"interactive\"                             \"intersect\"  #>                         package:base750                         package:base751  #>                           \"inverse.rle\"                             \"invisible\"  #>                         package:base752                         package:base753  #>                         \"invokeRestart\"            \"invokeRestartInteractively\"  #>                         package:base754                         package:base755  #>                                  \"is.R\"                              \"is.array\"  #>                         package:base756                         package:base757  #>                             \"is.atomic\"                               \"is.call\"  #>                         package:base758                         package:base759  #>                          \"is.character\"                            \"is.complex\"  #>                         package:base760                         package:base761  #>                         \"is.data.frame\"                             \"is.double\"  #>                         package:base762                         package:base763  #>                            \"is.element\"                        \"is.environment\"  #>                         package:base764                         package:base765  #>                         \"is.expression\"                             \"is.factor\"  #>                         package:base766                         package:base767  #>                             \"is.finite\"                     \"is.finite.POSIXlt\"  #>                         package:base768                         package:base769  #>                           \"is.function\"                           \"is.infinite\"  #>                         package:base770                         package:base771  #>                   \"is.infinite.POSIXlt\"                            \"is.integer\"  #>                         package:base772                         package:base773  #>                           \"is.language\"                               \"is.list\"  #>                         package:base774                         package:base775  #>                             \"is.loaded\"                            \"is.logical\"  #>                         package:base776                         package:base777  #>                             \"is.matrix\"                                 \"is.na\"  #>                         package:base778                         package:base779  #>                         \"is.na.POSIXlt\"                      \"is.na.data.frame\"  #>                         package:base780                         package:base781  #>                 \"is.na.numeric_version\"                               \"is.na<-\"  #>                         package:base782                         package:base783  #>                       \"is.na<-.default\"                        \"is.na<-.factor\"  #>                         package:base784                         package:base785  #>               \"is.na<-.numeric_version\"                               \"is.name\"  #>                         package:base786                         package:base787  #>                                \"is.nan\"                        \"is.nan.POSIXlt\"  #>                         package:base788                         package:base789  #>                               \"is.null\"                            \"is.numeric\"  #>                         package:base790                         package:base791  #>                       \"is.numeric.Date\"                     \"is.numeric.POSIXt\"  #>                         package:base792                         package:base793  #>                   \"is.numeric.difftime\"                    \"is.numeric_version\"  #>                         package:base794                         package:base795  #>                             \"is.object\"                            \"is.ordered\"  #>                         package:base796                         package:base797  #>                    \"is.package_version\"                           \"is.pairlist\"  #>                         package:base798                         package:base799  #>                          \"is.primitive\"                                 \"is.qr\"  #>                         package:base800                         package:base801  #>                                \"is.raw\"                          \"is.recursive\"  #>                         package:base802                         package:base803  #>                             \"is.single\"                             \"is.symbol\"  #>                         package:base804                         package:base805  #>                              \"is.table\"                           \"is.unsorted\"  #>                         package:base806                         package:base807  #>                             \"is.vector\"                       \"isBaseNamespace\"  #>                         package:base808                         package:base809  #>                               \"isFALSE\"                          \"isIncomplete\"  #>                         package:base810                         package:base811  #>                           \"isNamespace\"                     \"isNamespaceLoaded\"  #>                         package:base812                         package:base813  #>                                \"isOpen\"                             \"isRestart\"  #>                         package:base814                         package:base815  #>                                  \"isS4\"                            \"isSeekable\"  #>                         package:base816                         package:base817  #>                           \"isSymmetric\"                    \"isSymmetric.matrix\"  #>                         package:base818                         package:base819  #>                                \"isTRUE\"                                   \"isa\"  #>                         package:base820                         package:base821  #>                                \"isatty\"                            \"isdebugged\"  #>                         package:base822                         package:base823  #>                                \"jitter\"                                \"julian\"  #>                         package:base824                         package:base825  #>                           \"julian.Date\"                         \"julian.POSIXt\"  #>                         package:base826                         package:base827  #>                                 \"kappa\"                         \"kappa.default\"  #>                         package:base828                         package:base829  #>                              \"kappa.lm\"                              \"kappa.qr\"  #>                         package:base830                         package:base831  #>                             \"kronecker\"                             \"l10n_info\"  #>                         package:base832                         package:base833  #>                                \"labels\"                        \"labels.default\"  #>                         package:base834                         package:base835  #>                                \"lapply\"                              \"lazyLoad\"  #>                         package:base836                         package:base837  #>                        \"lazyLoadDBexec\"                       \"lazyLoadDBfetch\"  #>                         package:base838                         package:base839  #>                                 \"lbeta\"                               \"lchoose\"  #>                         package:base840                         package:base841  #>                                \"length\"                        \"length.POSIXlt\"  #>                         package:base842                         package:base843  #>                              \"length<-\"                         \"length<-.Date\"  #>                         package:base844                         package:base845  #>                      \"length<-.POSIXct\"                      \"length<-.POSIXlt\"  #>                         package:base846                         package:base847  #>                     \"length<-.difftime\"                       \"length<-.factor\"  #>                         package:base848                         package:base849  #>                               \"lengths\"                               \"letters\"  #>                         package:base850                         package:base851  #>                                \"levels\"                        \"levels.default\"  #>                         package:base852                         package:base853  #>                              \"levels<-\"                       \"levels<-.factor\"  #>                         package:base854                         package:base855  #>                            \"lfactorial\"                                \"lgamma\"  #>                         package:base856                         package:base857  #>                        \"libcurlVersion\"                               \"library\"  #>                         package:base858                         package:base859  #>                         \"library.dynam\"                  \"library.dynam.unload\"  #>                         package:base860                         package:base861  #>                               \"licence\"                               \"license\"  #>                         package:base862                         package:base863  #>                                  \"list\"                             \"list.dirs\"  #>                         package:base864                         package:base865  #>                            \"list.files\"                               \"list2DF\"  #>                         package:base866                         package:base867  #>                              \"list2env\"                                  \"load\"  #>                         package:base868                         package:base869  #>                         \"loadNamespace\"                      \"loadedNamespaces\"  #>                         package:base870                         package:base871  #>                  \"loadingNamespaceInfo\"                                 \"local\"  #>                         package:base872                         package:base873  #>                           \"lockBinding\"                       \"lockEnvironment\"  #>                         package:base874                         package:base875  #>                                   \"log\"                                 \"log10\"  #>                         package:base876                         package:base877  #>                                 \"log1p\"                                  \"log2\"  #>                         package:base878                         package:base879  #>                                  \"logb\"                               \"logical\"  #>                         package:base880                         package:base881  #>                             \"lower.tri\"                                    \"ls\"  #>                         package:base882                         package:base883  #>                            \"make.names\"                           \"make.unique\"  #>                         package:base884                         package:base885  #>                     \"makeActiveBinding\"                                \"mapply\"  #>                         package:base886                         package:base887  #>                          \"margin.table\"                            \"marginSums\"  #>                         package:base888                         package:base889  #>                            \"mat.or.vec\"                                 \"match\"  #>                         package:base890                         package:base891  #>                             \"match.arg\"                            \"match.call\"  #>                         package:base892                         package:base893  #>                             \"match.fun\"                                \"matrix\"  #>                         package:base894                         package:base895  #>                                   \"max\"                               \"max.col\"  #>                         package:base896                         package:base897  #>                                  \"mean\"                             \"mean.Date\"  #>                         package:base898                         package:base899  #>                          \"mean.POSIXct\"                          \"mean.POSIXlt\"  #>                         package:base900                         package:base901  #>                          \"mean.default\"                         \"mean.difftime\"  #>                         package:base902                         package:base903  #>                          \"mem.maxNSize\"                          \"mem.maxVSize\"  #>                         package:base904                         package:base905  #>                           \"memCompress\"                         \"memDecompress\"  #>                         package:base906                         package:base907  #>                        \"memory.profile\"                                 \"merge\"  #>                         package:base908                         package:base909  #>                      \"merge.data.frame\"                         \"merge.default\"  #>                         package:base910                         package:base911  #>                               \"message\"                                  \"mget\"  #>                         package:base912                         package:base913  #>                                   \"min\"                               \"missing\"  #>                         package:base914                         package:base915  #>                                  \"mode\"                                \"mode<-\"  #>                         package:base916                         package:base917  #>                             \"month.abb\"                            \"month.name\"  #>                         package:base918                         package:base919  #>                                \"months\"                           \"months.Date\"  #>                         package:base920                         package:base921  #>                         \"months.POSIXt\"                      \"mostattributes<-\"  #>                         package:base922                         package:base923  #>                                 \"mtfrm\"                         \"mtfrm.POSIXct\"  #>                         package:base924                         package:base925  #>                         \"mtfrm.POSIXlt\"                         \"mtfrm.default\"  #>                         package:base926                         package:base927  #>                           \"nameOfClass\"                   \"nameOfClass.default\"  #>                         package:base928                         package:base929  #>                                 \"names\"                         \"names.POSIXlt\"  #>                         package:base930                         package:base931  #>                               \"names<-\"                       \"names<-.POSIXlt\"  #>                         package:base932                         package:base933  #>                       \"namespaceExport\"                       \"namespaceImport\"  #>                         package:base934                         package:base935  #>                \"namespaceImportClasses\"                   \"namespaceImportFrom\"  #>                         package:base936                         package:base937  #>                \"namespaceImportMethods\"                                 \"nargs\"  #>                         package:base938                         package:base939  #>                                 \"nchar\"                                  \"ncol\"  #>                         package:base940                         package:base941  #>                               \"new.env\"                                  \"next\"  #>                         package:base942                         package:base943  #>                              \"ngettext\"                               \"nlevels\"  #>                         package:base944                         package:base945  #>                               \"noquote\"                                  \"norm\"  #>                         package:base946                         package:base947  #>                         \"normalizePath\"                                  \"nrow\"  #>                         package:base948                         package:base949  #>                              \"nullfile\"                             \"numToBits\"  #>                         package:base950                         package:base951  #>                             \"numToInts\"                               \"numeric\"  #>                         package:base952                         package:base953  #>                       \"numeric_version\"                                \"nzchar\"  #>                         package:base954                         package:base955  #>                               \"objects\"                              \"oldClass\"  #>                         package:base956                         package:base957  #>                            \"oldClass<-\"                               \"on.exit\"  #>                         package:base958                         package:base959  #>                                  \"open\"                       \"open.connection\"  #>                         package:base960                         package:base961  #>                          \"open.srcfile\"                     \"open.srcfilealias\"  #>                         package:base962                         package:base963  #>                      \"open.srcfilecopy\"                               \"options\"  #>                         package:base964                         package:base965  #>                                 \"order\"                               \"ordered\"  #>                         package:base966                         package:base967  #>                                 \"outer\"                              \"packBits\"  #>                         package:base968                         package:base969  #>                          \"packageEvent\"                   \"packageHasNamespace\"  #>                         package:base970                         package:base971  #>                  \"packageNotFoundError\"                 \"packageStartupMessage\"  #>                         package:base972                         package:base973  #>                       \"package_version\"                              \"pairlist\"  #>                         package:base974                         package:base975  #>                            \"parent.env\"                          \"parent.env<-\"  #>                         package:base976                         package:base977  #>                          \"parent.frame\"                                 \"parse\"  #>                         package:base978                         package:base979  #>                    \"parseNamespaceFile\"                                 \"paste\"  #>                         package:base980                         package:base981  #>                                \"paste0\"                           \"path.expand\"  #>                         package:base982                         package:base983  #>                          \"path.package\"                           \"pcre_config\"  #>                         package:base984                         package:base985  #>                                    \"pi\"                                  \"pipe\"  #>                         package:base986                         package:base987  #>                                  \"plot\"                                \"pmatch\"  #>                         package:base988                         package:base989  #>                                  \"pmax\"                              \"pmax.int\"  #>                         package:base990                         package:base991  #>                                  \"pmin\"                              \"pmin.int\"  #>                         package:base992                         package:base993  #>                              \"polyroot\"                            \"pos.to.env\"  #>                         package:base994                         package:base995  #>                                \"pretty\"                        \"pretty.default\"  #>                         package:base996                         package:base997  #>                             \"prettyNum\"                                 \"print\"  #>                         package:base998                         package:base999  #>                            \"print.AsIs\"                         \"print.DLLInfo\"  #>                        package:base1000                        package:base1001  #>                     \"print.DLLInfoList\"           \"print.DLLRegisteredRoutines\"  #>                        package:base1002                        package:base1003  #>                            \"print.Date\"                           \"print.Dlist\"  #>                        package:base1004                        package:base1005  #>               \"print.NativeRoutineList\"                         \"print.POSIXct\"  #>                        package:base1006                        package:base1007  #>                         \"print.POSIXlt\"                              \"print.by\"  #>                        package:base1008                        package:base1009  #>                       \"print.condition\"                      \"print.connection\"  #>                        package:base1010                        package:base1011  #>                      \"print.data.frame\"                         \"print.default\"  #>                        package:base1012                        package:base1013  #>                        \"print.difftime\"                           \"print.eigen\"  #>                        package:base1014                        package:base1015  #>                          \"print.factor\"                        \"print.function\"  #>                        package:base1016                        package:base1017  #>                         \"print.hexmode\"                      \"print.libraryIQR\"  #>                        package:base1018                        package:base1019  #>                          \"print.listof\"                         \"print.noquote\"  #>                        package:base1020                        package:base1021  #>                 \"print.numeric_version\"                         \"print.octmode\"  #>                        package:base1022                        package:base1023  #>                     \"print.packageInfo\"                       \"print.proc_time\"  #>                        package:base1024                        package:base1025  #>                         \"print.restart\"                             \"print.rle\"  #>                        package:base1026                        package:base1027  #>                     \"print.simple.list\"                         \"print.srcfile\"  #>                        package:base1028                        package:base1029  #>                          \"print.srcref\"                   \"print.summary.table\"  #>                        package:base1030                        package:base1031  #>                \"print.summary.warnings\"                  \"print.summaryDefault\"  #>                        package:base1032                        package:base1033  #>                           \"print.table\"                        \"print.warnings\"  #>                        package:base1034                        package:base1035  #>                              \"prmatrix\"                             \"proc.time\"  #>                        package:base1036                        package:base1037  #>                                  \"prod\"                            \"prop.table\"  #>                        package:base1038                        package:base1039  #>                           \"proportions\"                       \"provideDimnames\"  #>                        package:base1040                        package:base1041  #>                              \"psigamma\"                              \"pushBack\"  #>                        package:base1042                        package:base1043  #>                        \"pushBackLength\"                                     \"q\"  #>                        package:base1044                        package:base1045  #>                                    \"qr\"                                  \"qr.Q\"  #>                        package:base1046                        package:base1047  #>                                  \"qr.R\"                                  \"qr.X\"  #>                        package:base1048                        package:base1049  #>                               \"qr.coef\"                            \"qr.default\"  #>                        package:base1050                        package:base1051  #>                             \"qr.fitted\"                                \"qr.qty\"  #>                        package:base1052                        package:base1053  #>                                 \"qr.qy\"                              \"qr.resid\"  #>                        package:base1054                        package:base1055  #>                              \"qr.solve\"                              \"quarters\"  #>                        package:base1056                        package:base1057  #>                         \"quarters.Date\"                       \"quarters.POSIXt\"  #>                        package:base1058                        package:base1059  #>                                  \"quit\"                                 \"quote\"  #>                        package:base1060                        package:base1061  #>                                 \"range\"                         \"range.default\"  #>                        package:base1062                        package:base1063  #>                                  \"rank\"                                \"rapply\"  #>                        package:base1064                        package:base1065  #>                                   \"raw\"                         \"rawConnection\"  #>                        package:base1066                        package:base1067  #>                    \"rawConnectionValue\"                              \"rawShift\"  #>                        package:base1068                        package:base1069  #>                             \"rawToBits\"                             \"rawToChar\"  #>                        package:base1070                        package:base1071  #>                                 \"rbind\"                      \"rbind.data.frame\"  #>                        package:base1072                        package:base1073  #>                                 \"rcond\"                              \"read.dcf\"  #>                        package:base1074                        package:base1075  #>                               \"readBin\"                              \"readChar\"  #>                        package:base1076                        package:base1077  #>                             \"readLines\"                               \"readRDS\"  #>                        package:base1078                        package:base1079  #>                          \"readRenviron\"                              \"readline\"  #>                        package:base1080                        package:base1081  #>                         \"reg.finalizer\"                               \"regexec\"  #>                        package:base1082                        package:base1083  #>                               \"regexpr\"                      \"registerS3method\"  #>                        package:base1084                        package:base1085  #>                     \"registerS3methods\"                            \"regmatches\"  #>                        package:base1086                        package:base1087  #>                          \"regmatches<-\"                                \"remove\"  #>                        package:base1088                        package:base1089  #>                    \"removeTaskCallback\"                                   \"rep\"  #>                        package:base1090                        package:base1091  #>                              \"rep.Date\"                           \"rep.POSIXct\"  #>                        package:base1092                        package:base1093  #>                           \"rep.POSIXlt\"                          \"rep.difftime\"  #>                        package:base1094                        package:base1095  #>                            \"rep.factor\"                               \"rep.int\"  #>                        package:base1096                        package:base1097  #>                   \"rep.numeric_version\"                               \"rep_len\"  #>                        package:base1098                        package:base1099  #>                                \"repeat\"                               \"replace\"  #>                        package:base1100                        package:base1101  #>                             \"replicate\"                               \"require\"  #>                        package:base1102                        package:base1103  #>                      \"requireNamespace\"                    \"restartDescription\"  #>                        package:base1104                        package:base1105  #>                        \"restartFormals\"                            \"retracemem\"  #>                        package:base1106                        package:base1107  #>                                \"return\"                           \"returnValue\"  #>                        package:base1108                        package:base1109  #>                                   \"rev\"                           \"rev.default\"  #>                        package:base1110                        package:base1111  #>                                   \"rle\"                                    \"rm\"  #>                        package:base1112                        package:base1113  #>                                 \"round\"                            \"round.Date\"  #>                        package:base1114                        package:base1115  #>                          \"round.POSIXt\"                                   \"row\"  #>                        package:base1116                        package:base1117  #>                             \"row.names\"                  \"row.names.data.frame\"  #>                        package:base1118                        package:base1119  #>                     \"row.names.default\"                           \"row.names<-\"  #>                        package:base1120                        package:base1121  #>                \"row.names<-.data.frame\"                   \"row.names<-.default\"  #>                        package:base1122                        package:base1123  #>                              \"rowMeans\"                               \"rowSums\"  #>                        package:base1124                        package:base1125  #>                              \"rownames\"                            \"rownames<-\"  #>                        package:base1126                        package:base1127  #>                                \"rowsum\"                     \"rowsum.data.frame\"  #>                        package:base1128                        package:base1129  #>                        \"rowsum.default\"                                \"sQuote\"  #>                        package:base1130                        package:base1131  #>                                \"sample\"                            \"sample.int\"  #>                        package:base1132                        package:base1133  #>                                \"sapply\"                                  \"save\"  #>                        package:base1134                        package:base1135  #>                            \"save.image\"                               \"saveRDS\"  #>                        package:base1136                        package:base1137  #>                                 \"scale\"                         \"scale.default\"  #>                        package:base1138                        package:base1139  #>                                  \"scan\"                                \"search\"  #>                        package:base1140                        package:base1141  #>                           \"searchpaths\"                                  \"seek\"  #>                        package:base1142                        package:base1143  #>                       \"seek.connection\"                                   \"seq\"  #>                        package:base1144                        package:base1145  #>                              \"seq.Date\"                            \"seq.POSIXt\"  #>                        package:base1146                        package:base1147  #>                           \"seq.default\"                               \"seq.int\"  #>                        package:base1148                        package:base1149  #>                             \"seq_along\"                               \"seq_len\"  #>                        package:base1150                        package:base1151  #>                              \"sequence\"                      \"sequence.default\"  #>                        package:base1152                        package:base1153  #>                             \"serialize\"                          \"serverSocket\"  #>                        package:base1154                        package:base1155  #>                              \"set.seed\"                               \"setHook\"  #>                        package:base1156                        package:base1157  #>                      \"setNamespaceInfo\"                   \"setSessionTimeLimit\"  #>                        package:base1158                        package:base1159  #>                          \"setTimeLimit\"                               \"setdiff\"  #>                        package:base1160                        package:base1161  #>                              \"setequal\"                                 \"setwd\"  #>                        package:base1162                        package:base1163  #>                               \"shQuote\"                       \"showConnections\"  #>                        package:base1164                        package:base1165  #>                                  \"sign\"                       \"signalCondition\"  #>                        package:base1166                        package:base1167  #>                                \"signif\"                       \"simpleCondition\"  #>                        package:base1168                        package:base1169  #>                           \"simpleError\"                         \"simpleMessage\"  #>                        package:base1170                        package:base1171  #>                         \"simpleWarning\"                        \"simplify2array\"  #>                        package:base1172                        package:base1173  #>                                   \"sin\"                                \"single\"  #>                        package:base1174                        package:base1175  #>                                  \"sinh\"                                  \"sink\"  #>                        package:base1176                        package:base1177  #>                           \"sink.number\"                                 \"sinpi\"  #>                        package:base1178                        package:base1179  #>                           \"slice.index\"                          \"socketAccept\"  #>                        package:base1180                        package:base1181  #>                      \"socketConnection\"                          \"socketSelect\"  #>                        package:base1182                        package:base1183  #>                         \"socketTimeout\"                                 \"solve\"  #>                        package:base1184                        package:base1185  #>                         \"solve.default\"                              \"solve.qr\"  #>                        package:base1186                        package:base1187  #>                                  \"sort\"                          \"sort.POSIXlt\"  #>                        package:base1188                        package:base1189  #>                          \"sort.default\"                              \"sort.int\"  #>                        package:base1190                        package:base1191  #>                             \"sort.list\"                                \"source\"  #>                        package:base1192                        package:base1193  #>                                 \"split\"                            \"split.Date\"  #>                        package:base1194                        package:base1195  #>                         \"split.POSIXct\"                      \"split.data.frame\"  #>                        package:base1196                        package:base1197  #>                         \"split.default\"                               \"split<-\"  #>                        package:base1198                        package:base1199  #>                    \"split<-.data.frame\"                       \"split<-.default\"  #>                        package:base1200                        package:base1201  #>                               \"sprintf\"                                  \"sqrt\"  #>                        package:base1202                        package:base1203  #>                               \"srcfile\"                          \"srcfilealias\"  #>                        package:base1204                        package:base1205  #>                           \"srcfilecopy\"                                \"srcref\"  #>                        package:base1206                        package:base1207  #>                       \"standardGeneric\"                            \"startsWith\"  #>                        package:base1208                        package:base1209  #>                                \"stderr\"                                 \"stdin\"  #>                        package:base1210                        package:base1211  #>                                \"stdout\"                                  \"stop\"  #>                        package:base1212                        package:base1213  #>                             \"stopifnot\"                          \"storage.mode\"  #>                        package:base1214                        package:base1215  #>                        \"storage.mode<-\"                        \"str2expression\"  #>                        package:base1216                        package:base1217  #>                              \"str2lang\"                              \"strftime\"  #>                        package:base1218                        package:base1219  #>                              \"strptime\"                                \"strrep\"  #>                        package:base1220                        package:base1221  #>                              \"strsplit\"                                \"strtoi\"  #>                        package:base1222                        package:base1223  #>                               \"strtrim\"                             \"structure\"  #>                        package:base1224                        package:base1225  #>                               \"strwrap\"                                   \"sub\"  #>                        package:base1226                        package:base1227  #>                                \"subset\"                     \"subset.data.frame\"  #>                        package:base1228                        package:base1229  #>                        \"subset.default\"                         \"subset.matrix\"  #>                        package:base1230                        package:base1231  #>                            \"substitute\"                                \"substr\"  #>                        package:base1232                        package:base1233  #>                              \"substr<-\"                             \"substring\"  #>                        package:base1234                        package:base1235  #>                           \"substring<-\"                                   \"sum\"  #>                        package:base1236                        package:base1237  #>                               \"summary\"                          \"summary.Date\"  #>                        package:base1238                        package:base1239  #>                       \"summary.POSIXct\"                       \"summary.POSIXlt\"  #>                        package:base1240                        package:base1241  #>                    \"summary.connection\"                    \"summary.data.frame\"  #>                        package:base1242                        package:base1243  #>                       \"summary.default\"                        \"summary.factor\"  #>                        package:base1244                        package:base1245  #>                        \"summary.matrix\"                     \"summary.proc_time\"  #>                        package:base1246                        package:base1247  #>                       \"summary.srcfile\"                        \"summary.srcref\"  #>                        package:base1248                        package:base1249  #>                         \"summary.table\"                      \"summary.warnings\"  #>                        package:base1250                        package:base1251  #>                      \"suppressMessages\"        \"suppressPackageStartupMessages\"  #>                        package:base1252                        package:base1253  #>                      \"suppressWarnings\"                     \"suspendInterrupts\"  #>                        package:base1254                        package:base1255  #>                                   \"svd\"                                 \"sweep\"  #>                        package:base1256                        package:base1257  #>                                \"switch\"                              \"sys.call\"  #>                        package:base1258                        package:base1259  #>                             \"sys.calls\"                             \"sys.frame\"  #>                        package:base1260                        package:base1261  #>                            \"sys.frames\"                          \"sys.function\"  #>                        package:base1262                        package:base1263  #>                        \"sys.load.image\"                            \"sys.nframe\"  #>                        package:base1264                        package:base1265  #>                           \"sys.on.exit\"                            \"sys.parent\"  #>                        package:base1266                        package:base1267  #>                           \"sys.parents\"                        \"sys.save.image\"  #>                        package:base1268                        package:base1269  #>                            \"sys.source\"                            \"sys.status\"  #>                        package:base1270                        package:base1271  #>                                \"system\"                           \"system.file\"  #>                        package:base1272                        package:base1273  #>                           \"system.time\"                               \"system2\"  #>                        package:base1274                        package:base1275  #>                                     \"t\"                          \"t.data.frame\"  #>                        package:base1276                        package:base1277  #>                             \"t.default\"                                 \"table\"  #>                        package:base1278                        package:base1279  #>                              \"tabulate\"                                   \"tan\"  #>                        package:base1280                        package:base1281  #>                                  \"tanh\"                                 \"tanpi\"  #>                        package:base1282                        package:base1283  #>                                \"tapply\"                   \"taskCallbackManager\"  #>                        package:base1284                        package:base1285  #>                            \"tcrossprod\"                               \"tempdir\"  #>                        package:base1286                        package:base1287  #>                              \"tempfile\"                        \"textConnection\"  #>                        package:base1288                        package:base1289  #>                   \"textConnectionValue\"                              \"toString\"  #>                        package:base1290                        package:base1291  #>                      \"toString.default\"                               \"tolower\"  #>                        package:base1292                        package:base1293  #>                                \"topenv\"                               \"toupper\"  #>                        package:base1294                        package:base1295  #>                                 \"trace\"                             \"traceback\"  #>                        package:base1296                        package:base1297  #>                              \"tracemem\"                          \"tracingState\"  #>                        package:base1298                        package:base1299  #>                             \"transform\"                  \"transform.data.frame\"  #>                        package:base1300                        package:base1301  #>                     \"transform.default\"                              \"trigamma\"  #>                        package:base1302                        package:base1303  #>                                \"trimws\"                                 \"trunc\"  #>                        package:base1304                        package:base1305  #>                            \"trunc.Date\"                          \"trunc.POSIXt\"  #>                        package:base1306                        package:base1307  #>                              \"truncate\"                   \"truncate.connection\"  #>                        package:base1308                        package:base1309  #>                                   \"try\"                              \"tryCatch\"  #>                        package:base1310                        package:base1311  #>                      \"tryInvokeRestart\"                                \"typeof\"  #>                        package:base1312                        package:base1313  #>                        \"unCfillPOSIXlt\"                               \"unclass\"  #>                        package:base1314                        package:base1315  #>                               \"undebug\"                                 \"union\"  #>                        package:base1316                        package:base1317  #>                                \"unique\"                        \"unique.POSIXlt\"  #>                        package:base1318                        package:base1319  #>                          \"unique.array\"                     \"unique.data.frame\"  #>                        package:base1320                        package:base1321  #>                        \"unique.default\"                         \"unique.matrix\"  #>                        package:base1322                        package:base1323  #>                \"unique.numeric_version\"                       \"unique.warnings\"  #>                        package:base1324                        package:base1325  #>                                 \"units\"                        \"units.difftime\"  #>                        package:base1326                        package:base1327  #>                               \"units<-\"                      \"units<-.difftime\"  #>                        package:base1328                        package:base1329  #>                             \"unix.time\"                                \"unlink\"  #>                        package:base1330                        package:base1331  #>                                \"unlist\"                       \"unloadNamespace\"  #>                        package:base1332                        package:base1333  #>                         \"unlockBinding\"                                \"unname\"  #>                        package:base1334                        package:base1335  #>                           \"unserialize\"                               \"unsplit\"  #>                        package:base1336                        package:base1337  #>                               \"untrace\"                            \"untracemem\"  #>                        package:base1338                        package:base1339  #>                                   \"unz\"                             \"upper.tri\"  #>                        package:base1340                        package:base1341  #>                                   \"url\"                             \"utf8ToInt\"  #>                        package:base1342                        package:base1343  #>                              \"validEnc\"                             \"validUTF8\"  #>                        package:base1344                        package:base1345  #>                                \"vapply\"                                \"vector\"  #>                        package:base1346                        package:base1347  #>                               \"version\"                               \"warning\"  #>                        package:base1348                        package:base1349  #>                      \"warningCondition\"                              \"warnings\"  #>                        package:base1350                        package:base1351  #>                              \"weekdays\"                         \"weekdays.Date\"  #>                        package:base1352                        package:base1353  #>                       \"weekdays.POSIXt\"                                 \"which\"  #>                        package:base1354                        package:base1355  #>                             \"which.max\"                             \"which.min\"  #>                        package:base1356                        package:base1357  #>                                 \"while\"                                  \"with\"  #>                        package:base1358                        package:base1359  #>                          \"with.default\"                         \"withAutoprint\"  #>                        package:base1360                        package:base1361  #>                   \"withCallingHandlers\"                          \"withRestarts\"  #>                        package:base1362                        package:base1363  #>                           \"withVisible\"                                \"within\"  #>                        package:base1364                        package:base1365  #>                     \"within.data.frame\"                           \"within.list\"  #>                        package:base1366                        package:base1367  #>                                 \"write\"                             \"write.dcf\"  #>                        package:base1368                        package:base1369  #>                              \"writeBin\"                             \"writeChar\"  #>                        package:base1370                        package:base1371  #>                            \"writeLines\"                                   \"xor\"  #>                        package:base1372                        package:base1373  #>                    \"xpdrows.data.frame\"                                 \"xtfrm\"  #>                        package:base1374                        package:base1375  #>                            \"xtfrm.AsIs\"                            \"xtfrm.Date\"  #>                        package:base1376                        package:base1377  #>                         \"xtfrm.POSIXct\"                         \"xtfrm.POSIXlt\"  #>                        package:base1378                        package:base1379  #>                      \"xtfrm.data.frame\"                         \"xtfrm.default\"  #>                        package:base1380                        package:base1381  #>                        \"xtfrm.difftime\"                          \"xtfrm.factor\"  #>                        package:base1382                        package:base1383  #>                 \"xtfrm.numeric_version\"                                \"xzfile\"  #>                        package:base1384                        package:base1385  #>                              \"zapsmall\"                                     \"{\"  #>                        package:base1386                        package:base1387  #>                                     \"|\"                             \"|.hexmode\"  #>                        package:base1388                        package:base1389  #>                             \"|.octmode\"                                    \"||\"  #>                        package:base1390  #>                                     \"~\"  #>  #> $fun_names #> $fun_names$c5 #> [1] \"gregexpr\" \"paste0\"   #>  #> $fun_names$c7 #> [1] \"c\" #>  #> $fun_names$c8 #> [1] \"regmatches\" #>  #> $fun_names$c9 #> [1] \"FUN1\" #>  #> $fun_names$c10 #> [1] \"regmatches\" #>  #> $fun_names$c11 #> [1] \"sum\" #>  #> $fun_names$c12 #> [1] \"regmatches\" #>  #> $fun_names$c14 #> [1] \"paste0\" #>  #> $fun_names$c15 #> [1] \"col1\" #>  #> $fun_names$c16 #> [1] \"length\" \"roc1\"   \"col2\"   \"length\" #>  #> $fun_names$c17 #> [1] \"col3\"   \"length\" #>  #> $fun_names$c18 #> [1] \"sub\" #>  #> $fun_names$c19 #> [1] \"range\" #>  #> $fun_names$c20 #> [1] \"paste0\"  \"roc00\"   \"ks.test\" \"roc4\"    #>  #> $fun_names$c21 #> [1] \"roc0\"   \"length\" #>  #> $fun_names$c22 #> [1] \"return\" #>  #> $fun_names$c23 #> [1] \"return\" #>  #>  #> $fun_names_pos #> $fun_names_pos$c5 #> [1] 12 37 #>  #> $fun_names_pos$c7 #> [1] 13 #>  #> $fun_names_pos$c8 #> [1] 20 #>  #> $fun_names_pos$c9 #> [1] 1 #>  #> $fun_names_pos$c10 #> [1] 13 #>  #> $fun_names_pos$c11 #> [1] 1 #>  #> $fun_names_pos$c12 #> [1] 3 #>  #> $fun_names_pos$c14 #> [1] 20 #>  #> $fun_names_pos$c15 #> [1] 49 #>  #> $fun_names_pos$c16 #> [1]  7 14 27 42 #>  #> $fun_names_pos$c17 #> [1]  9 24 #>  #> $fun_names_pos$c18 #> [1] 11 #>  #> $fun_names_pos$c19 #> [1] 1 #>  #> $fun_names_pos$c20 #> [1] 20 45 63 71 #>  #> $fun_names_pos$c21 #> [1]  9 24 #>  #> $fun_names_pos$c22 #> [1] 1 #>  #> $fun_names_pos$c23 #> [1] 7 #>  #>  #> $code_line_nb #>  [1]  5  7  8  9 10 11 12 14 15 16 17 18 19 20 21 22 23 #>  #> $internal_fun_names #> [1] \"FUN1\" #>  #> $arg_user_setting #> $arg_user_setting$x #> test #>  #>"},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":null,"dir":"Reference","previous_headings":"","what":".has_odd_number_of_quotes — .has_odd_number_of_quotes","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"Determine string odd number quotes.","code":""},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"","code":".has_odd_number_of_quotes(input_string, pattern, lib_path, error_text)"},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"input_string Single string. pattern Either '\"' \"'\". lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"TRUE FALSE.","code":""},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"- Consider present ' (pattern = \"'\") \" (pattern = '\"'). Meaning , function treat special situation, like escape quotes \\\", situation like \"'\". must removed input_string necessary, using instance: input_string <- gsub( x = input_string, pattern = '\"\\'\"', replacement = '   ') - Warning: requires saferDev::arg_check. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.has_odd_number_of_quotes.","code":""},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"Gael Millot","code":""},{"path":"/reference/dot-has_odd_number_of_quotes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".has_odd_number_of_quotes — .has_odd_number_of_quotes","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.has_odd_number_of_quotes(input_string = 'This is a \"test\" string with \"even\" quotes', pattern = '\"', lib_path = NULL, error_text = \" INSIDE P1::F1\")"},{"path":"/reference/dot-in_parenthesis_replacement.html","id":null,"dir":"Reference","previous_headings":"","what":".in_parenthesis_replacement — .in_parenthesis_replacement","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"Replace pattern inside () another replacement pattern","code":""},{"path":"/reference/dot-in_parenthesis_replacement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"","code":".in_parenthesis_replacement(   string,   pattern,   no_regex_pattern,   replacement,   perl,   open_pos,   close_pos,   lib_path,   error_text )"},{"path":"/reference/dot-in_parenthesis_replacement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"string Single string. pattern Single string indicating pattern detect. Warning : must simple pattern, like \",\". no_regex_pattern Single string pattern detect without escape characters list, etc. replacement Single string pattern replacement. regex. perl Single logical value. Use Perl regex pattern ? open_pos Single positive non zero integer indicating position opening parenthesis. close_pos Single positive non zero integer indicating position closing parenthesis. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-in_parenthesis_replacement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"list containing: $string: input string pattern replaced replacement pattern. $pos: positions 1rst character replaced pattern. NULL replaced pattern. case, $string identical input string","code":""},{"path":"/reference/dot-in_parenthesis_replacement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"- Warning : must simple pattern, like \"\\(\". - Warning: requires saferDev::arg_check. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.in_parenthesis_replacement.","code":""},{"path":"/reference/dot-in_parenthesis_replacement.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"Gael Millot","code":""},{"path":"/reference/dot-in_parenthesis_replacement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".in_parenthesis_replacement — .in_parenthesis_replacement","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.in_parenthesis_replacement(string = \"pattern = base::paste0(pattern, \\\"\\\\\\\\(#\\\"), text = text\", pattern = \",\", no_regex_pattern = \",\", replacement = \" \", perl = TRUE, open_pos = 23, close_pos = 39,  lib_path = NULL, error_text = \" INSIDE P1::F1\")"},{"path":"/reference/dot-in_quotes_replacement.html","id":null,"dir":"Reference","previous_headings":"","what":".in_quotes_replacement — .in_quotes_replacement","title":".in_quotes_replacement — .in_quotes_replacement","text":"Replace pattern inside simple ou double quotes another replacement pattern get position replacements","code":""},{"path":"/reference/dot-in_quotes_replacement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".in_quotes_replacement — .in_quotes_replacement","text":"","code":".in_quotes_replacement(   string,   pattern,   no_regex_pattern,   replacement,   perl,   lib_path,   error_text )"},{"path":"/reference/dot-in_quotes_replacement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".in_quotes_replacement — .in_quotes_replacement","text":"string Single string. pattern Single string indicating pattern detect. Warning : must simple pattern, like \"\\(\". no_regex_pattern Single string pattern detect without escape characters list, etc. replacement Single string pattern replacement. Must number character no_regex_pattern. regex. perl Single logical value. Use Perl regex pattern ? lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-in_quotes_replacement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".in_quotes_replacement — .in_quotes_replacement","text":"list containing: $string: input string pattern replaced replacement pattern. $pos: vector positions 1rst character replaced pattern. NULL replaced pattern. case, $string identical input string.","code":""},{"path":"/reference/dot-in_quotes_replacement.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".in_quotes_replacement — .in_quotes_replacement","text":"function works notably replacing first: 1) three consecutive characters \"'\" '\"' three spaces, 2) \"\\\"'\" '\\'\"' four spaces 3) escape quotes like \\\" \\' two spaces. Warning : must simple pattern, like \"\\(\". Warning: requires saferDev::arg_check, saferDev:::.has_odd_number_of_quotes. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.in_quotes_replacement.","code":""},{"path":"/reference/dot-in_quotes_replacement.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".in_quotes_replacement — .in_quotes_replacement","text":"Gael Millot","code":""},{"path":"/reference/dot-in_quotes_replacement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".in_quotes_replacement — .in_quotes_replacement","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") ; saferDev:::.in_quotes_replacement(string = paste(deparse(test), collapse = \"\"), pattern = \"\\\\)\", no_regex_pattern = \")\", replacement = \" \", perl = TRUE, lib_path = NULL, error_text = \" INSIDE P1::F1\") #> $string #> [1] \"function (text, pattern) {    FUN1 <- function() {    }    matches <- gregexpr(pattern = base::paste0(pattern, \\\"\\\\\\\\(#\\\"),         text = text)    dt <- base::c(2:8)    matched_strings <- regmatches(x = text, m = matches)[[1]]    FUN1()    tempo4 <- a$regmatches(x = text, m = matches)[[1]]    sum(1:3)    a$regmatches(x = 1)    tempo5 <- a$count    tempo.cat <- base::paste0(\\\"INTERNAL ERROR 4 IN \\\", function.name,         \\\" OF THE \\\", package.name, \\\" PACKAGE\\\\nLENGTHS OF col1 (\\\",         base::length(roc1()), \\\" , col2 (\\\", base::length(roc2),         \\\" , AND col3 (\\\", base::length(roc3), \\\" , SHOULD BE EQUAL\\\\n\\\")    result <- sub(\\\"\\\\\\\\($##\\\", \\\"\\\", matched_strings)    range(1:3)    tempo.cat <- base::paste0(\\\"IAGE\\\\nLENGTHS OF roc00(  (\\\", base::ks.test(roc4()),         \\\" , and roc0 (\\\", base::length(roc5), \\\"  SHOULL\\\\n\\\")    return(baba)    base::return(bobo)}\" #>  #> $pos #> [1] 509 550 587 725 763 800 #>  saferDev:::.in_quotes_replacement(string = 'paste0(\"IAGE((\", paste0(1:3, collapse = \" \"), \"A)B()\")', pattern = \"\\\\)\", no_regex_pattern = \")\", replacement = \" \", perl = TRUE, lib_path = NULL, error_text = \" INSIDE P1::F1\") #> $string #> [1] \"paste0(\\\"IAGE((\\\", paste0(1:3, collapse = \\\" \\\"), \\\"A B( \\\")\" #>  #> $pos #> [1] 49 52 #>"},{"path":"/reference/dot-noclean_functions.html","id":null,"dir":"Reference","previous_headings":"","what":".noclean_functions — .noclean_functions","title":".noclean_functions — .noclean_functions","text":"Indicate function names inside quotes $","code":""},{"path":"/reference/dot-noclean_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".noclean_functions — .noclean_functions","text":"","code":".noclean_functions(col1, col2, col3, ini, lib_path, error_text)"},{"path":"/reference/dot-noclean_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".noclean_functions — .noclean_functions","text":"col1 Vector integers line numbers code. col2 Vector strings function names scrutinized. col3 Vector strings code function name. ini Vector strings initial function code analyzed. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-noclean_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".noclean_functions — .noclean_functions","text":"logical vector indicating function names col2 inside quotes $ (TRUE) ini (FALSE). Can length 0.","code":""},{"path":"/reference/dot-noclean_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".noclean_functions — .noclean_functions","text":"- Warning: requires saferDev::arg_check, saferDev:::.has_odd_number_of_quotes. main safer functions, section \"######## check required functions required packages\" add functions checking presence saferDev:::.noclean_functions.","code":""},{"path":"/reference/dot-noclean_functions.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".noclean_functions — .noclean_functions","text":"Gael Millot","code":""},{"path":"/reference/dot-noclean_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".noclean_functions — .noclean_functions","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") saferDev:::.noclean_functions(col1 =  c(15, 17), col2 = c(\"gregexpr\", \"regmatches\"), col3 = c(\"matches <- \",  \"matched_strings <- \" ), ini = utils::capture.output(test), lib_path = NULL, error_text = \" INSIDE P1::F1\") #> [1] FALSE FALSE"},{"path":"/reference/dot-pack_and_function_check.html","id":null,"dir":"Reference","previous_headings":"","what":".pack_and_function_check — .pack_and_function_check","title":".pack_and_function_check — .pack_and_function_check","text":"Check 1) required functions present required packages 2) required packages installed locally. Simplified version saferDev::is_function_here(), used internal function functions package.","code":""},{"path":"/reference/dot-pack_and_function_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".pack_and_function_check — .pack_and_function_check","text":"","code":".pack_and_function_check(fun, lib_path, error_text)"},{"path":"/reference/dot-pack_and_function_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".pack_and_function_check — .pack_and_function_check","text":"fun Character vector names required functions, preceded name package belong double triple colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/dot-pack_and_function_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".pack_and_function_check — .pack_and_function_check","text":"error message least one checked packages missing lib_path, least one checked functions missing required package, nothing otherwise.","code":""},{"path":"/reference/dot-pack_and_function_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".pack_and_function_check — .pack_and_function_check","text":"Gael Millot Yushi Han Haiding Wang Gael Millot <gael.millot@pasteur.fr>","code":""},{"path":"/reference/dot-pack_and_function_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".pack_and_function_check — .pack_and_function_check","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function (not found by devtools::check()) saferDev:::.pack_and_function_check(fun = 1, lib_path = NULL, error_text = \" INSIDE F1.\") # this example returns an error saferDev:::.pack_and_function_check(fun = \"ggplot2::notgood\", lib_path = base::.libPaths(), error_text = \" INSIDE P1::F1\") # this example returns an error #> Error:  #>  #> ================ #>  #> ERROR IN saferDev:::.pack_and_function_check() INSIDE P1::F1 #>  #> REQUIRED FUNCTION IS MISSING IN THE INSTALLED PACKAGE: #> ggplot2::notgood #>  #> IN ONE OF THESE FOLDERS: #> /__w/_temp/Library #> /usr/local/lib/R/site-library #> /usr/local/lib/R/library #>  #> ================ #>  saferDev:::.pack_and_function_check(fun = c(\"ggplot2::geom_point\", \"grid::gpar\"), lib_path = base::.libPaths(), error_text = \" INSIDE P1::F1\")  # nothing should happen"},{"path":"/reference/env_check.html","id":null,"dir":"Reference","previous_headings":"","what":"env_check — env_check","title":"env_check — env_check","text":"Verify object names environment defined pos parameter identical object names environments (following R Scope). can used verify names used objects inside function working environment override names objects already present R environments, following R scope.","code":""},{"path":"/reference/env_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"env_check — env_check","text":"","code":"env_check(   pos = 1,   name = NULL,   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/env_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"env_check — env_check","text":"pos Single non nul positive integer indicating position environment checked (argument n parent.frame() function). Value 1 means one step env_check() local environment (default). means env_check(pos = 1) used inside function , checks name object local environment function also present environments, following R Scope, starting just environment. env_check(pos = 1) used working (Global) environment (named .GlobalEnv), checks object names .GlobalEnv environment, environments. See examples . name Single character string indicating string changes name checked env (added output string). safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/env_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"env_check — env_check","text":"character string indicating object names tested environment match object names environments, following R scope, NULL match.","code":""},{"path":[]},{"path":"/reference/env_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"env_check — env_check","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/env_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"env_check — env_check","text":"","code":"# Examples in the working environment rm(q) #> Warning: object 'q' not found # creation of the object mean with value 1 in the .GlobalEnv environment,  # knowing that the mean() function also exists in the environment base, above .GlobalEnv: mean <- 1  # creation of the object t.test with value 1 in the .GlobalEnv environment,  # knowing that the t.test() function also exists in the environment stats, above .GlobalEnv: t.test <- 1  search() # current R scope (order of the successive R environments). #>  [1] \".GlobalEnv\"        \"package:saferDev\"  \"package:stats\"     #>  [4] \"package:graphics\"  \"package:grDevices\" \"package:utils\"     #>  [7] \"package:datasets\"  \"package:methods\"   \"Autoloads\"         #> [10] \"package:base\"      utils::find(\"mean\") # where the objects with the name \"mean\" are present. #> [1] \"package:base\" utils::find(\"t.test\") # where the objects with the name \"mean\" are present. #> [1] \"package:stats\" a <- env_check(pos = 1) # test if any object name of the global environment are above environments  a # output string. #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\npackage:base\\n\" cat(a) #> SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN : #> package:stats: t.test #> package:base: mean #> SEARCH PATH CHECKED: #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> .GlobalEnv #> package:saferDev #> package:stats #> package:graphics #> package:grDevices #> package:utils #> package:datasets #> package:methods #> Autoloads #> package:base # test if any object of the stats environment (one step above .GlobalEnv)  # are in upper environments of stats. Returns NULL since no object names of stats are in upper environments: env_check(pos = 2)  #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN :\\neval_with_user_handlers(expr, envir, enclos, user_handlers): enclos envir expr\\nwithCallingHandlers(withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers)), warning = wHandler, error = eHandler, message = mHandler): expr\\ndoTryCatch(return(expr), name, parentenv, handler): expr\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): expr\\ntryCatchList(expr, classes, parentenv, handlers): expr\\ntryCatch(expr, error = function(e) {\\n    call <- conditionCall(e)\\n    if (!is.null(call)) {\\n        if (identical(call[[1]], quote(doTryCatch))) \\n            call <- sys.call(-4)\\n        dcall <- deparse(call, nlines = 1)\\n        prefix <- paste(\\\"Error in\\\", dcall, \\\": \\\")\\n        LONG <- 75\\n        sm <- strsplit(conditionMessage(e), \\\"\\\\n\\\")[[1]]\\n        w <- 14 + nchar(dcall, type = \\\"w\\\") + nchar(sm[1], type = \\\"w\\\")\\n        if (is.na(w)) \\n            w <- 14 + nchar(dcall, type = \\\"b\\\") + nchar(sm[1], type = \\\"b\\\")\\n        if (w > LONG) \\n            prefix <- paste0(prefix, \\\"\\\\n  \\\")\\n    }\\n    else prefix <- \\\"Error : \\\"\\n    msg <- paste0(prefix, conditionMessage(e), \\\"\\\\n\\\")\\n    .Internal(seterrmessage(msg[1]))\\n    if (!silent && isTRUE(getOption(\\\"show.error.messages\\\"))) {\\n        cat(msg, file = outFile)\\n        .Internal(printDeferredWarnings())\\n    }\\n    invisible(structure(msg, class = \\\"try-error\\\", condition = e))\\n}): expr\\ntry(f, silent = TRUE): expr\\nevaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, debug = debug, last = i == length(out), use_try = stop_on_error != 2, keep_warning = keep_warning, keep_message = keep_message, log_echo = log_echo, log_warning = log_warning, output_handler = output_handler, include_timing = include_timing): enclos envir expr\\nevaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler): enclos envir expr\\nwithCallingHandlers(data_reference_topic(topic, pkg, examples_env = examples_env, run_dont_run = run_dont_run), error = function(err) {\\n    cli::cli_abort(\\\"Failed to parse Rd in {.file {topic$file_in}}\\\", parent = err, call = quote(build_reference()))\\n}): expr\\nwithCallingHandlers(expr, error = function(cnd) {\\n    if (i == 0) {\\n    }\\n    else {\\n        message <- c(i = \\\"In index: {i}.\\\")\\n        if (!is.null(names) && !is.na(names[[i]]) && names[[i]] != \\\"\\\") {\\n            name <- names[[i]]\\n            message <- c(message, i = \\\"With name: {name}.\\\")\\n        }\\n        else {\\n            name <- NULL\\n        }\\n        cli::cli_abort(message, location = i, name = name, parent = cnd, call = error_call, class = \\\"purrr_error_indexed\\\")\\n    }\\n}): expr\\nwith_indexed_errors(i = i, names = names, error_call = .purrr_error_call, call_with_cleanup(map_impl, environment(), .type, .progress, n, names, i)): expr\\nwithCallingHandlers(code, purrr_error_indexed = function(err) {\\n    cnd_signal(err$parent)\\n}): expr\\nSEARCH PATH CHECKED:\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n<environment>\\n.GlobalEnv\\npackage:saferDev\\npackage:stats\\npackage:graphics\\npackage:grDevices\\npackage:utils\\npackage:datasets\\npackage:methods\\nAutoloads\\npackage:base\\n\" rm(mean) ; rm (t.test)  # Examples inside a function # env_check() checks if the object names inside the fun1 function  # exist in the .GlobalEnv environment and above: fun1 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 1)}  a <- fun1() cat(a) # Warning: cat(fun1()) create a additional layer of environment. #> SOME VARIABLES OF THE CHECKED ENVIRONMENT UNNAMED ARE ALSO PRESENT IN : #> package:stats: t.test #> package:base: mean #> SEARCH PATH CHECKED: #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> .GlobalEnv #> package:saferDev #> package:stats #> package:graphics #> package:grDevices #> package:utils #> package:datasets #> package:methods #> Autoloads #> package:base # env_check() checks if the object names inside the environment one step above fun2(),  # here .GlobalEnv, exist in the upper environments of .GlobalEnv: fun2 <- function(){sum <- 0 ; env_check(pos = 2)}  fun2() # Warning: cat(fun2()) does not return NULL, because the environement tested is not anymore .GlobalEnv but inside cat(). #> NULL a <- fun2()  cat(a) # nothing displayed bacause fun2() returns NULL # With the name of the function fun3 indicated in the message: fun3 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 1, name = \"fun3\")} a <- fun3()  cat(a) #> SOME VARIABLES OF THE CHECKED ENVIRONMENT fun3 ARE ALSO PRESENT IN : #> package:stats: t.test #> package:base: mean #> SEARCH PATH CHECKED: #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> .GlobalEnv #> package:saferDev #> package:stats #> package:graphics #> package:grDevices #> package:utils #> package:datasets #> package:methods #> Autoloads #> package:base # Alternative way: # sys.calls() gives the name of the imbricated functions and  # sys.calls()[[length(sys.calls())]] the name of the function one step above. fun4 <- function(){     t.test <- 0 ;      mean <- 5 ;      name <- as.character(sys.calls()[[length(sys.calls())]]) ;      env_check(pos = 1, name = name) } a <- fun4()  cat(a) #> SOME VARIABLES OF THE CHECKED ENVIRONMENT fun4 ARE ALSO PRESENT IN : #> doTryCatch(return(expr), name, parentenv, handler): name #> tryCatchOne(expr, names, parentenv, handlers[[1]]): name #> package:stats: t.test #> package:base: mean #> SEARCH PATH CHECKED: #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> .GlobalEnv #> package:saferDev #> package:stats #> package:graphics #> package:grDevices #> package:utils #> package:datasets #> package:methods #> Autoloads #> package:base # A way to have the name of the tested environment according to test.pos value: fun7 <- function(){     min <- \"VALUE\"     fun8 <- function(){         test.pos <- 1 # value 1 tests the fun8 env, 2 tests the fun7 env.         range <- \"VALUE\"         name <- if(length(sys.calls()) >= test.pos){             as.character(sys.calls()[[length(sys.calls()) + 1 - test.pos]])         }else{             search()[(1:length(search()))[test.pos - length(sys.calls())]]         }         env_check(pos = test.pos, name = name)      }     fun8() } a <- fun7()  cat(a) #> SOME VARIABLES OF THE CHECKED ENVIRONMENT fun8 ARE ALSO PRESENT IN : #> doTryCatch(return(expr), name, parentenv, handler): name #> tryCatchOne(expr, names, parentenv, handlers[[1]]): name #> package:base: range #> SEARCH PATH CHECKED: #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> <environment> #> .GlobalEnv #> package:saferDev #> package:stats #> package:graphics #> package:grDevices #> package:utils #> package:datasets #> package:methods #> Autoloads #> package:base"},{"path":"/reference/get_message.html","id":null,"dir":"Reference","previous_headings":"","what":"get_message — get_message","title":"get_message — get_message","text":"Evaluate instruction written \"\" return first error message, last warning standard (non error non warning) messages ever exist. Using argument print_no = FALSE, return NULL message, convenient cases.","code":""},{"path":"/reference/get_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_message — get_message","text":"","code":"get_message(   data,   kind = \"error\",   header = TRUE,   print_no = FALSE,   text = NULL,   env = NULL,   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/get_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_message — get_message","text":"data Single character string. kind Single character string. Either \"error\" get error messages, \"warning\" get warning messages, \"message\" get non error non warning messages. header Single logical value. Add header returned message? print_no Single logical value. Print message saying message reported? text Single character string added output message (even message exists print_no TRUE). Inactivated header argument FALSE. Write NULL required. env object corresponding existing environment. data argument value evaluated indicated environment. Write NULL required (R scope used). Example env = .GlobalEnv. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/get_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_message — get_message","text":"function returns error, warning, standart message, single character string, depending selected using kind argument message exists. NULL selected message returned print_no argument FALSE. following message selected message returned print_no argument TRUE: \"(ERROR|WARNING|STANDARD) MESSAGE REPORTED\". following message 1) kind argument \"warning\" \"message\" error message returned 2) print_no argument TRUE: \"POTENTIAL (WARNING|STANDARD) MESSAGE ERROR MESSAGE REPORTED\".","code":""},{"path":"/reference/get_message.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_message — get_message","text":"WARNINGS first standard/error/warning message returned. Always use env argument get_message() used inside functions. function prevent printing, instance print() show() used inside instruction tested. prevent , use tempo <- utils::capture.output(error <- get_message(data = \"arg_check(data = '', class = mean, neg_values = FALSE, print = TRUE)\")). return get_message() assigned error printed messages captured utils::capture.output() assigned tempo. See examples.","code":""},{"path":[]},{"path":"/reference/get_message.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_message — get_message","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/get_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_message — get_message","text":"","code":"get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"error\", header = TRUE, print_no = FALSE, text = NULL, env = NULL, safer_check = TRUE, lib_path = NULL, error_text = \"\") #> NULL  get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"warning\",  print_no = TRUE, text = \"IN A\") #> [1] \"WARNING MESSAGE REPORTED IN A:\\nIn wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\"  get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"message\",  print_no = TRUE, text = \"IN A\") #> [1] \"NO STANDARD MESSAGE REPORTED IN A\"  get_message(data = \"wilcox.test()\", kind = \"message\", print_no = TRUE, text = \"IN A\") #> [1] \"NO POTENTIAL STANDARD MESSAGE BECAUSE OF ERROR MESSAGE REPORTED IN A\" get_message(data = \"wilcox.test()\", kind = \"error\", print_no = TRUE, text = \"IN A\") #> [1] \"ERROR MESSAGE REPORTED IN A:\\nIn wilcox.test.default() : argument \\\"x\\\" is missing, with no default\\n\"  get_message(data = \"sum(1)\", kind = \"error\", print_no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"message('ahah')\", kind = \"error\", print_no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"message('ahah')\", kind = \"message\", print_no = TRUE, text = \"IN A\") #> ahah #> [1] \"NO STANDARD MESSAGE REPORTED IN A\"  get_message(data = \"ggplot2::ggplot(data = data.frame(X = 1:10, stringsAsFactors = TRUE),  mapping = ggplot2::aes(x = X)) + ggplot2::geom_histogram()\", kind = \"message\", print_no = TRUE,  text = \"IN INSTRUCTION 1\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> [1] \"NO STANDARD MESSAGE REPORTED IN INSTRUCTION 1\""},{"path":"/reference/is_function_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_function_here — is_function_here","title":"is_function_here — is_function_here","text":"Check required functions present installed packages. controls modifications function names package versions.","code":""},{"path":"/reference/is_function_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_function_here — is_function_here","text":"","code":"is_function_here(fun, safer_check = TRUE, lib_path = NULL, error_text = \"\")"},{"path":"/reference/is_function_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_function_here — is_function_here","text":"fun Character vector names required functions, preceded name package belong double triple colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). Warning: write \"()\" end function. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/is_function_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_function_here — is_function_here","text":"error message least one checked packages missing lib_path, least one checked functions missing required package, nothing otherwise.","code":""},{"path":[]},{"path":"/reference/is_function_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_function_here — is_function_here","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/is_function_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_function_here — is_function_here","text":"","code":"if (FALSE)  # Example that return an error is_function_here(fun = \"ggplot2::notgood\", error_text = \" INSIDE P1::F1\") # commented because this example returns an error is_function_here(fun = c(\"ggplot2::geom_point\", \"grid::gpar\")) is_function_here(fun = \"c\") #> Error:  #>  #> ================ #>  #> ERROR IN saferDev::is_function_here(). #>  #> THE STRING IN fun ARGUMENT MUST CONTAIN \"::\" OR \":::\": #> c #>  #> ================ #>   is_function_here(fun = \"base::c\", error_text = \" INSIDE P1::F1\")"},{"path":"/reference/is_package_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_package_here — is_package_here","title":"is_package_here — is_package_here","text":"Check required packages installed locally.","code":""},{"path":"/reference/is_package_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_package_here — is_package_here","text":"","code":"is_package_here(   req_package,   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/is_package_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_package_here — is_package_here","text":"req_package Character vector package names check. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/is_package_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_package_here — is_package_here","text":"error message least one checked packages missing lib_path, nothing otherwise.","code":""},{"path":[]},{"path":"/reference/is_package_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_package_here — is_package_here","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/is_package_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_package_here — is_package_here","text":"","code":"if (FALSE)  # Example that return an error is_package_here(req_package = \"nopackage\", error_text = \" INSIDE P1::F1\") is_package_here(req_package = \"ggplot2\", lib_path = \"C:/Users/gmillot/AppData/Local/R/win-library/4.4\") # commented because this example returns an error if the lib_path argument is not an existing directory #> Error:  #>  #> ================ #>  #> ERROR IN saferDev::is_package_here(). #>  #> THE DIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXIST: #> C:/Users/gmillot/AppData/Local/R/win-library/4.4 #>  #> ================ #>   is_package_here(req_package = \"ggplot2\")"},{"path":"/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"report — report","title":"report — report","text":"Log file function: print character string data object output file.","code":""},{"path":"/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"report — report","text":"","code":"report(   data,   output = \"log.txt\",   path,   overwrite = FALSE,   rownames_kept = FALSE,   vector_cat = FALSE,   noquote = TRUE,   sep = 2,   safer_check = TRUE,   lib_path = NULL,   error_text = \"\" )"},{"path":"/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"report — report","text":"data Object print output file. NULL, nothing done, warning. output Single character string. Name output file. path Single character string indicating path write output file. overwrite Single logical value. output file already exists overwrite TRUE, error message returned (overwrite existing file possible). Otherwise, printing appended (output file created exist yet). rownames_kept Single logical value. Defines whether row names removed 2D objects. Warning: 1D tables, names values taken row names, thus removed rownames_kept FALSE. vector_cat Single logical value. TRUE print vector length > 1 using cat() instead capture.output(). Otherwise (default FALSE) opposite. Names values printed TRUE noquote Single logical value. TRUE quote present characters. sep Single non null positive integer representing number empty lines printed data. safer_check Single logical value. Perform \"safer\" checks? TRUE, checkings performed main code running (see https://github.com/safer-r): 1) correct lib_path argument value 2) required functions related packages effectively present local R lybraries 3) R classical operators (like \"<-\") overwritten another package R scope. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings. lib_path Vector characters specifying absolute pathways directories containing required packages function, default directories. Useful R package installed default directories lack admin rights.  precisely, lib_path passed new argument .libPaths() new library paths unique(c(new, .Library.site, .Library)). Warning: .libPaths() restored initial paths, function execution. Ignored NULL (default) safer_check argument FALSE: pathways specified current .libPaths() used package calling. error_text Single character string used add information error messages returned function, notably function inside functions, practical debugging. Example: error_text = \" INSIDE <PACKAGE_1>::<FUNCTION_1> INSIDE <PACKAGE_2>::<FUNCTION_2>.\". NULL, converted \"\".","code":""},{"path":"/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"report — report","text":"Nothing.","code":""},{"path":[]},{"path":"/reference/report.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"report — report","text":"Gael Millot Yushi Han Haiding Wang","code":""},{"path":"/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"report — report","text":"","code":"report(data = \"THE FOLLOWING VECTOR IS:\\n\", output = \"results.txt\", path = \".\", overwrite = TRUE, sep = 1) report(data = 1:3, output = \"results.txt\", path = \".\", overwrite = FALSE, rownames_kept = FALSE, vector_cat = FALSE, noquote = FALSE, sep = 2) report(data = \"THE FOLLOWING MATRIX IS:\\n\", output = \"results.txt\", path = \".\", overwrite = FALSE, sep = 1) report(data = matrix(1:5), output = \"results.txt\", path = \".\", overwrite = FALSE, rownames_kept = FALSE, vector_cat = FALSE, noquote = FALSE, sep = 5) report(data = \"THE FOLLOWING DATA FRAME IS:\\n\", output = \"results.txt\", path = \".\", overwrite = FALSE, sep = 1) report(data = data.frame(A = 1:8, B = letters[1:8]), output = \"results.txt\", path = \".\", overwrite = FALSE, rownames_kept = FALSE, vector_cat = FALSE, noquote = FALSE, sep = 1)"}]
