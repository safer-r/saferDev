[{"path":"/articles/arg_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"arg_check","text":"","code":"vec1 <- -1:3 # vector of integers vec2 <- 1:3 / 3 # vector of proportions vec3 <- c(1, 2, 3) # vector of integers but stored as \"double\" vec4 <- \"pearson\" # vector of characters vec5 <- c(\"a\", \"b\",\"a\", \"b\") # vector of characters mat1 <- matrix(vec1) # matrix of integers mat2 <- matrix(c(1:3 / 3, NA)) # matrix of proportions with NA"},{"path":"/articles/arg_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"arg_check","text":"","code":"vec1 # vector of integers > [1] -1  0  1  2  3 vec2 # vector of proportions > [1] 0.3333333 0.6666667 1.0000000 vec3 # vector of integers but stored as \"double\" > [1] 1 2 3 vec4 # vector of characters > [1] \"pearson\" vec5 # vector of characters > [1] \"a\" \"b\" \"a\" \"b\" mat1 # matrix of integers >      [,1] > [1,]   -1 > [2,]    0 > [3,]    1 > [4,]    2 > [5,]    3 mat2 # matrix of proportions with NA >           [,1] > [1,] 0.3333333 > [2,] 0.6666667 > [3,] 1.0000000 > [4,]        NA"},{"path":"/articles/arg_check.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"arg_check","text":"","code":"# Check that vec1 is of class integer (means that it is also a vector) -> ok arg_check(data = vec1, class = \"integer\") > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 OBJECT\" >  > $object.name > [1] \"vec1\" # Check that vec1 is a numeric vector -> error because vec1 is a vector of integers arg_check(data = vec1, class = \"numeric\") > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec1 OBJECT MUST BE CLASS numeric\" >  > $object.name > [1] \"vec1\" # Check that vec1 is an integer vector of length 3 without negative values and without NA -> error because of length 5 and negative values inside vec1 arg_check(data = vec1, class = \"vector\", typeof = \"integer\", length = 3, neg.values = FALSE, na.contain = FALSE) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec1 OBJECT MUST BE LENGTH 3 AND THE vec1 OBJECT MUST BE MADE OF NON NEGATIVE NUMERIC VALUES\" >  > $object.name > [1] \"vec1\" # No result displayed because the output list is assigned into res (see below the print argument) res <- arg_check(data = vec1, class = \"integer\")  # with data = NULL, the function systematically report a checking problem arg_check(data = NULL, class = \"integer\") > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE NULL OBJECT MUST BE CLASS integer\" >  > $object.name > [1] \"NULL\""},{"path":"/articles/arg_check.html","id":"argument-class-typeof-mode-and-length-are-the-same-as-the-corresponding-r-function-except-class-which","dir":"Articles","previous_headings":"","what":"Argument class, typeof, mode and length are the same as the corresponding R function, except class which","title":"arg_check","text":"also “vector” remains “matrix” matrices “matrix” “array”","code":"# Example arg_check(     data = vec1,      class = \"vector\",      typeof = \"integer\",      mode = \"numeric\",      length = 5,  ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 OBJECT\" >  > $object.name > [1] \"vec1\" # Warning: the function does not check for inconsistencies between arguments. It just checks if everything is ok between arguments values and data arg_check(     data = vec1,      typeof = \"integer\",      mode = \"character\", # the mode \"character\" exists but is inconsistant with typeof \"integer\". However, this aspect is not signaled by the function ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec1 OBJECT MUST BE MODE character\" >  > $object.name > [1] \"vec1\"  # Error message due to wrong value in the class and length arguments arg_check(     data = vec1,      mode = \"integer\", # the mode \"integer\" does not exist in the mode() function of R ) > Error:  >  > ================ >  > ERROR IN arg_check() OF THE saferDev PACKAGE > mode ARGUMENT MUST BE ONE OF THESE VALUE: > \"logical\", \"numeric\", \"complex\", \"character\", \"list\", \"expression\", \"name\", \"symbol\", \"function\", \"environment\", \"S4\", \"call\" >  > ================"},{"path":"/articles/arg_check.html","id":"argument-prop","dir":"Articles","previous_headings":"","what":"Argument prop","title":"arg_check","text":"","code":"arg_check(     data = mat2,      prop = TRUE # Check for values between 0 and 1 only ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat2 OBJECT CONTAINS NA WHILE NOT AUTHORIZED\" >  > $object.name > [1] \"mat2\""},{"path":"/articles/arg_check.html","id":"argument-double-as-integer-allowed","dir":"Articles","previous_headings":"","what":"Argument double.as.integer.allowed","title":"arg_check","text":"","code":"arg_check(     data = vec3,      typeof = \"integer\",     double.as.integer.allowed = TRUE # with TRUE, integers stored as double are accepted ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec3 OBJECT\" >  > $object.name > [1] \"vec3\""},{"path":"/articles/arg_check.html","id":"argument-options","dir":"Articles","previous_headings":"","what":"Argument options","title":"arg_check","text":"","code":"arg_check(     data = vec4,      options = c(\"pearson\", \"spearman\", \"kendall\") ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec4 OBJECT\" >  > $object.name > [1] \"vec4\""},{"path":"/articles/arg_check.html","id":"argument-all-options-in-data","dir":"Articles","previous_headings":"","what":"Argument all.options.in.data","title":"arg_check","text":"","code":"# No error arg_check(     data = vec5,     options = c(\"a\", \"b\"),      all.options.in.data = TRUE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec5 OBJECT\" >  > $object.name > [1] \"vec5\" # No error arg_check(     data = vec5,     options = c(\"a\", \"b\", \"c\"),      all.options.in.data = FALSE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec5 OBJECT\" >  > $object.name > [1] \"vec5\" # Error arg_check(     data = vec5,     options = c(\"a\", \"b\", \"c\"),      all.options.in.data = TRUE ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec5 OBJECT MUST BE MADE OF ALL THESE OPTIONS: a b c\\nTHE MISSING ELEMENTS OF THE options ARGUMENT ARE: c\" >  > $object.name > [1] \"vec5\""},{"path":"/articles/arg_check.html","id":"argument-na-contain","dir":"Articles","previous_headings":"","what":"Argument na.contain","title":"arg_check","text":"","code":"arg_check(     data = mat2,      class = \"matrix\",      prop = TRUE,     na.contain = FALSE # with TRUE, integers stored as double are accepted ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat2 OBJECT CONTAINS NA WHILE NOT AUTHORIZED\" >  > $object.name > [1] \"mat2\""},{"path":"/articles/arg_check.html","id":"argument-neg-values","dir":"Articles","previous_headings":"","what":"Argument neg.values","title":"arg_check","text":"","code":"# Warning: only considered if set to FALSE, to check for non negative values when class is set to \"vector\", \"numeric\", \"matrix\", \"array\", \"data.frame\", \"table\", or typeof is set to \"double\", \"integer\", or mode is set to \"numeric\" arg_check(     data = mat1,      class = \"matrix\",     neg.values = FALSE # with TRUE, integers stored as double are accepted ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat1 OBJECT MUST BE MADE OF NON NEGATIVE NUMERIC VALUES\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-inf-values","dir":"Articles","previous_headings":"","what":"Argument inf.values","title":"arg_check","text":"","code":"# Warning: only considered if set to FALSE, to check for non infinite values when class is set to \"vector\", \"numeric\", \"matrix\", \"array\", \"data.frame\", \"table\", or typeof is set to \"double\", \"integer\", or mode is set to \"numeric\" arg_check(     data = mat1,      class = \"matrix\",     inf.values = FALSE ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat1 OBJECT MUST BE MADE OF NON INFINITE VALUES BUT IS NOT EVEN TYPE DOUBLE\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-print","dir":"Articles","previous_headings":"","what":"Argument print","title":"arg_check","text":"","code":"# No error message printed because print is FALSE res <- arg_check(     data = mat1,      class = \"data.frame\",     print = FALSE ) # Error message printed res <- arg_check(     data = mat1,      class = \"data.frame\",     print = TRUE ) >  >  > ================ >  > ERROR > THE mat1 OBJECT MUST BE CLASS data.frame >  > ================ # Even if print is TRUE, no error message printed because no error res <- arg_check(     data = mat1,      class = \"matrix\",     print = TRUE )"},{"path":"/articles/arg_check.html","id":"arguments-data-name-and-fun-name","dir":"Articles","previous_headings":"","what":"Arguments data.name and fun.name","title":"arg_check","text":"","code":"# Example tempo <- arg_check(     data = vec1,      class = \"integer\",      data.name = \"OBSERVATION_1\",      fun.name = \"FUNCTION_1\" ) tempo$text > [1] \"IN FUNCTION_1\\nNO PROBLEM DETECTED FOR THE OBSERVATION_1 OBJECT\" # In fact, these two arguments are interesting when check() is used inside functions fun1 <- function(arg1){     tempo <- arg_check(                 data = arg1,                  class = \"integer\",                  data.name = NULL, # if NULL, the name displayed is arg1                 fun.name = NULL # if NULL, no name displayed     )     if(tempo$problem == TRUE){         cat(paste0(\"\\n\\n================\\n\\n\", tempo$text, \"\\n\\n================\\n\\n\"))     } } fun1(arg1 = vec4) # error message because arg1 requires a vector of integers >  >  > ================ >  > ERROR > THE arg1 OBJECT MUST BE CLASS integer >  > ================ fun2 <- function(arg1){     tempo <- arg_check(                 data = arg1,                  class = \"integer\",                  data.name = NULL, # if NULL, the name displayed is arg1                 fun.name = \"FUNCTION_2\" # if NULL, no name displayed     )     if(tempo$problem == TRUE){         cat(paste0(\"\\n\\n================\\n\\n\", tempo$text, \"\\n\\n================\\n\\n\"))     } } fun2(arg1 = vec1) # error message with the name of the function, because arg1 requires a vector of integers"},{"path":"/articles/arg_check.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"arg_check","text":"","code":"arg_check(     data = mat1,      class = \"matrix\",      safer_check = TRUE ) # safer_check = TRUE, checkings are performed before main code running > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE mat1 OBJECT\" >  > $object.name > [1] \"mat1\"  arg_check(     data = vec4,      options = c(\"pearson\", \"spearman\", \"kendall\"),      safer_check = FALSE ) # safer_check = TRUE, checkings are performed before main code running > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec4 OBJECT\" >  > $object.name > [1] \"vec4\""},{"path":"/articles/arg_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"arg_check","text":"","code":"# See the examples of fun_info() to test different classes of objects arg_check(     data = vec1,      class = \"integer\",      typeof = NULL,      mode = NULL,      length = NULL,      prop = FALSE,      double.as.integer.allowed = FALSE,      options = NULL,      all.options.in.data = FALSE,      na.contain = FALSE,      neg.values = TRUE,      inf.values = TRUE,      print = FALSE,      data.name = NULL,      fun.name = NULL,     safer_check = TRUE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 OBJECT\" >  > $object.name > [1] \"vec1\""},{"path":"/articles/arg_test.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"arg_test","text":"","code":"f <- \"unique\" f2 <- \"plot\" argum <- c(\"x\", \"incomparables\") argum2 <- c(\"x\", \"y\") value <- list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)) value2 <- list(x = list(1:10, 12:13, NA, (1:10)^2),y = list(1:10, NA, NA)) error <- list(x = list(FALSE, FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE)) error2 <- list(x = list(FALSE, TRUE, TRUE, FALSE), y = list(FALSE, TRUE, TRUE))"},{"path":"/articles/arg_test.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"arg_test","text":"","code":"f # character string indicating the name of the function tested  > [1] \"unique\" argum # character vector of the arguments of fun > [1] \"x\"             \"incomparables\" value # List in which each compartment containing values of the corresponding argument in arg > $x > $x[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $x[[2]] > [1] 1 1 2 8 >  > $x[[3]] > [1] NA >  >  > $incomparable > [1]  TRUE FALSE    NA value2 # List in which each compartment containing values of the corresponding argument2 in arg > $x > $x[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $x[[2]] > [1] 12 13 >  > $x[[3]] > [1] NA >  > $x[[4]] >  [1]   1   4   9  16  25  36  49  64  81 100 >  >  > $y > $y[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $y[[2]] > [1] NA >  > $y[[3]] > [1] NA error # List indicating if an error is expected > $x > $x[[1]] > [1] FALSE >  > $x[[2]] > [1] FALSE >  > $x[[3]] > [1] TRUE >  >  > $incomparable > [1] FALSE FALSE  TRUE"},{"path":"/articles/arg_test.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"arg_test","text":"","code":"arg_test(     fun = f,      arg = argum,      val = value ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S > $fun > [1] \"unique\" >  > $ini > arg_test(fun = f, arg = argum, val = value) >  > $data >                               x incomparables kind problem message > arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE         > arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE         > arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE         > arg_test_4              1 1 2 8          TRUE   OK   FALSE         > arg_test_5              1 1 2 8         FALSE   OK   FALSE         > arg_test_6              1 1 2 8            NA   OK   FALSE         > arg_test_7                   NA          TRUE   OK   FALSE         > arg_test_8                   NA         FALSE   OK   FALSE         > arg_test_9                   NA            NA   OK   FALSE         >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pdftools_3.4.0    pillar_1.9.0      > [33] pkgconfig_2.0.3   pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       > [37] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [41] reticulate_1.36.1 rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        > [45] scales_1.3.0      systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      > [49] timechange_0.3.0  tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       > [53] xfun_0.43         yaml_2.3.8  arg_test(     fun = f2,      arg = argum2,      val = value2 ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 12 >  > LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-10-02 15:07:01.228808 > LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S > $fun > [1] \"plot\" >  > $ini > arg_test(fun = f2, arg = argum2, val = value2) >  > $data >                                       x                    y  kind problem > arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_05                       12 13                   NA ERROR    TRUE > arg_test_06                       12 13                   NA ERROR    TRUE > arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_08                          NA                   NA ERROR    TRUE > arg_test_09                          NA                   NA ERROR    TRUE > arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE > arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE >                                                                                      message > arg_test_01                                                                                  > arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_10                                                                                  > arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pdftools_3.4.0    pillar_1.9.0      > [33] pkgconfig_2.0.3   pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       > [37] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [41] reticulate_1.36.1 rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        > [45] scales_1.3.0      systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      > [49] timechange_0.3.0  tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       > [53] xfun_0.43         yaml_2.3.8  arg_test(     fun = f,      arg = argum,      val = value,     export = TRUE,     res.path = getwd() ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > test JOB END >  > TIME: 2024-10-02 15:07:01.574363 >  > TOTAL TIME LAPSE: 0S  arg_test(     fun = f2,      arg = argum2,      val = value2,     expect.error = error2,     plot.fun = TRUE,     res.path = \".\" ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 12 >  > LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-10-02 15:07:01.8998 > LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S >  > NO DISCREPANCY BETWEEN EXPECTED AND OBSERVED ERRORS > $fun > [1] \"plot\" >  > $ini > arg_test(fun = f2, arg = argum2, val = value2, expect.error = error2,  >     plot.fun = TRUE, res.path = \".\") >  > $data >                                       x                    y  kind problem > arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_05                       12 13                   NA ERROR    TRUE > arg_test_06                       12 13                   NA ERROR    TRUE > arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_08                          NA                   NA ERROR    TRUE > arg_test_09                          NA                   NA ERROR    TRUE > arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE > arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE >             expected.error > arg_test_01          FALSE > arg_test_02           TRUE > arg_test_03           TRUE > arg_test_04           TRUE > arg_test_05           TRUE > arg_test_06           TRUE > arg_test_07           TRUE > arg_test_08           TRUE > arg_test_09           TRUE > arg_test_10          FALSE > arg_test_11           TRUE > arg_test_12           TRUE >                                                                                      message > arg_test_01                                                                                  > arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_10                                                                                  > arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pdftools_3.4.0    pillar_1.9.0      > [33] pkgconfig_2.0.3   pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       > [37] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [41] reticulate_1.36.1 rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        > [45] scales_1.3.0      systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      > [49] timechange_0.3.0  tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       > [53] xfun_0.43         yaml_2.3.8"},{"path":"/articles/arg_test.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"arg_test","text":"","code":"arg_test(     fun = f,      arg = argum,      val= value,      expect.error = error,      parall = FALSE,      thread.nb = NULL,      print.count = 10,      plot.fun = FALSE,      export = FALSE,      res.path = \".\",      lib.path = NULL,     safer_check = TRUE ) # check the function \"mean\" in the environment one step above the local environment >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE $data RESULT) > $fun > [1] \"unique\" >  > $ini > arg_test(fun = f, arg = argum, val = value, expect.error = error,  >     parall = FALSE, thread.nb = NULL, print.count = 10, plot.fun = FALSE,  >     export = FALSE, res.path = \".\", lib.path = NULL, safer_check = TRUE) >  > $data >                               x incomparables kind problem expected.error > arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE          FALSE > arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE          FALSE > arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE           TRUE > arg_test_4              1 1 2 8          TRUE   OK   FALSE          FALSE > arg_test_5              1 1 2 8         FALSE   OK   FALSE          FALSE > arg_test_6              1 1 2 8            NA   OK   FALSE           TRUE > arg_test_7                   NA          TRUE   OK   FALSE           TRUE > arg_test_8                   NA         FALSE   OK   FALSE           TRUE > arg_test_9                   NA            NA   OK   FALSE           TRUE >            message > arg_test_1         > arg_test_2         > arg_test_3         > arg_test_4         > arg_test_5         > arg_test_6         > arg_test_7         > arg_test_8         > arg_test_9         >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pdftools_3.4.0    pillar_1.9.0      > [33] pkgconfig_2.0.3   pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       > [37] qpdf_1.3.3        R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       > [41] reticulate_1.36.1 rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        > [45] scales_1.3.0      systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      > [49] timechange_0.3.0  tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       > [53] xfun_0.43         yaml_2.3.8"},{"path":"/articles/colons_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"colons_check","text":"","code":"fun1 <- function(){     base::sum(1, 3)   }  fun2 <- function(){     sum(1, 3)   }"},{"path":"/articles/colons_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"colons_check","text":"","code":"fun1 > function(){ >     base::sum(1, 3) >   } fun2 > function(){ >     sum(1, 3) >   }"},{"path":"/articles/colons_check.html","id":"argument-x","dir":"Articles","previous_headings":"","what":"Argument x","title":"colons_check","text":"","code":"colons_check(x = fun1) # a function name, written without quotes and brackets >  >  > EVERYTHING SEEMS CLEAN colons_check(x = fun2) # a function name, written without quotes and brackets >  >  > ================ >  > INSIDE fun2(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: >  > LINE  FUN     STRING_BEFORE > 2 sum      >  > ================"},{"path":"/articles/colons_check.html","id":"argument-safer_chek","dir":"Articles","previous_headings":"","what":"Argument safer_chek","title":"colons_check","text":"","code":"colons_check(     x = fun1,      afer_check = FALSE ) # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? > Error in colons_check(x = fun1, afer_check = FALSE): unused argument (afer_check = FALSE)"},{"path":"/articles/colons_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"colons_check","text":"","code":"colons_check(     x = fun1, # a function name, written without quotes and brackets     safer_check = TRUE # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? ) >  >  > EVERYTHING SEEMS CLEAN"},{"path":"/articles/colons_check.html","id":"sophisticated-example","dir":"Articles","previous_headings":"","what":"Sophisticated example","title":"colons_check","text":"","code":"source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") colons_check(     x = test, # a function name, written without quotes and brackets     safer_check = TRUE # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? ) >  >  > ================ >  > INSIDE test(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: >  > LINE  FUN     STRING_BEFORE > 3 gregexpr        matches <-  > 6 regmatches      matched_strings <-  > 8 sum      > 15    sub     result <-  > 16    range        > 19    return       >  > INSIDE test(), SOME :: OR ::: ARE MISSING AT OTHER FUNCTION POSITIONS: >  > LINE  FUN     STRING_BEFORE > 13    roc1        base::length( > 17    roc4        tempo.cat <- base::paste0(\"IAGE\\nLENGTHS OF roc00() (\", base::ks.test( >  > ================"},{"path":"/articles/env_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"env_check","text":"","code":"pos <- 2 name <- \"mean\""},{"path":"/articles/env_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"env_check","text":"","code":"pos # integer indicating the position of the environment checked > [1] 2 name # character vector of the name of the function that will be checked > [1] \"mean\""},{"path":"/articles/env_check.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"env_check","text":"","code":"env_check(pos = 1) > NULL env_check(pos = 2) > NULL"},{"path":"/articles/env_check.html","id":"argument-pos","dir":"Articles","previous_headings":"","what":"Argument pos","title":"env_check","text":"","code":"env_check(pos = 1) # check the object \"NULL\" in the environment one step above the env_check() environment > NULL"},{"path":"/articles/env_check.html","id":"argument-name","dir":"Articles","previous_headings":"","what":"Argument name","title":"env_check","text":"","code":"env_check(name = \"mean\") # check if the object \"mean\" is in the environment one step above the env_check() environment, and if yes, returns if the same name exists in above environments > NULL"},{"path":"/articles/env_check.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"env_check","text":"","code":"env_check(safer_check = TRUE) # with TRUE, checkings are performed before main code running > NULL"},{"path":"/articles/env_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"env_check","text":"","code":"mean <- 2 env_check(     pos = 1,     name = \"mean\",     safer_check = TRUE ) # check if the object \"mean\" is in the environment one step above the env_check() environment, and if yes, returns if the same name exists in above environments > [1] \"SOME VARIABLES OF mean ARE ALSO PRESENT IN :\\npackage:base: mean\\n\""},{"path":[]},{"path":[]},{"path":"/articles/get_message.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"get_message","text":"","code":"char1 <- \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\" # single character string char2 <- \"message('ahah')\" # single character string"},{"path":"/articles/get_message.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"get_message","text":"","code":"char1 # single character string > [1] \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\" char2 # single character string > [1] \"message('ahah')\""},{"path":"/articles/get_message.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"get_message","text":"","code":"get_message(data = char1) > NULL get_message(data = char2) > ahah > NULL"},{"path":"/articles/get_message.html","id":"argument-kind","dir":"Articles","previous_headings":"","what":"Argument kind","title":"get_message","text":"","code":"get_message(data = char1, kind = \"warning\") # to get warning messages of the wilcox test > [1] \"WARNING MESSAGE REPORTED:\\nsimpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/get_message.html","id":"argument-header","dir":"Articles","previous_headings":"","what":"Argument header","title":"get_message","text":"","code":"get_message(data = char1, header = FALSE) # to get error messages (by default) without header > NULL"},{"path":"/articles/get_message.html","id":"argument-print-no","dir":"Articles","previous_headings":"","what":"Argument print.no","title":"get_message","text":"","code":"get_message(data = char1, print.no = TRUE) # print a message saying that no message reported > [1] \"NO ERROR MESSAGE REPORTED\""},{"path":"/articles/get_message.html","id":"argument-text","dir":"Articles","previous_headings":"","what":"Argument text","title":"get_message","text":"","code":"get_message(     data = char2,      print.no = TRUE,      text = \"IN A\" ) # print a message even if the argument print.no is TRUE > [1] \"NO ERROR MESSAGE REPORTED IN A\""},{"path":"/articles/get_message.html","id":"argument-kind-header-print-no-text","dir":"Articles","previous_headings":"","what":"Argument kind, header, print.no, text","title":"get_message","text":"","code":"get_message(     data = char1,      kind = \"warning\",      header = FALSE,      print.no = TRUE,      text = \"IN A\") # print the warning message in text > [1] \"simpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/get_message.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"get_message","text":"","code":"get_message(data = char2, safer_check = TRUE) # with TRUE, checkings are performed before main code running > ahah > NULL"},{"path":"/articles/get_message.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"get_message","text":"","code":"get_message(     data = char1,      kind = \"warning\",      header = FALSE,     print.no = TRUE,      text = \"IN A\",     env = NULL,     safer_check = TRUE ) # print the warning message in text in the environment R_GlobalEnv > [1] \"simpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/is_function_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_function_here","text":"","code":"f <- \"ggplot2::geom_point\" path <- \"blablabla\""},{"path":"/articles/is_function_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_function_here","text":"","code":"f # Character vector of function name > [1] \"ggplot2::geom_point\" path # character vector specifying the absolute pathways of the directories, this lib.path will return an error > [1] \"blablabla\""},{"path":"/articles/is_function_here.html","id":"argument-fun","dir":"Articles","previous_headings":"","what":"Argument fun","title":"is_function_here","text":"","code":"is_function_here(fun = f) # check if the package serpentine is in the computer"},{"path":"/articles/is_function_here.html","id":"argument-lib-path","dir":"Articles","previous_headings":"","what":"Argument lib.path","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     lib.path = \".\" ) # check if the function is present in the package > Error:  >  > ================ >  > ERROR IN is_function_here() OF THE saferDev PACKAGE > REQUIRED PACKAGE: > ggplot2MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_function_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_function_here","text":"","code":"is_function_here(safer_check = TRUE) # with TRUE, checkings are performed before main code running > Error:  >  > ================ >  > ERROR IN is_function_here() OF THE saferDev PACKAGE > FOLLOWING ARGUMENT HAS NO DEFAULT VALUE AND REQUIRE ONE: > fun >  > ================"},{"path":"/articles/is_function_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     lib.path = path,     safer_check = TRUE ) # check if the function is present in the package, returns an error because the path doesn't exist > Error:  >  > ================ >  > ERROR IN is_function_here() OF THE saferDev PACKAGE > DIRECTORY PATH INDICATED IN THE lib.path ARGUMENT DOES NOT EXISTS: > blablabla >  > ================"},{"path":"/articles/is_package_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_package_here","text":"","code":"req.pkg <- \"ggplot2\" path <- \"blablabla\""},{"path":"/articles/is_package_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_package_here","text":"","code":"req.pkg # Character vector of package names > [1] \"ggplot2\" path # character vector specifying the absolute pathways of the directories, this lib.path will return an error > [1] \"blablabla\""},{"path":"/articles/is_package_here.html","id":"argument-req-package","dir":"Articles","previous_headings":"","what":"Argument req.package","title":"is_package_here","text":"","code":"is_package_here(req.package = req.pkg) # check if the package serpentine is in the computer"},{"path":"/articles/is_package_here.html","id":"argument-lib-path","dir":"Articles","previous_headings":"","what":"Argument lib.path","title":"is_package_here","text":"","code":"is_package_here(     req.package = req.pkg,     lib.path = \".\" ) # check if the package is in the computer > Error:  >  > ================ >  > ERROR IN is_package_here() OF THE saferDev PACKAGE > REQUIRED PACKAGE: > ggplot2 >  > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_package_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_package_here","text":"","code":"is_package_here(     req.package = req.pkg,     safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running  > Error:  >  > ================ >  > ERROR IN is_package_here() OF THE saferDev PACKAGE > REQUIRED PACKAGE: > ggplot2 >  > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_package_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_package_here","text":"```","code":"is_package_here(     req.package = req.pkg,     lib.path = path,     safer_check = TRUE ) # check if the package is in the computer > Error:  >  > ================ >  > ERROR IN is_package_here() OF THE saferDev PACKAGE > DIRECTORY PATH INDICATED IN THE lib.path ARGUMENT DOES NOT EXISTS: > blablabla >  > ================"},{"path":"/articles/is_python_package_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_python_package_here","text":"","code":"req.pkg <- \"serpentine\" path <- \"blablabla\""},{"path":"/articles/is_python_package_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_python_package_here","text":"","code":"req.pkg # Character vector of package names to import > [1] \"serpentine\" path # character vector specifying the absolute pathways of the directories, this lib.path will return an error > [1] \"blablabla\""},{"path":"/articles/is_python_package_here.html","id":"argument-req-package","dir":"Articles","previous_headings":"","what":"Argument req.package","title":"is_python_package_here","text":"","code":"is_python_package_here(req.package = req.pkg) # check if the package serpentine is in the computer > Error in required && !file_test(\"-f\", python): 'length = 14' in coercion to 'logical(1)'"},{"path":"/articles/is_python_package_here.html","id":"argument-lib-path","dir":"Articles","previous_headings":"","what":"Argument lib.path","title":"is_python_package_here","text":"","code":"is_python_package_here(     req.package = req.pkg,     lib.path = path ) # check if the package is in the computer > Error:  >  > ================ >  > ERROR IN is_python_package_here() OF THE saferDev PACKAGE > DIRECTORY PATH INDICATED IN THE lib.path ARGUMENT DOES NOT EXISTS: > blablabla >  > ================"},{"path":"/articles/is_python_package_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_python_package_here","text":"","code":"is_python_package_here(     req.package = req.pkg,     safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running  > Error in required && !file_test(\"-f\", python): 'length = 14' in coercion to 'logical(1)'"},{"path":"/articles/is_python_package_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_python_package_here","text":"","code":"is_python_package_here(     req.package = \"serpentine\",      python.exec.path = \".\",      python.lib.path = \".\",     lib.path = \".\",     safer_check =TRUE ) # check if the python package serpentine is present in the computer, returns an error if the package is not in the computer > Error:  >  > ================ >  > ERROR IN is_python_package_here() OF THE saferDev PACKAGE > REQUIRED PACKAGES: > reticulate > reticulate > reticulate > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/report.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"report","text":"","code":"string1 <- \"THIS IS A LOG\" vec1 <- 1:6 # vector of integers vec2 <- letters[1:9] # vector of characters mat1 <- matrix(vec1, nrow = 2, ncol = 3, byrow = TRUE) # matrix of integer having 2 rows and 3 columns dimnames(mat1) <- list(c(\"Row 1\",\"Row 2\"), c(\"C1\", \"C2\", \"C3\")) mat2 <- mat1 mode(mat2) <- \"character\" t1 <- table(mat1) # 1D table vec3 <- as.vector(t1) names(vec3) <- letters[1:6] # vector with names t2 <- table(vec2, vec2) # 2D table l1 <- list(vec1, vec2) # list"},{"path":"/articles/report.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"report","text":"","code":"string1 # string > [1] \"THIS IS A LOG\" vec1 # vector of integers > [1] 1 2 3 4 5 6 vec2 # vector of characters > [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" vec3 # vector of integers with names. No more [1] in front of values > a b c d e f  > 1 1 1 1 1 1 mat1 # matrix of integers with the row names >       C1 C2 C3 > Row 1  1  2  3 > Row 2  4  5  6 mat2 # matrix of characters with the row names >       C1  C2  C3  > Row 1 \"1\" \"2\" \"3\" > Row 2 \"4\" \"5\" \"6\" t1 # 1D table > mat1 > 1 2 3 4 5 6  > 1 1 1 1 1 1 t2 # 2D table >     vec2 > vec2 a b c d e f g h i >    a 1 0 0 0 0 0 0 0 0 >    b 0 1 0 0 0 0 0 0 0 >    c 0 0 1 0 0 0 0 0 0 >    d 0 0 0 1 0 0 0 0 0 >    e 0 0 0 0 1 0 0 0 0 >    f 0 0 0 0 0 1 0 0 0 >    g 0 0 0 0 0 0 1 0 0 >    h 0 0 0 0 0 0 0 1 0 >    i 0 0 0 0 0 0 0 0 1 l1 # list > [[1]] > [1] 1 2 3 4 5 6 >  > [[2]] > [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\""},{"path":"/articles/report.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"report","text":"","code":"report(data = string1, path = \".\") # print the input into the output file in the path report(data = vec1, path = \".\") # idem report(data = vec2, path = \".\") # idem report(data = vec3, path = \".\") # idem report(data = mat1, path = \".\") # idem report(data = mat2, path = \".\") # idem. We cannot see that it is mode character (see noquote below) report(data = t1, path = \".\") # idem report(data = t2, path = \".\") # idem report(data = l1, path = \".\") # idem"},{"path":"/articles/report.html","id":"argument-output","dir":"Articles","previous_headings":"","what":"Argument output","title":"report","text":"","code":"report(data = vec1, output = \"test.txt\", path = \".\") # print the vector vec1 into the output file named \"test.txt\" in the path"},{"path":"/articles/report.html","id":"argument-overwrite","dir":"Articles","previous_headings":"","what":"Argument overwrite","title":"report","text":"","code":"report(data = vec2, overwrite = TRUE, output = \"test.txt\", path = \".\") # if the file exists, the output file content will be erased before printing"},{"path":"/articles/report.html","id":"argument-rownames-kept","dir":"Articles","previous_headings":"","what":"Argument rownames.kept","title":"report","text":"","code":"report(   data = mat1,    rownames.kept = TRUE,    path = \".\" ) # keep the row names when print the matrix mat1 in the file  report(   data = mat1,    rownames.kept = FALSE,    path = \".\" ) # remove the row names  report(   data = t1,    rownames.kept = TRUE,    path = \".\" ) # keep the row names when print the table t1 in the file  report(   data = t1,    rownames.kept = FALSE,    path = \".\" ) # remove the row names  report(   data = t2,    rownames.kept = TRUE,    path = \".\" ) # keep the row names when print the table t2 in the file  report(   data = t2,    rownames.kept = FALSE,    path = \".\" ) # remove the row names"},{"path":"/articles/report.html","id":"argument-vector-cat","dir":"Articles","previous_headings":"","what":"Argument vector.cat","title":"report","text":"","code":"report(   data = vec3,    vector.cat = TRUE,    path = \".\" ) # print a vector of length > 1 using cat() instead of capture.output() : names are lost."},{"path":"/articles/report.html","id":"argument-noquote","dir":"Articles","previous_headings":"","what":"Argument noquote","title":"report","text":"","code":"report(   data = mat2,    noquote = FALSE,    path = \".\" ) # quote are kept for the characters."},{"path":"/articles/report.html","id":"argument-sep","dir":"Articles","previous_headings":"","what":"Argument sep","title":"report","text":"","code":"report(   data = vec1,    sep = 4,    path = \".\" ) # 4 lines after printed data"},{"path":"/articles/report.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"report","text":"","code":"report(     data = mat2,      output = \"test2.txt\",      path = \".\",      overwrite = TRUE,      rownames.kept = TRUE,      vector.cat = TRUE,      noquote = FALSE,      sep = 4,     safer_check = TRUE ) # matrix mat1 will be print in the file \"text2.txt\" in the path, with quote and row names being kept, and 4 lines after printing data"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haiding Wang. Author, contributor. Gael Millot. Maintainer, author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang H, Millot G (2024). saferDev: R function pipeline development. R package version 1.0.","code":"@Manual{,   title = {saferDev: R function and pipeline development},   author = {Haiding Wang and Gael Millot},   year = {2024},   note = {R package version 1.0}, }"},{"path":[]},{"path":"/index.html","id":"table-of-content","dir":"","previous_headings":"","what":"Table of content","title":"R function and pipeline development","text":"Description Content Versions Installation Licence Citations Credits Acknowledgements","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"R function and pipeline development","text":"Set R functions development R functions, written according safer project specifications.","code":""},{"path":"/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"R function and pipeline development","text":"Read vignette(\"saferDev\") details.","code":""},{"path":"/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"R function and pipeline development","text":"different saferDev releases tagged .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R function and pipeline development","text":"saferDev can currently installed GitHub: Older versions can installed like :","code":"install.packages(\"remotes\") remotes::install_github(\"https://github.com/safer-r/saferDev\") # or open R as admin and remotes::install_github(\"https://github.com/safer-r/saferDev\", lib = \"C:/Program Files/R/R-4.3.1/library\") v <- \"v1.0\" # desired tag version remotes::install_github(paste0(\"https://github.com/safer-r/saferDev/tree/\", v))"},{"path":"/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"R function and pipeline development","text":"package can redistributed /modified terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. Distributed hope useful, without warranty; without even implied warranty merchandability fitness particular purpose. See GNU General Public License details https://www.gnu.org/licenses Licence.txt attached file.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"R function and pipeline development","text":"using functions saferDev, please cite: Wang H, Han Y, Serizay J, Millot GA (2023). R saferDev package. https://github.com/safer-r/saferDev/.","code":""},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"R function and pipeline development","text":"Haiding Wang, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Yushi Han, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Jacques Serizai, Spatial Regulation Genomes team, Institut Pasteur, Paris, France Gael . Millot, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"R function and pipeline development","text":"developers & maintainers mentioned softwares packages, including: R Git Github","code":""},{"path":"/reference/arg_check.html","id":null,"dir":"Reference","previous_headings":"","what":"arg_check — arg_check","title":"arg_check — arg_check","text":"Check expected values argument functions: class, type, mode, length, restricted values panel, kind numeric values addition distinction 'integer' 'double' (proportion ? Inf values authorized? negative values authorized? Integers type 'double'?)","code":""},{"path":"/reference/arg_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arg_check — arg_check","text":"","code":"arg_check(   data,   class = NULL,   typeof = NULL,   mode = NULL,   length = NULL,   prop = FALSE,   double.as.integer.allowed = FALSE,   options = NULL,   all.options.in.data = FALSE,   na.contain = FALSE,   neg.values = TRUE,   inf.values = TRUE,   print = FALSE,   data.name = NULL,   fun.name = NULL,   safer_check = TRUE )"},{"path":"/reference/arg_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arg_check — arg_check","text":"data Object test. class Single character string. Either one class() result \"vector\" \"ggplot2\" (.e., objects class c(\"gg\", \"ggplot\")) NULL. See warning section . typeof Single character string. Either one typeof() result NULL. mode Single character string. Either one mode() result (non-vector object) NULL. length Single numeric value indicating length object. considered NULL. prop Single logical value. numeric values 0 1 (proportion)? TRUE, can used alone, without considering class, etc. double..integer.allowed Single logical value. TRUE, error reported cheking message argument set typeof == \"integer\" class == \"integer\", reality typeof == \"double\" class == \"numeric\" numbers strictly zero modulo (remainder division). means <- 1, typeof() -> \"double\" considered integer double..integer.allowed = TRUE. WARNING: data mod 1 == 0L isTRUE(.equal(data mod 1, 0)) used argument checks integers stored double (check decimal numbers approximate integers). options Vector character strings integers indicating possible option values data argument, NULL. Numbers type \"double\" accepted 0 modulo. .options..data Single logical value. TRUE, options must present least data argument, nothing else. FALSE, options must present data argument, nothing else. Ignored options NULL. na.contain Single logical value. Can data argument contain NA? neg.values Single logical value. negative numeric values authorized? Warning: default setting TRUE, meaning , case, check performed presence negative values. neg.values argument activated set FALSE. addition, (1) neg.values = FALSE can used class, typeof mode arguments NULL, otherwise return error message, (2) presence negative values checked neg.values = FALSE tested object factor following checking message returned \"OBJECT MUST MADE NON NEGATIVE VALUES FACTOR\". inf.values Single logical value. infinite numeric values authorized (Inf -Inf)? Identical remarks neg.values argument. print Single logical value. Print message $problem TRUE? Warning: set default FALSE, facilitates control checking message output using arg_check() inside functions. See example section. data.name Single character string indicating name object test. NULL, use assigned data argument returned message. fun.name Single character string indicating name function checked (.e., arg_check() used check arguments function). non-null, value fun.name added message returned arg_check(). safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/arg_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arg_check — arg_check","text":"list containing: - §problem: logical. problem detected? - §text: message indicating details problem, absence problem. - §object.name: value data.name argument (.e., name checked object provided, NULL otherwise).","code":""},{"path":"/reference/arg_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arg_check — arg_check","text":"- options == NULL, least class type mode length argument must non-null. - options non-null, class, type mode must NULL, length can NULL specified. - function tests written arguments, even written incoherent. instance, arg_check(data = factor(1), class = \"factor\", mode = \"character\") return problem, whatever object tested data argument, object can class \"factor\" mode \"character\" (factors class \"factor\" mode \"numeric\"). note, length object class \"environment\" always 0. - tested object NULL, function always return checking problem. - Argument \"class\" value \"vector\" means object tested class(data) returning \"numeric\", \"integer\", \"character\", \"logical\", \"complex\" \"expression\". Please, use another value class (e.g., class = \"call\" class = \"list\") types class objects - Since R >= 4.0.0, class(matrix()) returns \"matrix\" \"array\", \"matrix\" alone . However, use argument class = \"matrix\" check matrix object (class \"matrix\" \"array\" R >= 4.0.0) use argument class = \"array\" check array object (class \"array\" R >= 4.0.0).","code":""},{"path":[]},{"path":"/reference/arg_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arg_check — arg_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/arg_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arg_check — arg_check","text":"","code":"test <- matrix(1:3) # arg_check(data = test, print = TRUE, class = \"vector\", mode = \"numeric\")  # commented because this example returns an error"},{"path":"/reference/arg_test.html","id":null,"dir":"Reference","previous_headings":"","what":"arg_test — arg_test","title":"arg_test — arg_test","text":"Test combinations argument values function.","code":""},{"path":"/reference/arg_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arg_test — arg_test","text":"","code":"arg_test(   fun,   arg,   val,   expect.error = NULL,   parall = FALSE,   thread.nb = NULL,   print.count = 10,   plot.fun = FALSE,   export = FALSE,   res.path = NULL,   lib.path = NULL,   safer_check = TRUE )"},{"path":"/reference/arg_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arg_test — arg_test","text":"fun Single character string indicating name function tested (without brackets). arg Vector character strings arguments fun. least arguments default values must present vector. val List number compartments equal length arg, compartment containing values corresponding argument arg. different value must list vector. instance, argument 3 arg logical argument (values accepted TRUE, FALSE, NA). Thus, compartment 3 val can either list(TRUE, FALSE, NA), c(TRUE, FALSE, NA). NULL value alone must written list(NULL). expect.error List exactly structure val argument, containing FALSE TRUE, depending whether error expected (TRUE) (FALSE) corresponding value val. message returned depending discrepancies expected observed errors. See examples . BEWARE: always possible write expected errors combination argument values. Ignored NULL. parall Single logical value. Force parallelization ? thread.nb Single numeric integer indicating number threads use ever parallelization required. NULL, available threads used. Ignored parall FALSE. print.count Single interger value. Print working progress message every print.count loops. BEWARE: can increase substentially time complete process using small integer value, like 10 instance. Use Inf loop message desired. plot.fun Single logical value. Plot plotting function tested test? Ignored tested function graphic function. export Single logical value. Export results .RData file .tsv file? FALSE, return list console (see ). BEWARE: automatically set TRUE parall TRUE. means using parallelization, results systematically exported, returned console. res.path Single character string indicating absolute pathway folder txt results pdfs, containing plots, saved. Several txt pdf, one per thread, parallelization. Ignored export FALSE. Must specified parall TRUE export TRUE. lib.path Vector characters specifying absolute pathways directories containing required packages default directories. Ignored NULL. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/arg_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arg_test — arg_test","text":"One several pdf plotting function tested plot.fun argument TRUE. , export FALSE list containing: - $fun: tested function. - $ini: initial input values. - $data: data frame combination tested, containing following columns: # different values tested, named arguments      - $kind: vector character strings indicating kind test result: either \"ERROR\", \"WARNING\", \"OK\".      - $problem: logical vector indicating error . - $expected.error: optional logical vector indicating expected error specified expect.error argument.      - $message: either NULL $kind always \"OK\", messages. - $sys.info: system packages info. export TRUE: - list object .RData file. - also $data data frame .tsv file. - expect.error non NULL discrepancy, $data data frame .tsv file containing rows discrepancies expected observed errors.","code":""},{"path":"/reference/arg_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arg_test — arg_test","text":"Limited 43 arguments least 2 values . total number arguments tested can additional arguments single value. limit due nested \"\" loops (https://stat.ethz.ch/pipermail/r-help/2008-March/157341.html), limitation away number tests performed 2^43.","code":""},{"path":[]},{"path":"/reference/arg_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arg_test — arg_test","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/arg_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arg_test — arg_test","text":"","code":"arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA))) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> $fun #> [1] \"unique\" #>  #> $ini #> arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(x = list(1:10,  #>     c(1, 1, 2, 8), NA), incomparable = c(TRUE, FALSE, NA))) #>  #> $data #>                               x incomparables kind problem message #> arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE         #> arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE         #> arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE         #> arg_test_4              1 1 2 8          TRUE   OK   FALSE         #> arg_test_5              1 1 2 8         FALSE   OK   FALSE         #> arg_test_6              1 1 2 8            NA   OK   FALSE         #> arg_test_7                   NA          TRUE   OK   FALSE         #> arg_test_8                   NA         FALSE   OK   FALSE         #> arg_test_9                   NA            NA   OK   FALSE         #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pdftools_3.4.0     pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      #> [41] png_0.1-8          purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [45] remotes_2.5.0.9000 reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     #> [49] rstudioapi_0.16.0  sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  #> [53] testthat_3.2.1.1   textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   #> [57] tools_4.3.3        utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      #> [61] withr_3.0.0        xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA),  incomparable = c(TRUE, FALSE, NA)), expect.error = list(x = list(FALSE, FALSE, TRUE),  incomparable = c(FALSE, FALSE, TRUE))) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE $data RESULT) #>  #> $fun #> [1] \"unique\" #>  #> $ini #> arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(x = list(1:10,  #>     c(1, 1, 2, 8), NA), incomparable = c(TRUE, FALSE, NA)), expect.error = list(x = list(FALSE,  #>     FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE))) #>  #> $data #>                               x incomparables kind problem expected.error #> arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE          FALSE #> arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE          FALSE #> arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE           TRUE #> arg_test_4              1 1 2 8          TRUE   OK   FALSE          FALSE #> arg_test_5              1 1 2 8         FALSE   OK   FALSE          FALSE #> arg_test_6              1 1 2 8            NA   OK   FALSE           TRUE #> arg_test_7                   NA          TRUE   OK   FALSE           TRUE #> arg_test_8                   NA         FALSE   OK   FALSE           TRUE #> arg_test_9                   NA            NA   OK   FALSE           TRUE #>            message #> arg_test_1         #> arg_test_2         #> arg_test_3         #> arg_test_4         #> arg_test_5         #> arg_test_6         #> arg_test_7         #> arg_test_8         #> arg_test_9         #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pdftools_3.4.0     pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      #> [41] png_0.1-8          purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [45] remotes_2.5.0.9000 reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     #> [49] rstudioapi_0.16.0  sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  #> [53] testthat_3.2.1.1   textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   #> [57] tools_4.3.3        utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      #> [61] withr_3.0.0        xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)),  expect.error = list(x = list(FALSE, FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE)),  export = TRUE, res.path = getwd()) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE discrepancy_table_from_arg_test_1-9.tsv FILE) #>  #> test JOB END #>  #> TIME: 2024-10-02 15:06:47.04829 #>  #> TOTAL TIME LAPSE: 0S #>  #>   # Return an error if you run this example # arg_test(fun = \"round\", arg = c(\"data\", \"dec.nb\", \"after.lead.zero\"), val = list(L1 = list(c(1, 1.0002256, 1.23568), \"a\", NA), L2 = list(2, c(1,3), NA), L3 = c(TRUE, FALSE, NA)))  arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10, 12:13, NA, (1:10)^2),  y = list(1:10, NA, NA)),  expect.error = list(x = list(FALSE, TRUE, TRUE, FALSE),  y = list(FALSE, TRUE, TRUE)), parall = FALSE, thread.nb = NULL, plot.fun = TRUE,  res.path = \".\", lib.path = NULL) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 12 #>  #> LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-10-02 15:06:47.266797 #> LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S #>  #> NO DISCREPANCY BETWEEN EXPECTED AND OBSERVED ERRORS #>  #> $fun #> [1] \"plot\" #>  #> $ini #> arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10,  #>     12:13, NA, (1:10)^2), y = list(1:10, NA, NA)), expect.error = list(x = list(FALSE,  #>     TRUE, TRUE, FALSE), y = list(FALSE, TRUE, TRUE)), parall = FALSE,  #>     thread.nb = NULL, plot.fun = TRUE, res.path = \".\", lib.path = NULL) #>  #> $data #>                                       x                    y  kind problem #> arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_05                       12 13                   NA ERROR    TRUE #> arg_test_06                       12 13                   NA ERROR    TRUE #> arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_08                          NA                   NA ERROR    TRUE #> arg_test_09                          NA                   NA ERROR    TRUE #> arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #> arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #>             expected.error #> arg_test_01          FALSE #> arg_test_02           TRUE #> arg_test_03           TRUE #> arg_test_04           TRUE #> arg_test_05           TRUE #> arg_test_06           TRUE #> arg_test_07           TRUE #> arg_test_08           TRUE #> arg_test_09           TRUE #> arg_test_10          FALSE #> arg_test_11           TRUE #> arg_test_12           TRUE #>                                                                                      message #> arg_test_01                                                                                  #> arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_10                                                                                  #> arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pdftools_3.4.0     pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      #> [41] png_0.1-8          purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [45] remotes_2.5.0.9000 reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     #> [49] rstudioapi_0.16.0  sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  #> [53] testthat_3.2.1.1   textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   #> [57] tools_4.3.3        utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      #> [61] withr_3.0.0        xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10, 12:13, NA,  (1:10)^2), y = list(1:10, NA, NA)), parall = FALSE, thread.nb = 4,  plot.fun = TRUE, res.path = \".\",  lib.path = NULL) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 12 #>  #> LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-10-02 15:06:47.500417 #> LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S #>  #> $fun #> [1] \"plot\" #>  #> $ini #> arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10,  #>     12:13, NA, (1:10)^2), y = list(1:10, NA, NA)), parall = FALSE,  #>     thread.nb = 4, plot.fun = TRUE, res.path = \".\", lib.path = NULL) #>  #> $data #>                                       x                    y  kind problem #> arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_05                       12 13                   NA ERROR    TRUE #> arg_test_06                       12 13                   NA ERROR    TRUE #> arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_08                          NA                   NA ERROR    TRUE #> arg_test_09                          NA                   NA ERROR    TRUE #> arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #> arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #>                                                                                      message #> arg_test_01                                                                                  #> arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_10                                                                                  #> arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pdftools_3.4.0     pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      #> [41] png_0.1-8          purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         #> [45] remotes_2.5.0.9000 reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     #> [49] rstudioapi_0.16.0  sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  #> [53] testthat_3.2.1.1   textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   #> [57] tools_4.3.3        utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      #> [61] withr_3.0.0        xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   # set.seed(1) ;  # obs1 <- data.frame(Time = c(rnorm(10), rnorm(10) + 2), Group1 = rep(c(\"G\", \"H\"), each = 10),  # stringsAsFactors = TRUE) ; arg_test(fun = \"ggbox\", arg = c(\"data1\", \"y\", \"categ\"),  # val = list(L1 = list(L1 = obs1), L2 = list(L1 = \"Time\"), L3 = list(L1 = \"Group1\")))  # set.seed(1) ;  # obs1 <- data.frame(Time = c(rnorm(10), rnorm(10) + 2), Group1 = rep(c(\"G\", \"H\"), each = 10),  # stringsAsFactors = TRUE) ;  # arg_test(fun = \"ggbox\", arg = c(\"data1\", \"y\", \"categ\"), val = list(L1 = list(obs1),  # L2 = \"Time\", L3 = \"Group1\"), parall = FALSE, thread.nb = NULL, plot.fun = TRUE,  # res.path = \"C:\\Users\\yhan\\Desktop\\\", lib.path = \"C:\\Program Files\\R\\R-4.3.1\\library\\\")  # library(ggplot2) ; arg_test(fun = \"geom_histogram\", arg = c(\"data\", \"mapping\"),  # val = list(x = list(data.frame(X = \"a\", stringsAsFactors = TRUE)),  # y = list(ggplot2::aes(x = X))), parall = FALSE, thread.nb = NULL,  # plot.fun = TRUE, res.path = \"C:\\Users\\yhan\\Desktop\\\",  # lib.path = \"C:\\Program Files\\R\\R-4.3.1\\library\\\")  # BEWARE: ggplot2::geom_histogram does not work"},{"path":"/reference/colons_check.html","id":null,"dir":"Reference","previous_headings":"","what":"colons_check — colons_check","title":"colons_check — colons_check","text":"Verify functions used inside function referenced package attribution. instance: base::mean() mean(), saferDev:::.base_op_check() .base_op_check().","code":""},{"path":"/reference/colons_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colons_check — colons_check","text":"","code":"colons_check(x, safer_check = TRUE)"},{"path":"/reference/colons_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"colons_check — colons_check","text":"x function name, written without quotes brackets. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/colons_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"colons_check — colons_check","text":"message indicating missing :: :::, message saying everything seems fine.","code":""},{"path":"/reference/colons_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"colons_check — colons_check","text":"- precisely, colons_check() verifies strings opening bracket \"(\" preceeded \"::\". note, \":::\" also detected considered \"::\". - regex used detect function name : \"[-zA-Z.]1[-zA-Z0-9._]*\\(\". - following R operators using bracket considered: \"function\", \"\", \"\", \"\" \"repeat\".","code":""},{"path":"/reference/colons_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"colons_check — colons_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/colons_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"colons_check — colons_check","text":"","code":"colons_check(mean) #>  #>  #> ================ #>  #> INSIDE mean(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 2\tUseMethod\t\t #>  #> ================ #>  colons_check(colons_check) #>  #>  #> ================ #>  #> INSIDE colons_check(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 16\tmapply\t\tin_basic_fun <-  #> 19\tmapply\t\tin_basic_fun_name_pos_wo_op <-  #> 42\tmapply\t\tin_other_fun <-  #> 45\tmapply\t\tin_other_fun_name_pos_wo_op <-  #>  #> INSIDE colons_check(), SOME :: OR ::: ARE MISSING AT OTHER FUNCTION POSITIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 11\t.functions_detect\t\tout <-  #> 66\t.colons_check_message\t\ttempo <-  #> 79\t.colons_check_message\t\ttempo <-  #>  #> ================ #>"},{"path":"/reference/env_check.html","id":null,"dir":"Reference","previous_headings":"","what":"env_check — env_check","title":"env_check — env_check","text":"Verify object names environment defined pos parameter identical object names environments (following R Scope). can used verify names used objects inside function working environment override names objects already present R environments, following R scope.","code":""},{"path":"/reference/env_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"env_check — env_check","text":"","code":"env_check(pos = 1, name = NULL, safer_check = TRUE)"},{"path":"/reference/env_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"env_check — env_check","text":"pos Single non nul positive integer indicating position environment checked (argument n parent.frame() function). Value 1 means one step env_check() local environment (default). means env_check(pos = 1) used inside function , checks name object local environment function also present environments, following R Scope, starting just environment. env_check(pos = 1) used working (Global) environment (named .GlobalEnv), checks object names .GlobalEnv environment, environments. See examples . name Single character string indicating string added output string, instance name function inside env_check() used. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/env_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"env_check — env_check","text":"character string indicating object names tested environment match object names environments, following R scope, NULL match.","code":""},{"path":[]},{"path":"/reference/env_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"env_check — env_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/env_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"env_check — env_check","text":"","code":"# Example in the working environment  mean <- 1  # creation of the object mean with value 1 in the .GlobalEnv environment,  # knowing that the mean() function also exists in the environment base, above .GlobalEnv. t.test <- 1  # creation of the object t.test with value 1 in the .GlobalEnv environment,  # knowing that the t.test() function also exists in the environment stats, above .GlobalEnv. search()  #>  [1] \".GlobalEnv\"        \"package:saferDev\"  \"package:stats\"     #>  [4] \"package:graphics\"  \"package:grDevices\" \"package:utils\"     #>  [7] \"package:datasets\"  \"package:methods\"   \"Autoloads\"         #> [10] \"package:base\"      # current R scope (order of the successive R environments). utils::find(\"mean\")  #> [1] \"package:base\" # where the objects with the name \"mean\" are present. utils::find(\"t.test\")  #> [1] \"package:stats\" # where the objects with the name \"mean\" are present. a <- env_check(pos = 1)  # test if any object name of the global environment are above environments  # (or env_check(), as pos = 1 is the default value). a # the output string of sec(). #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" cat(a) # the evaluated output. #> SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN : #> package:stats: t.test #> package:base: mean env_check(pos = 2)  #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\neval_with_user_handlers(expr, envir, enclos, user_handlers): enclos envir expr\\nwithCallingHandlers(withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers)), warning = wHandler, error = eHandler, message = mHandler): expr\\ndoTryCatch(return(expr), name, parentenv, handler): expr\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): expr\\ntryCatchList(expr, classes, parentenv, handlers): expr\\ntryCatch(expr, error = function(e) {\\n    call <- conditionCall(e)\\n    if (!is.null(call)) {\\n        if (identical(call[[1]], quote(doTryCatch))) \\n            call <- sys.call(-4)\\n        dcall <- deparse(call, nlines = 1)\\n        prefix <- paste(\\\"Error in\\\", dcall, \\\": \\\")\\n        LONG <- 75\\n        sm <- strsplit(conditionMessage(e), \\\"\\\\n\\\")[[1]]\\n        w <- 14 + nchar(dcall, type = \\\"w\\\") + nchar(sm[1], type = \\\"w\\\")\\n        if (is.na(w)) \\n            w <- 14 + nchar(dcall, type = \\\"b\\\") + nchar(sm[1], type = \\\"b\\\")\\n        if (w > LONG) \\n            prefix <- paste0(prefix, \\\"\\\\n  \\\")\\n    }\\n    else prefix <- \\\"Error : \\\"\\n    msg <- paste0(prefix, conditionMessage(e), \\\"\\\\n\\\")\\n    .Internal(seterrmessage(msg[1]))\\n    if (!silent && isTRUE(getOption(\\\"show.error.messages\\\"))) {\\n        cat(msg, file = outFile)\\n        .Internal(printDeferredWarnings())\\n    }\\n    invisible(structure(msg, class = \\\"try-error\\\", condition = e))\\n}): expr\\ntry(f, silent = TRUE): expr\\nevaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, debug = debug, last = i == length(out), use_try = stop_on_error != 2, keep_warning = keep_warning, keep_message = keep_message, log_echo = log_echo, log_warning = log_warning, output_handler = output_handler, include_timing = include_timing): enclos envir expr\\nevaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler): enclos envir expr\\nwithCallingHandlers(data_reference_topic(topic, pkg, examples_env = examples_env, run_dont_run = run_dont_run), error = function(err) {\\n    cli::cli_abort(\\\"Failed to parse Rd in {.file {topic$file_in}}\\\", parent = err, call = quote(build_reference()))\\n}): expr\\nwithCallingHandlers(expr, error = function(cnd) {\\n    if (i == 0) {\\n    }\\n    else {\\n        message <- c(i = \\\"In index: {i}.\\\")\\n        if (!is.null(names) && !is.na(names[[i]]) && names[[i]] != \\\"\\\") {\\n            name <- names[[i]]\\n            message <- c(message, i = \\\"With name: {name}.\\\")\\n        }\\n        else {\\n            name <- NULL\\n        }\\n        cli::cli_abort(message, location = i, name = name, parent = cnd, call = error_call, class = \\\"purrr_error_indexed\\\")\\n    }\\n}): expr\\nwith_indexed_errors(i = i, names = names, error_call = .purrr_error_call, call_with_cleanup(map_impl, environment(), .type, .progress, n, names, i)): expr\\nwithCallingHandlers(code, purrr_error_indexed = function(err) {\\n    cnd_signal(err$parent)\\n}): expr\\n\" # test if any object of the stats environment (one step above .GlobalEnv)  # are above environments. Returns NULL since no object names of stats are in above environments   # Example inside a function  fun1 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 1)}  # env_check() will check if the object names inside the fun1 function  # exist in the .GlobalEnv environment and above. fun1() #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\neval(expr, envir, enclos): mean t.test\\npackage:stats: t.test\\npackage:base: mean\\n\" fun2 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 2)}  # env_check() will check if the object names inside the fun2 function  # exist in the stats environment and above. fun2() #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" fun3 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 2, name = \"fun3\")}  # idem fun2() but with the name of the function fun2 indicated.  # Instead of writting name = \"fun3\",  # we can also use name = as.character(sys.calls()[[length(sys.calls())]]),  # as sys.calls() gives the function name at top stack of the imbricated functions,  # sys.calls()[[length(sys.calls())]] the name of the just above function.  # This can also been used for the above function: as.character(sys.call(1)) fun3() #> [1] \"SOME VARIABLES OF fun3 ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" test.pos <- 1 env_check(pos = test.pos,  name = if(length(sys.calls()) >= test.pos) {as.character(sys.calls()[[length(sys.calls()) + 1 - test.pos]])} else{search()[ (1:length(search()))[test.pos - length(sys.calls())]]})  #> [1] \"SOME VARIABLES OF eval ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" # here is a way to have the name of the tested environment according to test.pos value"},{"path":"/reference/get_message.html","id":null,"dir":"Reference","previous_headings":"","what":"get_message — get_message","title":"get_message — get_message","text":"Evaluate instruction written \"\" return first error, warning standard (non error non warning) messages ever exist. Using argument print.= FALSE, return NULL message, convenient cases.","code":""},{"path":"/reference/get_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_message — get_message","text":"","code":"get_message(   data,   kind = \"error\",   header = TRUE,   print.no = FALSE,   text = NULL,   env = NULL,   safer_check = TRUE )"},{"path":"/reference/get_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_message — get_message","text":"data Single character string evaluate. kind Single character string. Either \"error\" get error messages, \"warning\" get warning messages, \"message\" get non error non warning messages. header Single logical value. Add header returned message? print.Single logical value. Print message saying message reported? text Single character string added output message (even message exists print.TRUE). Inactivated header argument FALSE. Write NULL required. env name existing environment. Write NULL required. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/get_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_message — get_message","text":"message NULL message print.FALSE.","code":""},{"path":"/reference/get_message.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_message — get_message","text":"WARNINGS first message returned. Always use env argument get_message() used inside functions. function prevent printing print() used inside instruction tested. prevent , use tempo <- utils::capture.output(error <- get_message(data = \"arg_check(data = '', class = mean, neg.values = FALSE, print = TRUE)\")). return get_message() assigned error printed messages captured utils::capture.output() assigned tempo. See examples.","code":""},{"path":[]},{"path":"/reference/get_message.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_message — get_message","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/get_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_message — get_message","text":"","code":"get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"warning\",  print.no = TRUE, text = \"IN A\") #> [1] \"WARNING MESSAGE REPORTED IN A:\\nsimpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\"  get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"message\",  print.no = TRUE, text = \"IN A\") #> [1] \"NO STANDARD (NON ERROR AND NON WARNING) MESSAGE REPORTED IN A\"  get_message(data = \"wilcox.test()\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"ERROR MESSAGE REPORTED IN A:\\nIn wilcox.test.default() : argument \\\"x\\\" is missing, with no default\\n\"  get_message(data = \"sum(1)\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"message('ahah')\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"message('ahah')\", kind = \"message\", print.no = TRUE, text = \"IN A\") #> ahah #> [1] \"NO STANDARD (NON ERROR AND NON WARNING) MESSAGE REPORTED IN A\"  get_message(data = \"ggplot(data = data.frame(X = 1:10, stringsAsFactors = TRUE),  mapping = aes(x = X)) + geom_histogram()\", kind = \"message\", print.no = TRUE,  text = \"IN FUNCTION 1\") #> [1] \"NO POTENTIAL STANDARD (NON ERROR AND NON WARNING) MESSAGE BECAUSE OF ERROR MESSAGE REPORTED IN FUNCTION 1\"  set.seed(1) ;  obs1 <- data.frame(Time = c(rnorm(10), rnorm(10) + 2),  Group1 = rep(c(\"G\", \"H\"), each = 10), stringsAsFactors = TRUE) ;  get_message(data = 'gg_boxplot(data = obs1, y = \"Time\", categ = \"Group1\")',  kind = \"message\", print.no = TRUE, text = \"IN FUNCTION 1\") #> [1] \"NO POTENTIAL STANDARD (NON ERROR AND NON WARNING) MESSAGE BECAUSE OF ERROR MESSAGE REPORTED IN FUNCTION 1\""},{"path":"/reference/internal_function.html","id":null,"dir":"Reference","previous_headings":"","what":".pack_and_function_check — .pack_and_function_check","title":".pack_and_function_check — .pack_and_function_check","text":"Check 1) required functions present required packages 2) required packages installed locally. Simplified version saferDev::is_function_here(), used internal function functions package. Check critical operators R present packages global env. Others functions R scope can overwritten safer functions always use :: using function.","code":""},{"path":"/reference/internal_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".pack_and_function_check — .pack_and_function_check","text":"","code":".pack_and_function_check(   fun,   lib.path,   external.function.name,   external.package.name )  .base_op_check(external.function.name, external.package.name)"},{"path":"/reference/internal_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".pack_and_function_check — .pack_and_function_check","text":"fun Character vector names required functions, preceded name package belong double colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). lib.path Character vector specifying absolute pathways directories containing listed packages fun argument, default directories. NULL, function checks base::.libPaths() default R library folders. external.function.name Name function using .pack_and_function_check() function. external.package.name Name package function using .pack_and_function_check() function.","code":""},{"path":"/reference/internal_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".pack_and_function_check — .pack_and_function_check","text":"error message least one checked packages missing lib.path, least one checked functions missing required package, nothing otherwise. error message least one checked operator present R scope, nothing otherwise.","code":""},{"path":"/reference/internal_function.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".pack_and_function_check — .pack_and_function_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/internal_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".pack_and_function_check — .pack_and_function_check","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function .pack_and_function_check(fun = \"ggplot2::notgood\", lib.path = base::.libPaths(), external.function.name = \"fun1\") # this example returns an error .pack_and_function_check(fun = c(\"ggplot2::geom_point\", \"grid::gpar\"), lib.path = base::.libPaths(), external.function.name = \"fun1\") #> Error in .pack_and_function_check(fun = c(\"ggplot2::geom_point\", \"grid::gpar\"),     lib.path = base::.libPaths(), external.function.name = \"fun1\"): could not find function \".pack_and_function_check\"  if (FALSE) { # Example that shouldn't be run because this is an internal function assign(\"!\", 1) ; .base_op_check(external.function.name = \"fun1\") # commented because this example returns an error }"},{"path":"/reference/is_function_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_function_here — is_function_here","title":"is_function_here — is_function_here","text":"Check required functions present installed packages. controls modifications function names package versions.","code":""},{"path":"/reference/is_function_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_function_here — is_function_here","text":"","code":"is_function_here(fun, lib.path = NULL, safer_check = TRUE)"},{"path":"/reference/is_function_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_function_here — is_function_here","text":"fun Character vector names required functions, preceded name package belong double colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). Warning: write \"()\" end function lib.path Character vector specifying absolute pathways directories containing listed packages fun argument, default directories. Ignored NULL. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/is_function_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_function_here — is_function_here","text":"error message least one checked packages missing lib.path, least one checked functions missing required package, nothing otherwise.","code":""},{"path":[]},{"path":"/reference/is_function_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_function_here — is_function_here","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/is_function_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_function_here — is_function_here","text":"","code":"# is_function_here(fun = \"ggplot2::notgood\") # commented because this example returns an error is_function_here(fun = c(\"ggplot2::geom_point\", \"grid::gpar\"))"},{"path":"/reference/is_package_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_package_here — is_package_here","title":"is_package_here — is_package_here","text":"Check required packages installed locally.","code":""},{"path":"/reference/is_package_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_package_here — is_package_here","text":"","code":"is_package_here(req.package, lib.path = NULL, safer_check = TRUE)"},{"path":"/reference/is_package_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_package_here — is_package_here","text":"req.package Character vector package names check. lib.path Character vector specifying absolute pathways directories containing listed packages req.package argument, default directories. NULL, function checks .libPaths() default R library folders. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/is_package_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_package_here — is_package_here","text":"error message least one checked packages missing lib.path, nothing otherwise.","code":""},{"path":[]},{"path":"/reference/is_package_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_package_here — is_package_here","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/is_package_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_package_here — is_package_here","text":"","code":"# is_package_here(req.package = \"nopackage\") # commented because this example returns an error  is_package_here(req.package = \"ggplot2\")  #' # is_package_here(req.package = \"ggplot2\", lib.path = \"C:/Users/yhan/AppData/Local/R/win-library/4.3\") # commented because this example returns an error if the lib.path argument is not an existing directory"},{"path":"/reference/is_python_package_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_python_package_here — is_python_package_here","title":"is_python_package_here — is_python_package_here","text":"Check specified python packages installed locally.","code":""},{"path":"/reference/is_python_package_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_python_package_here — is_python_package_here","text":"","code":"is_python_package_here(   req.package,   python.exec.path = NULL,   python.lib.path = NULL,   lib.path = NULL,   safer_check = TRUE )"},{"path":"/reference/is_python_package_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_python_package_here — is_python_package_here","text":"req.package Character vector package names import. python.exec.path Single optional character vector specifying absolute pathways executable python file use (associated packages use). NULL, reticulate::import_from_path() function used is_python_package_here() seeks available version python.exe, uses python_config(python_version, required_module, python_versions). might correct one python.lib.path parameter specified. Thus, recommanded leave NULL, notably using computing clusters. python.lib.path Optional character vector specifying absolute pathways directories containing listed packages req.package argument, default directories. lib.path Absolute path reticulate packages, default folders. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/is_python_package_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_python_package_here — is_python_package_here","text":"error message least one checked packages missing python.lib.path, nothing otherwise.","code":""},{"path":"/reference/is_python_package_here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_python_package_here — is_python_package_here","text":"WARNINGS python 3.7. Previous versions return error \"Error sys$stdout$flush() : attempt apply non-function\"","code":""},{"path":"/reference/is_python_package_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_python_package_here — is_python_package_here","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/is_python_package_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_python_package_here — is_python_package_here","text":"","code":"# example of error message  # is_python_package_here(req.package = \"nopackage\")   # commented because this example returns an error if the python package is not installed on the computer # (require the installation of the python serpentine package  # from https://github.com/koszullab/serpentine  # is_python_package_here(req.package = \"serpentine\")   # another example of error message  # is_python_package_here(req.package = \"serpentine\", python.lib.path = \"blablabla\")"},{"path":"/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"report — report","title":"report — report","text":"Log file function: print character string data object output file.","code":""},{"path":"/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"report — report","text":"","code":"report(   data,   output = \"results.txt\",   path,   overwrite = FALSE,   rownames.kept = FALSE,   vector.cat = FALSE,   noquote = TRUE,   sep = 2,   safer_check = TRUE )"},{"path":"/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"report — report","text":"data Object print output file. NULL, nothing done, warning. output Single character string. Name output file. path Location output file. overwrite Single logical value. output file already exists, defines printing appended (default FALSE) output file content erased printing (TRUE). rownames.kept Single logical value. Defines whether row names removed small tables (less length.rows rows). vector.cat Single logical value. TRUE print vector length > 1 using cat() instead capture.output(). Otherwise (default FALSE) opposite. noquote Single logical value. TRUE quote present characters. sep Single integer representing number empty lines printed data. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"report — report","text":"Nothing.","code":""},{"path":[]},{"path":"/reference/report.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"report — report","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"report — report","text":"","code":"#report() report(data = 1:3, output = \"results.txt\", path = \".\", overwrite = TRUE,  rownames.kept = FALSE, vector.cat = FALSE, noquote = FALSE, sep = 2)"}]
