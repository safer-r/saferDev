[{"path":"/articles/all_args_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"all_args_here","text":"","code":"source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test2.R\") source(\"https://raw.githubusercontent.com/safer-r/.github/refs/heads/main/profile/backbone.R\") FUN1 <- function(x, y){     code_for_col <- base::as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE), mode = \"any\")     code_for_col2 <- base::as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y)))     middle_bracket <- base::do.call(what = base::c, args = code_for_col)     middle_bracket2 <- base::do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) } FUN2 <- function(x, y){     middle_bracket2 <- base::do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) }"},{"path":"/articles/all_args_here.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"all_args_here","text":"","code":"# Examples that return an error # all_args_here(mean) # all_args_here(test2) all_args_here(     x = FUN2 # R function ) >   LINE_NB     FUN_NAME > 1       2      do.call > 2       2 parent.frame >                                                                                    FUN_ARGS > 1 do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) > 2                                                                            parent.frame() >   FUN_POS                                          DEF_ARGS MISSING_ARG_NAMES > 1      26 what, args, quote = FALSE, envir = parent.frame()                   > 2     100                                             n = 1                 n >   MISSING_ARGS              STATUS > 1                             GOOD > 2        n = 1 parent.frame(n = 1)"},{"path":"/articles/all_args_here.html","id":"argument-export-associated-with-argument-path_out-df_name-and-overwrite","dir":"Articles","previous_headings":"","what":"Argument export (associated with argument path_out, df_name and overwrite)","title":"all_args_here","text":"","code":"all_args_here(     x = FUN2, # R function     export = TRUE, # export the data frame into a .tsv file?     path_out = \".\", # pathway of the folder where to export the data frame     df_name = \"res.tsv\", # name of the exported data frame file     overwrite = TRUE # Overwrite potential df_name file already existing in path_out? )"},{"path":"/articles/all_args_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"all_args_here","text":"","code":"all_args_here(     x = FUN1, # R function     export = FALSE, # export the data frame into a .tsv file?     path_out = \".\", # pathway of the folder where to export the data frame     df_name = \"res.tsv\", # name of the exported data frame file     overwrite = FALSE, # Overwrite potential df_name file already existing in path_out?     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories     safer_check = TRUE # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function. ) >    LINE_NB     FUN_NAME > 1        2    as.vector > 2        2       unlist > 3        2       mapply > 4        2          rep > 5        2       length > 6        3    as.vector > 7        3       unlist > 8        3       mapply > 9        3          rep > 10       3       length > 11       4      do.call > 12       5      do.call > 13       5 parent.frame >                                                                                                                                                                                                                          FUN_ARGS > 1  as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE), mode = \"any\") > 2                                     unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE) > 3                                                                                           mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE) > 4                                                                                                                                                                                                 rep(x = y, base::length(x = x)) > 5                                                                                                                                                                                                                   length(x = x) > 6                                                                                                        as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y))) > 7                                                                                                                             unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y)) > 8                                                                                                                                               mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y) > 9                                                                                                                                                                                                 rep(x = y, base::length(x = x)) > 10                                                                                                                                                                                                                  length(x = x) > 11                                                                                                                                                                                   do.call(what = base::c, args = code_for_col) > 12                                                                                                                                      do.call(what = base::c, args = code_for_col, quote = FALSE, envir = base::parent.frame()) > 13                                                                                                                                                                                                                 parent.frame() >    FUN_POS                                                     DEF_ARGS > 1       23                                              x, mode = \"any\" > 2       43                        x, recursive = TRUE, use.names = TRUE > 3       60 FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 4       94                                                       x, ... > 5      111                                                            x > 6       24                                              x, mode = \"any\" > 7       44                        x, recursive = TRUE, use.names = TRUE > 8       61 FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 9       95                                                       x, ... > 10     112                                                            x > 11      25            what, args, quote = FALSE, envir = parent.frame() > 12      26            what, args, quote = FALSE, envir = parent.frame() > 13     100                                                        n = 1 >                MISSING_ARG_NAMES > 1                                > 2                                > 3                                > 4                                > 5                                > 6                           mode > 7           recursive, use.names > 8  MoreArgs, SIMPLIFY, USE.NAMES > 9                                > 10                               > 11                  quote, envir > 12                               > 13                             n >                                          MISSING_ARGS > 1                                                     > 2                                                     > 3                                                     > 4                                                     > 5                                                     > 6                                        mode = \"any\" > 7                  recursive = TRUE, use.names = TRUE > 8  MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 9                                                     > 10                                                    > 11              quote = FALSE, envir = parent.frame() > 12                                                    > 13                                              n = 1 >                                                                                                                                     STATUS > 1                                                                                                                                     GOOD > 2                                                                                                                                     GOOD > 3                                                                                                                                     GOOD > 4                                                                                                                                     GOOD > 5                                                                                                                                     GOOD > 6   as.vector(x = base::unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y)), mode = \"any\") > 7  unlist(x = base::mapply(FUN = function(x, y){base::rep(x = y, base::length(x = x))}, x = x, y = y), recursive = TRUE, use.names = TRUE) > 8     mapply(x = x, y = y,FUN = function(x, y){base::rep(x = y, base::length(x = x))}, MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE) > 9                                                                                                                                     GOOD > 10                                                                                                                                    GOOD > 11                                                     do.call(what = base::c, args = code_for_col, quote = FALSE, envir = parent.frame()) > 12                                                                                                                                    GOOD > 13                                                                                                                     parent.frame(n = 1)  all_args_here(     x = all_args_here, # R function     export = FALSE, # export the data frame into a .tsv file?     path_out = \".\", # pathway of the folder where to export the data frame     df_name = \"res.tsv\", # name of the exported data frame file     overwrite = FALSE, # Overwrite potential df_name file already existing in path_out?     lib_path = NULL, # absolute pathways of the directories containing the required packages if not in the default directories     safer_check = TRUE # perform some \"safer\" checks? Warning : always set this argument to FALSE if all_args_here() is used inside another safer function. ) >  >  > AFTER RUNNING all_args_here() OF THE saferDev PACKAGE: > INSIDE all_args_here(), EVERYTHING SEEMS CLEAN >     LINE_NB                      FUN_NAME > 1         5                       as.list > 2         5                    match.call > 3         5                  sys.function > 4         5                    sys.parent > 5         6                      sys.call > 6         6                    sys.parent > 7         7                  parent.frame > 8         8                        paste0 > 9        14                         names > 10       14                       formals > 11       14                  sys.function > 12       14                    sys.parent > 13       15                  parent.frame > 14       16                           all > 15       16                             c > 16       17                        length > 17       17                           all > 18       17                    is.logical > 19       19                        paste0 > 20       20                        ifelse > 21       20                       is.null > 22       21                        paste0 > 23       24                        paste0 > 24       26                          stop > 25       26                        paste0 > 26       31                .base_op_check > 27       34                       is.null > 28       35                           all > 29       35                        typeof > 30       37                        paste0 > 31       38                        ifelse > 32       38                       is.null > 33       39                        paste0 > 34       42                         paste > 35       44                          stop > 36       44                        paste0 > 37       48                           all > 38       48                    dir.exists > 39       50                        paste0 > 40       51                        ifelse > 41       51                       is.null > 42       52                        paste0 > 43       55                         paste > 44       57                          stop > 45       57                        paste0 > 46       62                     .libPaths > 47       62                           sub > 48       65                     .libPaths > 49       69                     .libPaths > 50       72      .pack_and_function_check > 51       72                             c > 52       79                             c > 53       80                          eval > 54       80                         parse > 55       80                        paste0 > 56       80                             c > 57       80                       missing > 58       81                        paste0 > 59       81                       missing > 60       83                     getOption > 61       85                   environment > 62       85                   environment > 63       86                           any > 64       87                        paste0 > 65       88                        ifelse > 66       88                       is.null > 67       89                        paste0 > 68       91                        ifelse > 69       91                           sum > 70       93                        paste0 > 71       96                          stop > 72       96                        paste0 > 73      103                    expression > 74      103                             c > 75      104                             c > 76      105                             c > 77      106                     arg_check > 78      112                          eval > 79      112                   environment > 80      113                   environment > 81      114                     arg_check > 82      120                          eval > 83      120                   environment > 84      121                   environment > 85      122                     arg_check > 86      128                          eval > 87      128                   environment > 88      129                   environment > 89      130                     arg_check > 90      136                          eval > 91      136                   environment > 92      137                   environment > 93      138                     arg_check > 94      144                          eval > 95      144                   environment > 96      145                   environment > 97      146                       is.null > 98      147                           any > 99      148                          stop > 100     148                        paste0 > 101     149                         paste > 102     155                        length > 103     156              suppressWarnings > 104     156                        sapply > 105     156                        lapply > 106     158                         is.na > 107     160                           any > 108     162                        lapply > 109     163                        length > 110     165                           any > 111     166                        paste0 > 112     167                        ifelse > 113     167                       is.null > 114     168                        paste0 > 115     170                        ifelse > 116     170                           sum > 117     173                        paste0 > 118     175                          stop > 119     175                        paste0 > 120     180                             c > 121     182                        sapply > 122     182                        lapply > 123     184                           get > 124     184                  parent.frame > 125     187                       is.null > 126     189                           any > 127     190                        paste0 > 128     191                        ifelse > 129     191                       is.null > 130     192                        paste0 > 131     194                        ifelse > 132     194                           sum > 133     196                        paste0 > 134     199                          stop > 135     199                        paste0 > 136     203                             c > 137     204                        sapply > 138     204                        lapply > 139     206                           get > 140     206                  parent.frame > 141     209                       is.null > 142     210                        return > 143     213                           all > 144     213                          mode > 145     216                           any > 146     217                        paste0 > 147     218                        ifelse > 148     218                       is.null > 149     219                        paste0 > 150     221                        ifelse > 151     221                           sum > 152     223                        paste0 > 153     226                          stop > 154     226                        paste0 > 155     231                        sapply > 156     231                        lapply > 157     233                           get > 158     233                  parent.frame > 159     236                           any > 160     238                           any > 161     239                        paste0 > 162     240                        ifelse > 163     240                       is.null > 164     241                        paste0 > 165     243                        ifelse > 166     243                           sum > 167     245                        paste0 > 168     248                          stop > 169     248                        paste0 > 170     253                             c > 171     254                       options > 172     255                       options > 173     258                       is.null > 174     259                           all > 175     259                    dir.exists > 176     260                        paste0 > 177     261                        ifelse > 178     261                       is.null > 179     262                        paste0 > 180     265                         paste > 181     267                          stop > 182     267                        paste0 > 183     273                           all > 184     273                    dir.exists > 185     274                        paste0 > 186     275                        ifelse > 187     275                       is.null > 188     276                        paste0 > 189     279                         paste > 190     281                          stop > 191     281                        paste0 > 192     285                         grepl > 193     287                           sub > 194     291                         grepl > 195     294                           sub > 196     298                    dir.exists > 197     299                        paste0 > 198     300                        ifelse > 199     300                       is.null > 200     301                        paste0 > 201     305                          stop > 202     305                        paste0 > 203     310                   file.exists > 204     310                        paste0 > 205     312                        paste0 > 206     313                        ifelse > 207     313                       is.null > 208     314                        paste0 > 209     317                        paste0 > 210     319                          stop > 211     319                        paste0 > 212     325                       deparse > 213     326                             c > 214     328                        paste0 > 215     330             .functions_detect > 216     336                         paste > 217     338                         grepl > 218     341                        paste0 > 219     342                         paste > 220     345                        paste0 > 221     345                        ifelse > 222     345                       is.null > 223     346                        paste0 > 224     350                        cumsum > 225     350                         nchar > 226     352                             c > 227     352                        length > 228     354        .in_quotes_replacement > 229     359        .in_quotes_replacement > 230     363                          sort > 231     363                             c > 232     366                        lapply > 233     368                        lapply > 234     372                        length > 235     373                    as.integer > 236     373                           sub > 237     374                         names > 238     377                         which > 239     379                        length > 240     381                         nchar > 241     384                        substr > 242     387                        paste0 > 243     392                          stop > 244     392                        paste0 > 245     393                        ifelse > 246     393                       is.null > 247     394                        paste0 > 248     395                        ifelse > 249     400                        substr > 250     401                         nchar > 251     403                         grepl > 252     406                 .fun_args_pos > 253     407                        paste0 > 254     410                        substr > 255     412                         grepl > 256     419                        substr > 257     420                         paste > 258     420                           rep > 259     425                        substr > 260     427                        substr > 261     430                       is.null > 262     431                        unlist > 263     434                        substr > 264     435                         paste > 265     435                           rep > 266     446                        lapply > 267     447                        lapply > 268     451                        length > 269     452                        length > 270     453                        paste0 > 271     455                         grepl > 272     458        .in_quotes_replacement > 273     462        .in_quotes_replacement > 274     466                 .fun_args_pos > 275     469                       is.null > 276     470                        unlist > 277     477                     as.vector > 278     477                        unlist > 279     477                        mapply > 280     479                           rep > 281     479                        length > 282     483                     as.vector > 283     483                        unlist > 284     483                        mapply > 285     485                           rep > 286     485                        length > 287     489                     as.vector > 288     489                        unlist > 289     491                     as.vector > 290     491                        unlist > 291     493                     as.vector > 292     493                        unlist > 293     495                       do.call > 294     496                  parent.frame > 295     497                        lapply > 296     499                       is.null > 297     500                           seq > 298     500                        length > 299     506                        lapply > 300     508                       is.null > 301     509                           seq > 302     509                        length > 303     515                        length > 304     515                        length > 305     516                        length > 306     516                        length > 307     516                        length > 308     517                        length > 309     517                        length > 310     517                        length > 311     518                        length > 312     518                        length > 313     519                        paste0 > 314     520                          col1 > 315     521                        length > 316     521                          col2 > 317     521                        length > 318     522                          col3 > 319     522                        length > 320     522                          col4 > 321     523                        length > 322     523                  code_for_col > 323     523                        length > 324     524                middle_bracket > 325     524                        length > 326     526                          stop > 327     526                        paste0 > 328     527                        ifelse > 329     527                       is.null > 330     528                        paste0 > 331     529                        ifelse > 332     534                     as.vector > 333     534                        unlist > 334     534                        mapply > 335     537                         grepl > 336     537                        paste0 > 337     540                         grepl > 338     541                        paste0 > 339     544                        return > 340     547                        return > 341     551                        return > 342     556                           any > 343     557                        paste0 > 344     559                         paste > 345     561                          stop > 346     561                        paste0 > 347     562                        ifelse > 348     562                       is.null > 349     563                        paste0 > 350     564                        ifelse > 351     570                           any > 352     580                        length > 353     581                           cat > 354     589                        length > 355     591                        paste0 > 356     593                         paste > 357     593                        paste0 > 358     593                        substr > 359     596                  colons_check > 360     597                 all_args_here > 361     600                          stop > 362     600                        paste0 > 363     602                        ifelse > 364     602                       is.null > 365     603                        paste0 > 366     604                        ifelse > 367     609                        substr > 368     612                          stop > 369     612                        paste0 > 370     614                        ifelse > 371     614                       is.null > 372     615                        paste0 > 373     616                        ifelse > 374     621                        substr > 375     623        .extract_all_fun_names > 376     625              is_function_here > 377     625                        paste0 > 378     628                           sub > 379     632                        exists > 380     633                  getNamespace > 381     636                           get > 382     636                   asNamespace > 383     641                        paste0 > 384     643                         paste > 385     643                        paste0 > 386     643                        substr > 387     646                   getAnywhere > 388     649                 all_args_here > 389     652                          stop > 390     652                        paste0 > 391     653                        ifelse > 392     653                       is.null > 393     654                        paste0 > 394     655                        ifelse > 395     660                  is.primitive > 396     661                       as.list > 397     661              suppressWarnings > 398     661                       formals > 399     661                          args > 400     662                   asNamespace > 401     664                           all > 402     664                        typeof > 403     665                             c > 404     666                        length > 405     678                       as.list > 406     678                       formals > 407     679                   asNamespace > 408     682                       is.null > 409     683                             c > 410     684                             c > 411     685                             c > 412     686                             c > 413     689                        sapply > 414     690                        paste0 > 415     690                        ifelse > 416     690                           all > 417     690                        typeof > 418     692                       deparse > 419     693                             c > 420     697                         paste > 421     697                        paste0 > 422     697                         names > 423     700                             c > 424     702        .in_quotes_replacement > 425     708                        length > 426     710                        length > 427     711                        length > 428     712                        paste0 > 429     715  nmiddle_bracket_open_in_col3 > 430     716                        length > 431     717                         paste > 432     719 nmiddle_bracket_close_in_col3 > 433     720                        length > 434     721                         paste > 435     724                          stop > 436     724                        paste0 > 437     726                        ifelse > 438     726                       is.null > 439     727                        paste0 > 440     728                        ifelse > 441     734                        length > 442     735   .in_parenthesis_replacement > 443     741                             c > 444     744                           sub > 445     744                        paste0 > 446     749                           sub > 447     752                      strsplit > 448     755                       is.null > 449     756                         nchar > 450     759                           any > 451     760                        paste0 > 452     762                     npos_rep2 > 453     763                        length > 454     763                         paste > 455     765                         paste > 456     768                          stop > 457     768                        paste0 > 458     770                        ifelse > 459     770                       is.null > 460     771                        paste0 > 461     772                        ifelse > 462     778                        length > 463     780                         nchar > 464     782                           any > 465     782                         is.na > 466     784                        paste0 > 467     787                        paste0 > 468     790                          stop > 469     790                        paste0 > 470     792                        ifelse > 471     792                       is.null > 472     793                        paste0 > 473     794                        ifelse > 474     800                           any > 475     801                        length > 476     803                        substr > 477     808                         nchar > 478     813                         names > 479     815                        length > 480     815                        length > 481     816                           any > 482     817                        paste0 > 483     820                  ntempo_split > 484     820                        length > 485     821                         paste > 486     822               narg_full_names > 487     823                        length > 488     824                         paste > 489     827                          stop > 490     827                        paste0 > 491     829                        ifelse > 492     829                       is.null > 493     830                        paste0 > 494     831                        ifelse > 495     837           .all_args_here_fill > 496     843                             c > 497     844                             c > 498     845                             c > 499     849                             c > 500     850                             c > 501     851                             c > 502     852                             c > 503     856                           all > 504     856                             c > 505     857                        paste0 > 506     857                  as.character > 507     860                        paste0 > 508     864                        paste0 > 509     867                       on.exit > 510     867                           cat > 511     867                        paste0 > 512     872                    data.frame > 513     878                   write.table > 514     880                             c > 515     884                        return > 516     886                       is.null > 517     887                       on.exit > 518     887                       warning > 519     887                        paste0 > 520     888                        ifelse > 521     888                       is.null > 522     889                        paste0 > 523     895                       on.exit > 524     895                       optionsas.list(x = base::match.call(definition = base::sys.function(which = base::sys.parent(n = 0)),  call = base::sys.call(which = base::sys.parent(n = 0)),  expand.dots = FALSE, envir = base::parent.frame(n = 2L))) > 2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               match.call(definition = base::sys.function(which = base::sys.parent(n = 0)),  call = base::sys.call(which = base::sys.parent(n = 0)),  expand.dots = FALSE, envir = base::parent.frame(nsys.function(which = base::sys.parent(nsys.parent(nsys.call(which = base::sys.parent(nsys.parent(nparent.frame(npaste0(tempo_settings[[1]], \"()\",  collapse = NULL, recycle0 = FALSE) > 9                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       names(x = base::formals(fun = base::sys.function(which = base::sys.parent(n = 2)),  envir = base::parent.frame(nformals(fun = base::sys.function(which = base::sys.parent(n = 2)),  envir = base::parent.frame(n = 1)) > 11                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                sys.function(which = base::sys.parent(nsys.parent(nparent.frame(nall(safer_check %in% base::c(TRUE, FALSE), na.rmclength(x = safer_checkall(base::is.logical(x = safer_check),  na.rmis.logical(x = safer_check) > 19                                                                                                                                                                                                                                                                                                                paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nsafer_check ARGUMENT MUST BE EITHER TRUE OR FALSE. HER IT IS:\\\\n\",  base::paste0(safer_check, collapse = \"\\\\n\", recycle0 = FALSE),  collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste0(safer_check, collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recyclebase_op_check(external_function_name = function_name,  external_package_name = package_nameis.null(x = lib_pathall(base::typeof(x = lib_path) == \"character\",  na.rmtypeof(x = lib_path) > 30                                                                                                                                                                                                                                                                                     paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT MUST BE A VECTOR OF CHARACTERS:\\\\n\",  base::paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE) > 34                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) > 36                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE) > 37                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       all(base::dir.exists(paths = lib_path),  na.rmdir.exists(paths = lib_path) > 39                                                                                                                                                                                                                                                                                                    paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS:\\\\n\",  base::paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(lib_path, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclelibPaths(new = base::sub(x = lib_path, pattern = \"/$|\\\\\\\\\\\\\\\\$\",  replacement = \"\", ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytes = FALSE), include.sitesub(x = lib_path, pattern = \"/$|\\\\\\\\\\\\\\\\$\",  replacement = \"\", ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useByteslibPaths(new = , include.sitelibPaths(new = , include.site = TRUE) > 50                                                                                                                                                                                                                                                                       .pack_and_function_check(fun = base::c(\"saferDev::arg_check\",  \"saferDev::is_function_here\", \"saferDev:::.functions_detect\",  \"saferDev:::.in_quotes_replacement\", \"saferDev:::.fun_args_pos\",  \"saferDev:::.extract_all_fun_names\", \"saferDev:::.in_parenthesis_replacement\",  \"saferDev:::.all_args_here_fill\"), lib_path = lib_path,  external_function_name = function_name, external_package_name = package_name) > 51                                                                                                                                                                                                                                                                                                                                                                                                                 c(\"saferDev::arg_check\",  \"saferDev::is_function_here\", \"saferDev:::.functions_detect\",  \"saferDev:::.in_quotes_replacement\", \"saferDev:::.fun_args_pos\",  \"saferDev:::.extract_all_fun_names\", \"saferDev:::.in_parenthesis_replacement\",  \"saferDev:::.all_args_here_fillc(\"x\") > 53                                                                                                                                                                                                                                                                  eval(expr = base::parse(text = base::paste0(\"base::c(base::missing(\",  base::paste0(mandat_args, collapse = \"),base::missing(\",  recycle0 = FALSE), \"))\", collapse = NULL, recycle0 = FALSE),  file = \"\", n = NULL, prompt = \"?\", keep.source = base::getOption(x = \"keep.source\",  default = NULL), srcfile = NULL, encoding = \"unknown\"),  envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL)) > 54                                                                                                                                                                                                                                                                                                                                                                     parse(text = base::paste0(\"base::c(base::missing(\",  base::paste0(mandat_args, collapse = \"),base::missing(\",  recycle0 = FALSE), \"))\", collapse = NULL, recycle0 = FALSE),  file = \"\", n = NULL, prompt = \"?\", keep.source = base::getOption(x = \"keep.source\",  default = NULL), srcfile = NULL, encoding = \"unknownpaste0(\"base::c(base::missing(\",  base::paste0(mandat_args, collapse = \"),base::missing(\",  recycle0 = FALSE), \"))\", collapse = NULL, recyclepaste0(mandat_args, collapse = \"),base::missing(\",  recyclegetOption(x = \"keep.source\",  defaultenvironment(funenvironment(funany(tempo, na.rm = FALSE) > 64                                                                                                                                                                                                                      paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nFOLLOWING ARGUMENT\", base::ifelse(test = base::sum(tempo,  na.rm = TRUE) > 1, yes = \"S HAVE\", no = \" HAS\"),  \" NO DEFAULT VALUE AND REQUIRE ONE:\\\\n\", base::paste0(mandat_args[tempo],  collapse = \"\\\\n\", recycle0 = FALSE), collapse = NULL,  recycle0 = FALSE) > 65                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_name) > 67                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo,  na.rm = TRUE) > 1, yes = \"S HAVE\", no = \" HAS\") > 69                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    sum(tempo,  na.rmpaste0(mandat_args[tempo],  collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycleexpression(argum_check <- base::c(argum_check,  tempo$problem), text_check <- base::c(text_check, tempo$text),  checked_arg_names <- base::c(checked_arg_names, tempo$object.namec(argum_check,  tempo$problemc(text_check, tempo$textc(checked_arg_names, tempo$object.name) > 77                                                                                                                                                                                                                                                                                                                                     arg_check(data = x, class = \"function\",  typeof = NULL, mode = NULL, length = NULL, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = TRUE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_check = FALSE) > 78                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              eval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(fun = NULL) > 81                                                                                                                                                                                                                                                                                                                               arg_check(data = export, class = \"vector\",  typeof = \"logical\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(fun = NULL) > 85                                                                                                                                                                                                                                                                                                                           arg_check(data = path_out, class = \"vector\",  typeof = \"character\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(fun = NULL) > 89                                                                                                                                                                                                                                                                                                                            arg_check(data = df_name, class = \"vector\",  typeof = \"character\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(fun = NULL) > 92                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      environment(fun = NULL) > 93                                                                                                                                                                                                                                                                                                                            arg_check(data = overwrite, class = \"vector\",  typeof = \"logical\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(funis.null(x = argum_checkany(argum_check, na.rm = TRUE) > 99                                                                                                                                                                                                                                                                                                                                                                                                                                                 stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  base::paste(text_check[argum_check], sep = \" \",  collapse = \"\\\\n\", recycle0 = FALSE), \"\\\\n\\\\n================\\\\n\\\\n\",  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) > 100                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  base::paste(text_check[argum_check], sep = \" \",  collapse = \"\\\\n\", recycle0 = FALSE), \"\\\\n\\\\n================\\\\n\\\\n\",  collapse = NULL, recyclepaste(text_check[argum_check], sep = \" \",  collapse = \"\\\\n\", recyclelength(x = arg_user_setting) > 103                                                                                                                                                                                                                                                                                                                                                                                                                                                     suppressWarnings(expr = base::sapply(X = base::lapply(X = arg_user_setting,  FUN = function(x) { base::is.na(x = x) }), FUN = function(x) { base::any(x = x, na.rm = FALSE) }, simplify = TRUE, USE.NAMES = TRUE), classes = \"warning\") > 104                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         sapply(X = base::lapply(X = arg_user_setting,  FUN = function(x) { base::is.na(x = x) }), FUN = function(x) { base::any(x = x, na.rm = FALSE) }, simplify = TRUE, USE.NAMES = TRUE) > 105                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     lapply(X = arg_user_setting,  FUN = function(x) { base::is.na(x = x) }) > 106                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                is.na(x = xany(x = x, na.rmlapply(X = arg_user_setting, FUN = function(x) { base::length(x = x) }length(x = xany(tempo_log, na.rm = FALSE) > 111                                                                                                                                                                                                                                 paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\",  no = \"THIS ARGUMENT\"), \" CANNOT JUST BE NA:\",  base::paste0(arg_names[tempo_log], collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_name) > 114                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\",  nosum(tempo_log,  na.rmpaste0(arg_names[tempo_log], collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) > 119                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclec(\"x\", \"export\", \"path_out\", \"df_name\",  \"overwrite\", \"safer_check\") > 121                                                                                                                                                                                                                                                                                                                                                                                                                                              sapply(X = base::lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }), FUN = function(x) { base::is.null(x = x) }, simplify = TRUE, USE.NAMES = TRUE) > 122                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inheritsparent.frame(nis.null(x = xany(tempo_log, na.rm = FALSE) > 127                                                                                                                                                                                                                             paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS\\\\n\", no = \"THIS ARGUMENT\\\\n\"),  base::paste0(tempo_arg[tempo_log], collapse = \"\\\\n\",  recycle0 = FALSE), \"\\\\nCANNOT BE NULL\", collapse = NULL,  recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS\\\\n\", no = \"THIS ARGUMENT\\\\nsum(tempo_log, na.rmpaste0(tempo_arg[tempo_log], collapse = \"\\\\n\",  recycle0 = FALSE) > 134                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recyclec(\"path_out\", \"df_name\", \"lib_path\") > 137                                                                                                                                                                                                                                                                                                                                               sapply(X = base::lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }), FUN = function(x) { if (base::is.null(x = x)) { base::return(TRUE) } else { base::all(base::mode(x = x) == \"character\", na.rm = TRUE) } }, simplify = TRUE, USE.NAMES = TRUE) > 138                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inheritsparent.frame(nis.null(x = xreturnall(base::mode(x = x) == \"character\", na.rmmode(x = xany(tempo_log, na.rm = TRUE) > 146                                                                                                                                                                                                       paste0(\"INTERNAL ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS ARE\", no = \"THIS ARGUMENT IS\"),  \" NOT MODE \\\\\"character\\\\\":\\\\n\", base::paste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recycle0 = FALSE), collapse = NULL,  recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS ARE\", nosum(tempo_log, na.rmpaste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE) > 155                                                                                                                                                                                                                                                                                                                                                                                                                                 sapply(X = base::lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }), FUN = function(x) { base::any(x == \"\", na.rm = FALSE) }, simplify = TRUE, USE.NAMES = TRUE) > 156                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inheritsparent.frame(nany(x == \"\", na.rmany(tempo_log, na.rm = TRUE) > 161                                                                                                                                                                                                                      paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\\\\n\",  no = \"THIS ARGUMENT\\\\n\"), base::paste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recycle0 = FALSE), \"\\\\nCANNOT CONTAIN \\\\\"\\\\\"\",  collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\\\\n\",  no = \"THIS ARGUMENT\\\\nsum(tempo_log,  na.rmpaste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclecoptionsoptions(warning.length = 8170) > 173                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       is.null(x = lib_pathall(base::dir.exists(paths = lib_path), na.rmdir.exists(paths = lib_path) > 176                                                                                                                                                                                                                                                                                                   paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS:\\\\n\",  base::paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(lib_path, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycleall(base::dir.exists(paths = path_out), na.rmdir.exists(paths = path_out) > 185                                                                                                                                                                                                                                                                                                   paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE path_out ARGUMENT DOES NOT EXISTS:\\\\n\",  base::paste(path_out, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)) > 187                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   is.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(path_out, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclegrepl(x = path_out, pattern = \"/$\", ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytessub(pattern = \"/$\", replacement = \"\",  x = path_out, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytesgrepl(x = path_out, pattern = \"\\\\\\\\\\\\\\\\$\",  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytessub(pattern = \"\\\\\\\\\\\\\\\\$\", replacement = \"\",  x = path_out, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytesdir.exists(paths = path_out) > 197                                                                                                                                                                                                                                                                                                                                                                paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE path_out ARGUMENT DOES NOT EXISTS:\\\\n\",  path_out, collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclefile.exists(base::paste0(path_out, \"/\",  df_name, collapse = NULL, recyclepaste0(path_out, \"/\",  df_name, collapse = NULL, recycle0 = FALSE) > 205                                                                                                                                                                                                                                                                                                                   paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nFILE NAME ALREADY EXISTS AT THE INDICATED PATH:\\\\n\",  base::paste0(path_out, \"/\", df_name, collapse = NULL,  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste0(path_out, \"/\", df_name, collapse = NULL,  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycledeparse(expr = arg_user_setting$x,  width.cutoff = 60L, backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"), nlinesc(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributespaste0(path_out, \"/\", df_name, collapse = NULL,  recyclefunctions_detect(x = x, arg_user_setting = arg_user_setting,  function_name = function_name, package_name = package_namepaste(out$code, collapse = \" \", recycle0 = FALSE,  sepgrepl(x = fun_1_line, pattern = reserved_words,  ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE) > 218                                                                                                                                                                                                                                                                                                                                                                                                                    paste0(\"(\", warn_count, \") THE RESERVED WORD \\\\\"\",  base::paste(reserved_words, collapse = \" \", recycle0 = FALSE),  \"\\\\\" HAS BEEN DETECTED IN THE CODE OF THE INPUT FUNCTION\\\\nWHICH COULD HAMPER THE ACCURACY OF THE OUTPUT TABLE\",  collapse = NULL, recyclepaste0(base::ifelse(test = base::is.null(x = warn),  yes = tempo_warn, no = base::paste0(warn, \"\\\\n\\\\n\",  tempo_warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycleifelse(test = base::is.null(x = warn),  yes = tempo_warn, no = base::paste0(warn, \"\\\\n\\\\n\",  tempo_warn, collapse = NULL, recycleis.null(x = warnpaste0(warn, \"\\\\n\\\\n\",  tempo_warn, collapse = NULL, recyclecumsum(x = base::nchar(x = out$code,  type = \"chars\", allowNA = FALSE, keepnchar(x = out$code,  type = \"chars\", allowNA = FALSE, keepc(0, cum_nchar_code_line[-base::length(x = cum_nchar_code_linelength(x = cum_nchar_code_line) > 228                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        .in_quotes_replacement(string = fun_1_line,  pattern = \"\\\\\\\\)\", no_regex_pattern = \")\", replacement = \" \",  perl = TRUE, function_name = function_name, package_name = package_name) > 229                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                .in_quotes_replacement(string = fun_1_line_replace,  pattern = \"\\\\\\\\(\", no_regex_pattern = \"(\", replacement = \" \",  perl = TRUE, function_name = function_name, package_name = package_namesort(x = base::c(pos_rep, tempo$pos), decreasingc(pos_rep, tempo$poslapply(X = fun_names,  FUN = function(x) { base::lapply(X = x, FUN = function(y) { NULL }) }lapply(X = x, FUN = function(y) { NULL }length(x = fun_namesas.integer(x = base::sub(pattern = \"^c\",  replacement = \"\", x = base::names(x = fun_names)[i1],  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytessub(pattern = \"^c\",  replacement = \"\", x = base::names(x = fun_names)[i1],  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytesnames(x = fun_nameswhich(x = code_line_nb %in% tempo_pos_in_code,  arr.ind = FALSE, useNameslength(x = fun_names[[inchar(x = fun_names[[i1]][i2],  type = \"chars\", allowNA = FALSE, keepsubstr(x = fun_1_line_replace,  start = fun_pos_start, stop = fun_pos_stop) > 242                                                                                                                                                                                                                                                                                                                                                                                         paste0(\"INTERNAL ERROR 2 IN \",  function_name, \" OF THE \", package_name, \" PACKAGE\\\\ntempo_fun MUST BE IDENTICAL TO fun_names[[i1]][i2]\\\\n\\\\ntempo_fun: \",  tempo_fun, \"\\\\n\\\\nfun_names[[i1]][i2]: \", fun_names[[i1]][i2],  \"\\\\n\\\\ni1: \", i1, \"\\\\n\\\\ni2: \", i2, collapse = NULL,  recycle0 = FALSE) > 243                                                                                                                                                                                                                                                                                                       stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) > 244                                                                                                                                                                                                                                                                                                                                                  paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE) > 245                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nosubstr(x = fun_1_line_replace,  start = fun_pos_stop + 1, stop = base::nchar(x = fun_1_line_replace,  type = \"chars\", allowNA = FALSE, keepnchar(x = fun_1_line_replace,  type = \"chars\", allowNA = FALSE, keepgrepl(x = tempo_str_after, pattern = \"^[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\",  ignore.case = FALSE, perl = TRUE, fixed = FALSE,  useBytes = FALSE) > 252                                                                                                                                                                                                                                                                                                                                                                                                                                                                          .fun_args_pos(text = fun_1_line_replace,  pattern = base::paste0(fun_names[[i1]][i2],  \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL, recycle0 = FALSE),  function_name = function_name, package_name = package_namepaste0(fun_names[[i1]][i2],  \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL, recyclesubstr(x = fun_1_line_replace,  start = 1, stop = fun_pos_startgrepl(x = tempo_str_before,  pattern = \"\\\\\\\\$ *$\", ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytessubstr(x = fun_1_line_replace, start = 1,  stop = fun_pos_start - 1) > 257                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  paste(base::rep(x = \" \",  fun_pos_start - 1), collapse = \"\", recycle0 = FALSE,  seprep(x = \" \",  fun_pos_startsubstr(x = fun_1_line,  start = tempo_pos$begin_fun, stop = tempo_pos$endsubstr(x = fun_1_line,  start = tempo_pos$begin + 1, stop = tempo_pos$endis.null(x = tempo_pos$middle_bracket_posunlist(x = tempo_pos$middle_bracket_pos,  recursive = TRUE, use.namessubstr(x = fun_1_line_replace, start = 1,  stop = tempo_pos$beginpaste(base::rep(x = \" \",  tempo_pos$begin - 1), collapse = \"\", recycle0 = FALSE,  seprep(x = \" \",  tempo_pos$begin - 1) > 266                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                lapply(X = fun_names, FUN = function(x) { base::lapply(X = x, FUN = function(y) { NULL }) }lapply(X = x, FUN = function(y) { NULL }length(x = fun_nameslength(x = fun_names[[ipaste0(fun_names[[i1]][i2], \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\",  collapse = NULL, recyclegrepl(x = arg_string_for_col3[[i1]][i2],  pattern = pattern2, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytes = FALSE) > 272                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    .in_quotes_replacement(string = arg_string_for_col3[[i1]][i2],  pattern = \"\\\\\\\\(\", no_regex_pattern = \"(\", replacement = \" \",  perl = TRUE, function_name = function_name,  package_name = package_name) > 273                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    .in_quotes_replacement(string = tempo1$string,  pattern = \"\\\\\\\\)\", no_regex_pattern = \")\", replacement = \" \",  perl = TRUE, function_name = function_name,  package_name = package_namefun_args_pos(text = tempo2$string,  pattern = pattern2, function_name = function_name,  package_name = package_nameis.null(x = tempo_pos$middle_bracket_posunlist(x = tempo_pos$middle_bracket_pos,  recursive = TRUE, use.names = TRUE) > 277                                                                                                                                                                                                                                                                                                                                                                                                                                     as.vector(x = base::unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE),  mode = \"any\") > 278                                                                                                                                                                                                                                                                                                                                                                                                                                                                         unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.namesmapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE) > 280                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             rep(x = y, base::length(x = xlength(x = x) > 282                                                                                                                                                                                                                                                                                                                                                                                                                                     as.vector(x = base::unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE),  mode = \"any\") > 283                                                                                                                                                                                                                                                                                                                                                                                                                                                                         unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.namesmapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE) > 285                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             rep(x = y, base::length(x = xlength(x = xas.vector(x = base::unlist(x = fun_names, recursive = TRUE,  use.names = TRUE), mode = \"anyunlist(x = fun_names, recursive = TRUE,  use.namesas.vector(x = base::unlist(x = arg_string_for_col3,  recursive = TRUE, use.names = TRUE), mode = \"anyunlist(x = arg_string_for_col3,  recursive = TRUE, use.names = TRUE) > 291                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           as.vector(x = base::unlist(x = fun_names_pos,  recursive = TRUE, use.names = TRUE), mode = \"any\") > 292                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              unlist(x = fun_names_pos,  recursive = TRUE, use.namesdo.call(what = base::c, args = mid_bracket_pos_in_col3,  quote = FALSE, envir = base::parent.frame(nparent.frame(nlapply(X = middle_bracket,  FUN = function(x) { if (!base::is.null(x = x)) { x[base::seq(1, base::length(x = x), by = 2)] } else { NULL } }is.null(x = xseq(1, base::length(x = x), bylength(x = x) > 299                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                lapply(X = middle_bracket,  FUN = function(x) { if (!base::is.null(x = x)) { x[base::seq(2, base::length(x = x), by = 2)] } else { NULL } }is.null(x = xseq(2, base::length(x = x), bylength(x = xlength(x = collength(x = collength(x = col1) > 306                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            length(x = collength(x = collength(x = collength(x = collength(x = code_for_collength(x = collength(x = middle_bracket) > 313                                                                                                                                                                                                                                                          paste0(\"INTERNAL ERROR 3 IN \", function_name,  \" OF THE \", package_name, \" PACKAGE\\\\nLENGTHS OF col1 (\",  base::length(x = col1), \"), col2 (\", base::length(x = col2),  \"), col3 (\", base::length(x = col3), \"), col4 (\",  base::length(x = col4), \"), code_for_col (\", base::length(x = code_for_col),  \"), AND middle_bracket (\", base::length(x = middle_bracket),  \"), SHOULD BE EQUAL\\\\n\", collapse = NULL, recyclelength(x = collength(x = collength(x = collength(x = collength(x = code_for_collength(x = middle_bracket) > 326                                                                                                                                                                                                                                                                                                       stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) > 327                                                                                                                                                                                                                                                                                                                                                  paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE) > 328                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  no = \"\") > 332 as.vector(x = base::unlist(x = base::mapply(FUN = function(x,  y) { if (y != \"\") { if (base::grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytes = FALSE) | base::grepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE)) { base::return(FALSE) } else { base::return(TRUE) } } else { base::return(FALSE) } }, x = col2, y = col3, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE),  mode = \"any\") > 333                                     unlist(x = base::mapply(FUN = function(x,  y) { if (y != \"\") { if (base::grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytes = FALSE) | base::grepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE)) { base::return(FALSE) } else { base::return(TRUE) } } else { base::return(FALSE) } }, x = col2, y = col3, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE) > 334                                                                                           mapply(FUN = function(x,  y) { if (y != \"\") { if (base::grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytes = FALSE) | base::grepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE)) { base::return(FALSE) } else { base::return(TRUE) } } else { base::return(FALSE) } }, x = col2, y = col3, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE) > 335                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytespaste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recyclegrepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytespaste0(\"^\", reserved_words, \"$\",  collapse = NULL, recyclereturnreturnreturn(FALSE) > 342                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                any(tempo.log, na.rm = TRUE) > 343                                                                                                                                                                                                                                                                                                                                                         paste0(\"INTERNAL ERROR 4 IN \", function_name,  \" OF THE \", package_name, \" PACKAGE\\\\ncol3 MUST BE MADE OF STRINGS STARTING BY\\\\n\\\\\"<FUNCTION_NAME>[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\\\\\"\\\\nAND FINISHING BY\\\\\")\\\\\"\\\\nHERE IT IS:\\\\n\\\\n\",  base::paste(col3, collapse = \"\\\\n\", recycle0 = FALSE,  sep = \" \"), collapse = NULL, recyclepaste(col3, collapse = \"\\\\n\", recycle0 = FALSE,  sep = \" \") > 345                                                                                                                                                                                                                                                                                                       stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) > 346                                                                                                                                                                                                                                                                                                                                                  paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE) > 347                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  noany(tempo_log, na.rmlength(x = colcat(\"\\\\n\\\\nEVERYTHING SEEMS CLEAN\\\\n\\\\n\", file = \"\",  sep = \" \", fill = FALSE, labels = NULL, appendlength(x = col1) > 355                    paste0(\"ERROR IN \",  function_name, \" OF THE \", package_name, \" PACKAGE\\\\nCANNOT GET THE ARGUMENTS OF A FUNCTION THAT IS NOT ASSOCIATED TO ITS PACKAGE IN LINE \",  col1[i2], \":\\\\n\\\\n\", base::paste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\nPLEASE, RUN saferDev::colons_check(\",  arg_user_setting$x, \") FIRST,\\\\nADD THE MISSING <PACKAGE>::<FUNCTION> (OR <PACKAGE>:::<FUNCTION> FOR FUNCTION STARTING BY A DOT)\\\\nAND RERUN saferDev::all_args_here(\",  arg_user_setting$x, \")\", collapse = NULL, recyclepaste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, seppaste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE) > 358                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1) > 359                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              NOT_CONSIDERED > 360                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              NOT_CONSIDERED > 361                                                                                                                                                                                                                                                                                           stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) > 362                                                                                                                                                                                                                                                                                                                                     paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE) > 363                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nosubstr(x = code_for_col[i2],  start = col4[i2] - 2, stop = col4[i2] - 1) > 368                                                                                                                                                                                                                                                                                           stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) > 369                                                                                                                                                                                                                                                                                                                                     paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE) > 370                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warn) > 372                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nosubstr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1) > 375                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      .extract_all_fun_names(text = tempo_string,  pattern = \"[a-zA-Z][a-zA-Z0-9.]*:{2,3}is_function_here(fun = base::paste0(tempo_package_name_colons,  col2[i2], collapse = NULL, recycle0 = FALSE),  lib_path = NULL, safer_checkpaste0(tempo_package_name_colons,  col2[i2], collapse = NULL, recyclesub(pattern = \":+$\",  replacement = \"\", x = tempo_package_name_colons,  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytesexists(x = col2[i2], where = -1,  envir = base::getNamespace(name = tempo_package_name),  frame = NULL, mode = \"any\", inheritsgetNamespace(name = tempo_package_nameget(x = col2[i2], envir = base::asNamespace(ns = tempo_package_name,  base.OK = TRUE), mode = \"function\", inherits = FALSE,  posasNamespace(ns = tempo_package_name,  base.OK = TRUE) > 383     paste0(\"ERROR IN \", function_name,  \" OF THE \", package_name, \" PACKAGE\\\\nCANNOT GET THE ARGUMENTS OF A FUNCTION THAT IS NOT CORRECTLY ASSOCIATED TO ITS PACKAGE IN LINE \",  col1[i2], \":\\\\n\\\\n\", base::paste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\nPLEASE, RUN utils::getAnywhere('\",  col2[i2], \"')$where FIRST,\\\\nCORRECT THE LINE \",  col1[i2], \" IN \", arg_user_setting$x, \"\\\\nSAVE AND REIMPORT \",  arg_user_setting$x, \"\\\\nAND RERUN saferDev::all_args_here(\",  arg_user_setting$x, \")\", collapse = NULL,  recycle0 = FALSE) > 384                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      paste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, seppaste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recyclesubstr(x = code_for_col[i2],  start = 1, stop = col4[istop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) > 390                                                                                                                                                                                                                                                                                                                                                 paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE) > 391                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nois.primitive(x = tempo_fun2) > 396                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     as.list(x = base::suppressWarnings(expr = base::formals(fun = base::args(name = col2[i2]),  envir = base::asNamespace(ns = tempo_package_name,  base.OK = TRUE)), classes = \"warningsuppressWarnings(expr = base::formals(fun = base::args(name = col2[i2]),  envir = base::asNamespace(ns = tempo_package_name,  base.OK = TRUE)), classes = \"warningformals(fun = base::args(name = col2[i2]),  envir = base::asNamespace(ns = tempo_package_name,  baseargs(name = col2[iasNamespace(ns = tempo_package_name,  baseall(base::typeof(x = tempo_fun2) %in%  base::c(\"special\", \"symbol\"), na.rmtypeof(x = tempo_func(\"special\", \"symbollength(x = tempo_all_argsas.list(x = base::formals(fun = col2[i2],  envir = base::asNamespace(ns = tempo_package_name,  baseformals(fun = col2[i2],  envir = base::asNamespace(ns = tempo_package_name,  baseasNamespace(ns = tempo_package_name,  baseis.null(x = arg_fullc(col5, \"NO_ARGS\") > 410                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 c(colc(colc(col8, \"\") > 413                                                                                                                                                                                                                                                                                            sapply(X = arg_full, FUN = function(x) { base::paste0(base::ifelse(test = base::all(base::typeof(x = x) ==  \"symbol\", na.rm = TRUE), yes = \"\", no = \" = \"),  base::deparse(expr = x, width.cutoff = 60L,  backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"),  nlines = -1L), collapse = NULL, recycle0 = FALSE) }, simplify = TRUE, USE.NAMES = TRUE) > 414                                                                                                                                                                                                                                                                                                                                                                                 paste0(base::ifelse(test = base::all(base::typeof(x = x) ==  \"symbol\", na.rm = TRUE), yes = \"\", no = \" = \"),  base::deparse(expr = x, width.cutoff = 60L,  backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"),  nlines = -1L), collapse = NULL, recycleifelse(test = base::all(base::typeof(x = x) ==  \"symbol\", na.rm = TRUE), yes = \"\", noall(base::typeof(x = x) ==  \"symbol\", na.rmtypeof(x = xdeparse(expr = x, width.cutoff = 60L,  backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"),  nlinesc(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributespaste(base::paste0(base::names(x = tempo),  tempo, collapse = NULL, recycle0 = FALSE),  collapse = \", \", recycle0 = FALSE, seppaste0(base::names(x = tempo),  tempo, collapse = NULL, recycle0 = FALSE) > 422                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            names(x = tempoc(col5, tempo) > 424                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           .in_quotes_replacement(string = tempo_col3,  pattern = \",\", no_regex_pattern = \",\", replacement = \" \",  perl = TRUE, function_name = function_name,  package_name = package_namelength(x = middle_bracket_open_in_col3[[ilength(x = middle_bracket_open_in_col3[[ilength(x = middle_bracket_close_in_col3[[i2]]) > 428                                                  paste0(\"INTERNAL ERROR 5 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\nmiddle_bracket_open_in_col3 AND middle_bracket_close_in_col3 MUST HAVE THE SAME LENGTH IN LOOP \",  i2, \"\\\\n\\\\nmiddle_bracket_open_in_col3 (\",  base::length(x = middle_bracket_open_in_col3),  \"):\\\\n\", base::paste(middle_bracket_open_in_col3,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\nmiddle_bracket_close_in_col3 (\",  base::length(x = middle_bracket_close_in_col3),  \"):\\\\n\", base::paste(middle_bracket_close_in_col3,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\ni2:\\\\n\", i2, collapse = NULL, recyclelength(x = middle_bracket_open_in_colpaste(middle_bracket_open_in_col3,  collapse = \" \", recycle0 = FALSE, seplength(x = middle_bracket_close_in_colpaste(middle_bracket_close_in_col3,  collapse = \" \", recycle0 = FALSE, sep = \" \") > 435                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) > 436                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) > 437                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleifelse(test = warn_count >  1, yes = \"S\", nolength(x = middle_bracket_open_in_col3[[i2]]) > 442                                                                                                                                                                                                                                                                                                                                                                                               .in_parenthesis_replacement(string = tempo_col3,  pattern = \",\", no_regex_pattern = \",\",  replacement = \" \", perl = TRUE, open_pos = middle_bracket_open_in_col3[[i2]][i6],  close_pos = middle_bracket_close_in_col3[[i2]][i6],  function_name = function_name, package_name = package_namec(pos_rep2, tempo$pos) > 444                                                                                                                                                                                                                                                                                                                                                                                                                                                                           sub(pattern = base::paste0(\"^\",  col2[i2], \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL,  recycle0 = FALSE), replacement = \"\", x = tempo_col3,  ignore.case = FALSE, perl = TRUE, fixed = FALSE,  useBytespaste0(\"^\",  col2[i2], \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL,  recyclesub(pattern = \"\\\\\\\\)$\", replacement = \"\",  x = obs_args, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytesstrsplit(x = obs_args,  split = \",\", fixed = FALSE, perl = FALSE,  useBytesis.null(x = pos_rep2) > 449                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          nchar(x = col2[i2],  type = \"chars\", allowNA = FALSE, keepany(pos_rep2 <= 0, na.rm = TRUE) > 451                                                                                                                                                                                                                                                            paste0(\"INTERNAL ERROR 6 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\nPOSITIONS OF REMOVED COMMAS CANOT OR LESS\\\\n\\\\npos_rep2 (\",  base::length(x = pos_rep2), \"):\\\\n\", base::paste(pos_rep2,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\nARGUMENT STRING obs_args:\\\\n\", base::paste(obs_args,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\ni2:\\\\n\", i2, collapse = NULL, recyclelength(x = pos_reppaste(pos_rep2,  collapse = \" \", recycle0 = FALSE, seppaste(obs_args,  collapse = \" \", recycle0 = FALSE, sep = \" \") > 456                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) > 457                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) > 458                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleifelse(test = warn_count >  1, yes = \"S\", nolength(x = tempo_splitnchar(x = tempo_split[i6], type = \"chars\",  allowNA = FALSE, keepany(base::is.na(x = tempo_log),  na.rmis.na(x = tempo_log) > 466                                                                                                                                                                                                                                                                                                                                                                                                                                                                          paste0(\"INTERNAL ERROR 7 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\ntempo_log CONTAINS NA:\\\\n\",  base::paste0(tempo_log, collapse = \" \",  recycle0 = FALSE), collapse = NULL,  recyclepaste0(tempo_log, collapse = \" \",  recycle0 = FALSE) > 468                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) > 469                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) > 470                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleifelse(test = warn_count >  1, yes = \"S\", noany(tempo_log, na.rmlength(x = tempo_logsubstr(x = tempo_split[i6],  start = pos_rep2[i7], stop = pos_rep2[inchar(x = tempo_split[i6],  type = \"chars\", allowNA = FALSE, keepnames(x = arg_fulllength(x = tempo_splitlength(x = arg_full_namesany(three_dots_log, na.rm = TRUE) > 482                                                                                                  paste0(\"INTERNAL ERROR 8 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\nLENGTH OF tempo_split MUST LOWER OR EQUAL TO LENGTH OF arg_full_names IF ... IS NOT AN ARGUMENT OF THE FUNCTION\\\\n\\\\nFUNCTION: \",  col2[i2], \"\\\\n\\\\ntempo_split (\", base::length(x = tempo_split),  \"):\\\\n\", base::paste(tempo_split, collapse = \"\\\\n\",  recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\narg_full_names (\",  base::length(x = arg_full_names), \"):\\\\n\",  base::paste(arg_full_names, collapse = \"\\\\n\",  , recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\ni2:\\\\n\",  i2, collapse = NULL, recyclelength(x = tempo_splitpaste(tempo_split, collapse = \"\\\\n\",  recycle0 = FALSE, seplength(x = arg_full_names) > 488                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     paste(arg_full_names, collapse = \"\\\\n\",  , recycle0 = FALSE, sep = \" \") > 489                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) > 490                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) > 491                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycleis.null(x = warn) > 493                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycleifelse(test = warn_count > 1,  yes = \"S\", no = \"\") > 495                                                                                                                                                                                                                                                                                                                                                      .all_args_here_fill(arg_full = arg_full,  arg_full_names = arg_full_names, tempo_split = tempo_split,  three_dots_log = three_dots_log, i2 = i2,  col1_i2 = col1[i2], col2_i2 = col2[i2], arg_user_setting_x = arg_user_setting$x,  function_name = function_name, package_name = package_name,  warn = warn, warn_count = warn_countc(col6, tempo_out$colc(col7, tempo_out$colc(col8, tempo_out$colc(colc(colc(colc(col8, \"\") > 503                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           all(col8 %in% base::c(\"\", \"GOOD\"), na.rmcpaste0(\"INSIDE \", base::as.character(x = out$arg_user_setting$x),  \"(), EVERYTHING SEEMS CLEAN\", collapse = NULL, recycleas.character(x = out$arg_user_setting$xpaste0(\"RESULT EXPORTED IN\\\\n\",  path_out, \"\\\\nBUT \", tempo.cat, collapse = NULL,  recycle0 = FALSE) > 508                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           paste0(\"AFTER RUNNING \", function_name,  \" OF THE \", package_name, \" PACKAGE:\\\\n\", tempo.cat,  collapse = NULL, recycle0 = FALSE) > 509                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   on.exit(expr = base::cat(base::paste0(\"\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE), file = \"\",  sep = \" \", fill = FALSE, labels = NULL, append = FALSE),  add = TRUE, aftercat(base::paste0(\"\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE), file = \"\",  sep = \" \", fill = FALSE, labels = NULL, appendpaste0(\"\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE) > 512                                                                                                                                                                                                                                                                                                                                                                                                                 data.frame(LINE_NB = col1, FUN_NAME = col2,  FUN_ARGS = col3, FUN_POS = col4, DEF_ARGS = col5, MISSING_ARG_NAMES = col6,  MISSING_ARGS = col7, STATUS = col8, row.names = NULL,  check.rows = FALSE, check.names = TRUE, fix.empty.names = TRUE,  stringsAsFactors = FALSE) > 513                                                                                                                                                                                                                                                                                                                                                                                                                                                                     write.table(x = output, file = path_out, row.names = FALSE,  col.names = TRUE, append = FALSE, quote = FALSE,  sep = \"\\\\t\", eol = \"\\\\n\", na = \"\", dec = \".\", qmethod = base::c(\"escape\",  \"double\"), fileEncodingc(\"escape\",  \"double\") > 515                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              return(outputis.null(x = warn) > 517                                                                                                                                                                                                                                                                                                     on.exit(expr = base::warning(base::paste0(\"FROM \",  function_name, base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\\\\n\", warn, collapse = NULL, recycle0 = FALSE),  call. = FALSE, immediate. = FALSE, noBreaks. = FALSE,  domain = NULL), add = TRUE, after = TRUE) > 518                                                                                                                                                                                                                                                                                                                                                     warning(base::paste0(\"FROM \",  function_name, base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\\\\n\", warn, collapse = NULL, recycle0 = FALSE),  call. = FALSE, immediate. = FALSE, noBreaks. = FALSE,  domain = NULL) > 519                                                                                                                                                                                                                                                                                                                                                                                                                                           paste0(\"FROM \",  function_name, base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\\\\n\", warn, collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleon.exit(expr = base::options(warning.length = ini_warning_length),  add = TRUE, afteroptions(warning.length = ini_warning_length) >     FUN_POS > 1        25 > 2        43 > 3        73 > 4       100 > 5        14 > 6        37 > 7        36 > 8        24 > 9        20 > 10       36 > 11       56 > 12       83 > 13       15 > 14       13 > 15       40 > 16        7 > 17       44 > 18       54 > 19       20 > 20        7 > 21       27 > 22       22 > 23        7 > 24        7 > 25       18 > 26       12 > 27       12 > 28       12 > 29       22 > 30       20 > 31        7 > 32       27 > 33       22 > 34        7 > 35        7 > 36       18 > 37       17 > 38       27 > 39       20 > 40        7 > 41       27 > 42       22 > 43        7 > 44        7 > 45       18 > 46        8 > 47       30 > 48       20 > 49       20 > 50       12 > 51       49 > 52       22 > 53       16 > 54       34 > 55       53 > 56       67 > 57       75 > 58        7 > 59       47 > 60       56 > 61       15 > 62       55 > 63       11 > 64       20 > 65        7 > 66       27 > 67       22 > 68       31 > 69       51 > 70       47 > 71        7 > 72       18 > 73       13 > 74       45 > 75       37 > 76       28 > 77       20 > 78        7 > 79       37 > 80       16 > 81       20 > 82        7 > 83       37 > 84       16 > 85       20 > 86        7 > 87       37 > 88       16 > 89       20 > 90        7 > 91       37 > 92       16 > 93       20 > 94        7 > 95       37 > 96       16 > 97       12 > 98       11 > 99        7 > 100      18 > 101       7 > 102      11 > 103      20 > 104      50 > 105      67 > 106       7 > 107       7 > 108       7 > 109       7 > 110      11 > 111      20 > 112       7 > 113      27 > 114      22 > 115      13 > 116      33 > 117       7 > 118       7 > 119      18 > 120      20 > 121      20 > 122      37 > 123       7 > 124      43 > 125       7 > 126      11 > 127      20 > 128       7 > 129      27 > 130      22 > 131      13 > 132      33 > 133       7 > 134       7 > 135      18 > 136      20 > 137      21 > 138      38 > 139       7 > 140      43 > 141      11 > 142       7 > 143       7 > 144      17 > 145      11 > 146      20 > 147       7 > 148      27 > 149      22 > 150      13 > 151      33 > 152      37 > 153       7 > 154      18 > 155      20 > 156      37 > 157       7 > 158      43 > 159       7 > 160      11 > 161      20 > 162       7 > 163      27 > 164      22 > 165      13 > 166      33 > 167      32 > 168       7 > 169      18 > 170      25 > 171      29 > 172       7 > 173      12 > 174      12 > 175      22 > 176      20 > 177       7 > 178      27 > 179      22 > 180       7 > 181       7 > 182      18 > 183      12 > 184      22 > 185      20 > 186       7 > 187      27 > 188      22 > 189       7 > 190       7 > 191      18 > 192      11 > 193      19 > 194      16 > 195      19 > 196      12 > 197      20 > 198       7 > 199      27 > 200      22 > 201       7 > 202      18 > 203      11 > 204      29 > 205      20 > 206       7 > 207      27 > 208      22 > 209       7 > 210       7 > 211      18 > 212      29 > 213      55 > 214      19 > 215      19 > 216      21 > 217      11 > 218      21 > 219       7 > 220      15 > 221      28 > 222      48 > 223      30 > 224      30 > 225      47 > 226      30 > 227      62 > 228      21 > 229      21 > 230      18 > 231      33 > 232      40 > 233       7 > 234      20 > 235      28 > 236      49 > 237      29 > 238      22 > 239      20 > 240      39 > 241      20 > 242      20 > 243       7 > 244      18 > 245      46 > 246      66 > 247      22 > 248       7 > 249      26 > 250      40 > 251      11 > 252      25 > 253      17 > 254      27 > 255      20 > 256       7 > 257      36 > 258      48 > 259      40 > 260      31 > 261      12 > 262      52 > 263       7 > 264      38 > 265      50 > 266      34 > 267       7 > 268      20 > 269      20 > 270      19 > 271      11 > 272      22 > 273      22 > 274      25 > 275      12 > 276      46 > 277      23 > 278      43 > 279      60 > 280       7 > 281      24 > 282      15 > 283      35 > 284      52 > 285       7 > 286      24 > 287      15 > 288      35 > 289      15 > 290      35 > 291      15 > 292      35 > 293      25 > 294      30 > 295      38 > 296      12 > 297       9 > 298      22 > 299      39 > 300      12 > 301       9 > 302      22 > 303      13 > 304      39 > 305       7 > 306      33 > 307      58 > 308       7 > 309      32 > 310      58 > 311       7 > 312      33 > 313      20 > 314      49 > 315       7 > 316      29 > 317      44 > 318       5 > 319      20 > 320      42 > 321       7 > 322      29 > 323      52 > 324       9 > 325      34 > 326       7 > 327      18 > 328      35 > 329      55 > 330      22 > 331       7 > 332      20 > 333      40 > 334      57 > 335      11 > 336      40 > 337      42 > 338      17 > 339       7 > 340       7 > 341       7 > 342      11 > 343      20 > 344       7 > 345       7 > 346      18 > 347      35 > 348      55 > 349      22 > 350       7 > 351      11 > 352      12 > 353       7 > 354      20 > 355      31 > 356      26 > 357      38 > 358      51 > 359      58 > 360     150 > 361       7 > 362      18 > 363       7 > 364      27 > 365      22 > 366       7 > 367      23 > 368       7 > 369      18 > 370       7 > 371      27 > 372      22 > 373       7 > 374      23 > 375      41 > 376      11 > 377      40 > 378      29 > 379      20 > 380      15 > 381      21 > 382      53 > 383      20 > 384      26 > 385      38 > 386      51 > 387      55 > 388      44 > 389       7 > 390      18 > 391      46 > 392      66 > 393      22 > 394       7 > 395      11 > 396      25 > 397      43 > 398      73 > 399      93 > 400      15 > 401      11 > 402      21 > 403       7 > 404      11 > 405      19 > 406      37 > 407      15 > 408      11 > 409      15 > 410      15 > 411      15 > 412      15 > 413      16 > 414       7 > 415      20 > 416      40 > 417      50 > 418       7 > 419      35 > 420      16 > 421      28 > 422      41 > 423      15 > 424      21 > 425      11 > 426      11 > 427       7 > 428      20 > 429       9 > 430       7 > 431      15 > 432       5 > 433       7 > 434      15 > 435       7 > 436      18 > 437       7 > 438      27 > 439      22 > 440       7 > 441      20 > 442      21 > 443      19 > 444      19 > 445      39 > 446      19 > 447      22 > 448      12 > 449      30 > 450      11 > 451      20 > 452      56 > 453       7 > 454      43 > 455      42 > 456       7 > 457      18 > 458       7 > 459      27 > 460      22 > 461       7 > 462      20 > 463       7 > 464      11 > 465      21 > 466      20 > 467       7 > 468       7 > 469      18 > 470       7 > 471      27 > 472      22 > 473       7 > 474      11 > 475      20 > 476       7 > 477      30 > 478      25 > 479      11 > 480      43 > 481       8 > 482      20 > 483      15 > 484      38 > 485      15 > 486      35 > 487       7 > 488       7 > 489       7 > 490      18 > 491       7 > 492      27 > 493      22 > 494       7 > 495      25 > 496      15 > 497      15 > 498      15 > 499      15 > 500      15 > 501      15 > 502      15 > 503      11 > 504      31 > 505      20 > 506      44 > 507      20 > 508      20 > 509       7 > 510      28 > 511      38 > 512      17 > 513       8 > 514      61 > 515       7 > 516      12 > 517       7 > 518      28 > 519      42 > 520      22 > 521      42 > 522      22 > 523       7 > 524      28 >                                                                                                                                                                                                                                                                                                          DEF_ARGS > 1                                                                                                                                                                                                                                                                                                          x, ... > 2                                                                                                                                                                                            definition = sys.function(sys.parent()), call = sys.call(sys.parent()), expand.dots = TRUE, envir = parent.frame(2L) > 3                                                                                                                                                                                                                                                                                                      which = 0L > 4                                                                                                                                                                                                                                                                                                          n = 1L > 5                                                                                                                                                                                                                                                                                                      which = 0L > 6                                                                                                                                                                                                                                                                                                          n = 1L > 7                                                                                                                                                                                                                                                                                                           n = 1 > 8                                                                                                                                                                                                                                                                          ..., collapse = NULL, recycle0 = FALSE > 9                                                                                                                                                                                                                                                                                                               x > 10                                                                                                                                                                                                                                                       fun = sys.function(sys.parent()), envir = parent.frame() > 11                                                                                                                                                                                                                                                                                                     which = 0L > 12                                                                                                                                                                                                                                                                                                         n = 1L > 13                                                                                                                                                                                                                                                                                                          n = 1 > 14                                                                                                                                                                                                                                                                                             ..., na.rmx > 17                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE > 18                                                                                                                                                                                                                                                                                                              x > 19                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 20                                                                                                                                                                                                                                                                                                  test, yes, no > 21                                                                                                                                                                                                                                                                                                              x > 22                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 23                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 24                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL > 25                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 26                                                                                                                                                                                                                                                                  external_function_name, external_package_name > 27                                                                                                                                                                                                                                                                                                              x > 28                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE > 29                                                                                                                                                                                                                                                                                                              x > 30                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 31                                                                                                                                                                                                                                                                                                  test, yes, no > 32                                                                                                                                                                                                                                                                                                              x > 33                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 34                                                                                                                                                                                                                                                              ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 35                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL > 36                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 37                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE > 38                                                                                                                                                                                                                                                                                                          paths > 39                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 40                                                                                                                                                                                                                                                                                                  test, yes, no > 41                                                                                                                                                                                                                                                                                                              x > 42                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 43                                                                                                                                                                                                                                                              ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 44                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL > 45                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 46                                                                                                                                                                                                                                                                                       new, include.site = TRUE > 47                                                                                                                                                                                                                    pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 48                                                                                                                                                                                                                                                                                       new, include.site = TRUE > 49                                                                                                                                                                                                                                                                                       new, include.site = TRUE > 50                                                                                                                                                                                                                                                   fun, lib_path, external_function_name, external_package_nameexpr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() > 54                                                                                                                                                                                   file = \"\", n = NULL, text = NULL, prompt = \"?\", keep.source = getOption(\"keep.source\"), srcfile = NULL, encoding = \"unknown\" > 55                                                                                                                                                                                                                                                                         ..., collapse = NULL, recyclecollapse = NULL, recycle0 = FALSE > 59                                                                                                                                                                                                                                                                                                                > 60                                                                                                                                                                                                                                                                                              x, default = NULL > 61                                                                                                                                                                                                                                                                                                     fun = NULL > 62                                                                                                                                                                                                                                                                                                     fun = NULL > 63                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE > 64                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 65                                                                                                                                                                                                                                                                                                  test, yes, no > 66                                                                                                                                                                                                                                                                                                              x > 67                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 68                                                                                                                                                                                                                                                                                                  test, yes, no > 69                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE > 70                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE > 71                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL > 72                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycledata, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE > 78                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() > 79                                                                                                                                                                                                                                                                                                     fun = NULL > 80                                                                                                                                                                                                                                                                                                     fun = NULL > 81  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE > 82                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() > 83                                                                                                                                                                                                                                                                                                     fun = NULL > 84                                                                                                                                                                                                                                                                                                     fun = NULL > 85  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE > 86                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() > 87                                                                                                                                                                                                                                                                                                     fun = NULL > 88                                                                                                                                                                                                                                                                                                     fun = NULL > 89  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE > 90                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() > 91                                                                                                                                                                                                                                                                                                     fun = NULL > 92                                                                                                                                                                                                                                                                                                     fun = NULL > 93  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE > 94                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() > 95                                                                                                                                                                                                                                                                                                     fun = NULL > 96                                                                                                                                                                                                                                                                                                     fun = NULL > 97                                                                                                                                                                                                                                                                                                              x > 98                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE > 99                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL > 100                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 101                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 102                                                                                                                                                                                                                                                                                                             x > 103                                                                                                                                                                                                                                                                                     expr, classes = \"warning\" > 104                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE > 105                                                                                                                                                                                                                                                                                                   X, FUN, ... > 106                                                                                                                                                                                                                                                                                                             x > 107                                                                                                                                                                                                                                                                                            ..., na.rmx > 110                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 111                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 112                                                                                                                                                                                                                                                                                                 test, yes, no > 113                                                                                                                                                                                                                                                                                                             x > 114                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 115                                                                                                                                                                                                                                                                                                 test, yes, no > 116                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 117                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 118                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 119                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 120                                                                                                                                                                                                                                                                                                           ... > 121                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE > 122                                                                                                                                                                                                                                                                                                   X, FUN, ... > 123                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE > 124                                                                                                                                                                                                                                                                                                         n = 1 > 125                                                                                                                                                                                                                                                                                                             x > 126                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 127                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 128                                                                                                                                                                                                                                                                                                 test, yes, no > 129                                                                                                                                                                                                                                                                                                             x > 130                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 131                                                                                                                                                                                                                                                                                                 test, yes, no > 132                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 133                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 134                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 135                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 136                                                                                                                                                                                                                                                                                                           ... > 137                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE > 138                                                                                                                                                                                                                                                                                                   X, FUN, ... > 139                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE > 140                                                                                                                                                                                                                                                                                                         n = 1 > 141                                                                                                                                                                                                                                                                                                             xna.rm = FALSE > 144                                                                                                                                                                                                                                                                                                             x > 145                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 146                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 147                                                                                                                                                                                                                                                                                                 test, yes, no > 148                                                                                                                                                                                                                                                                                                             x > 149                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 150                                                                                                                                                                                                                                                                                                 test, yes, no > 151                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 152                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 153                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 154                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 155                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE > 156                                                                                                                                                                                                                                                                                                   X, FUN, ... > 157                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE > 158                                                                                                                                                                                                                                                                                                         n = 1 > 159                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 160                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 161                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 162                                                                                                                                                                                                                                                                                                 test, yes, no > 163                                                                                                                                                                                                                                                                                                             x > 164                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 165                                                                                                                                                                                                                                                                                                 test, yes, no > 166                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 167                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 168                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 169                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex > 174                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 175                                                                                                                                                                                                                                                                                                         paths > 176                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 177                                                                                                                                                                                                                                                                                                 test, yes, no > 178                                                                                                                                                                                                                                                                                                             x > 179                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 180                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 181                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 182                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 183                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 184                                                                                                                                                                                                                                                                                                         paths > 185                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 186                                                                                                                                                                                                                                                                                                 test, yes, no > 187                                                                                                                                                                                                                                                                                                             x > 188                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 189                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 190                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 191                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 192                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 193                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 194                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 195                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 196                                                                                                                                                                                                                                                                                                         paths > 197                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 198                                                                                                                                                                                                                                                                                                 test, yes, no > 199                                                                                                                                                                                                                                                                                                             x > 200                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 201                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 202                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclecollapse = NULL, recycle0 = FALSE > 205                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 206                                                                                                                                                                                                                                                                                                 test, yes, no > 207                                                                                                                                                                                                                                                                                                             x > 208                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 209                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 210                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 211                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 212                                                                                                                              expr, width.cutoff = 60L, backtick = mode(expr) %in% c(\"call\", \"expression\", \"(\", \"function\"), control = c(\"keepNA\", \"keepInteger\", \"niceNames\", \"showAttributes\"), nlines = -1L > 213                                                                                                                                                                                                                                                                                                           ... > 214                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 215                                                                                                                                                                                                                                                              x, arg_user_setting, function_name, package_name > 216                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 217                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 218                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclecollapse = NULL, recycle0 = FALSE > 221                                                                                                                                                                                                                                                                                                 test, yes, no > 222                                                                                                                                                                                                                                                                                                             x > 223                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 224                                                                                                                                                                                                                                                                                                             x > 225                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepx > 228                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name > 229                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name > 230                                                                                                                                                                                                                                                                                    x, decreasingx > 235                                                                                                                                                                                                                                                                                                        x, ... > 236                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 237                                                                                                                                                                                                                                                                                                             x > 238                                                                                                                                                                                                                                                                           x, arr.ind = FALSE, useNames = TRUE > 239                                                                                                                                                                                                                                                                                                             x > 240                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA > 241                                                                                                                                                                                                                                                                                                x, start, stop > 242                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 243                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 244                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 245                                                                                                                                                                                                                                                                                                 test, yes, no > 246                                                                                                                                                                                                                                                                                                             x > 247                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 248                                                                                                                                                                                                                                                                                                 test, yes, no > 249                                                                                                                                                                                                                                                                                                x, start, stop > 250                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA > 251                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 252                                                                                                                                                                                                                                                                    text, pattern, function_name, package_name > 253                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 254                                                                                                                                                                                                                                                                                                x, start, stop > 255                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 256                                                                                                                                                                                                                                                                                                x, start, stop > 257                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 258                                                                                                                                                                                                                                                                                                        x, ... > 259                                                                                                                                                                                                                                                                                                x, start, stop > 260                                                                                                                                                                                                                                                                                                x, start, stop > 261                                                                                                                                                                                                                                                                                                             x > 262                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 263                                                                                                                                                                                                                                                                                                x, start, stop > 264                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 265                                                                                                                                                                                                                                                                                                        xx > 269                                                                                                                                                                                                                                                                                                             x > 270                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 271                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 272                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name > 273                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name > 274                                                                                                                                                                                                                                                                    text, pattern, function_name, package_name > 275                                                                                                                                                                                                                                                                                                             x > 276                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 277                                                                                                                                                                                                                                                                                               x, mode = \"any\" > 278                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 279                                                                                                                                                                                                                                                  FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 280                                                                                                                                                                                                                                                                                                        x, ... > 281                                                                                                                                                                                                                                                                                                             x > 282                                                                                                                                                                                                                                                                                               x, mode = \"any\" > 283                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 284                                                                                                                                                                                                                                                  FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 285                                                                                                                                                                                                                                                                                                        x, ... > 286                                                                                                                                                                                                                                                                                                             x > 287                                                                                                                                                                                                                                                                                               x, mode = \"any\" > 288                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 289                                                                                                                                                                                                                                                                                               x, mode = \"any\" > 290                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 291                                                                                                                                                                                                                                                                                               x, mode = \"any\" > 292                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 293                                                                                                                                                                                                                                                             what, args, quote = FALSE, envir = parent.frame() > 294                                                                                                                                                                                                                                                                                                         n = 1 > 295                                                                                                                                                                                                                                                                                                   X, FUN, ... > 296                                                                                                                                                                                                                                                                                                             xxxx > 303                                                                                                                                                                                                                                                                                                             x > 304                                                                                                                                                                                                                                                                                                             x > 305                                                                                                                                                                                                                                                                                                             x > 306                                                                                                                                                                                                                                                                                                             x > 307                                                                                                                                                                                                                                                                                                             x > 308                                                                                                                                                                                                                                                                                                             x > 309                                                                                                                                                                                                                                                                                                             x > 310                                                                                                                                                                                                                                                                                                             x > 311                                                                                                                                                                                                                                                                                                             x > 312                                                                                                                                                                                                                                                                                                             x > 313                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclexxxxxx > 326                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 327                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 328                                                                                                                                                                                                                                                                                                 test, yes, no > 329                                                                                                                                                                                                                                                                                                             x > 330                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 331                                                                                                                                                                                                                                                                                                 test, yes, no > 332                                                                                                                                                                                                                                                                                               x, mode = \"any\" > 333                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE > 334                                                                                                                                                                                                                                                  FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE > 335                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 336                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 337                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 338                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 339                                                                                                                                                                                                                                                                                                       NO_ARGS > 340                                                                                                                                                                                                                                                                                                       NO_ARGS > 341                                                                                                                                                                                                                                                                                                       NO_ARGS > 342                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 343                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 344                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 345                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 346                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 347                                                                                                                                                                                                                                                                                                 test, yes, no > 348                                                                                                                                                                                                                                                                                                             x > 349                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 350                                                                                                                                                                                                                                                                                                 test, yes, no > 351                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 352                                                                                                                                                                                                                                                                                                             x > 353                                                                                                                                                                                                                                        ..., file = \"\", sep = \" \", fill = FALSE, labels = NULL, append = FALSE > 354                                                                                                                                                                                                                                                                                                             x > 355                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 356                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 357                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 358                                                                                                                                                                                                                                                                                                x, start, stopcall. = TRUE, domain = NULL > 362                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 363                                                                                                                                                                                                                                                                                                 test, yes, no > 364                                                                                                                                                                                                                                                                                                             x > 365                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 366                                                                                                                                                                                                                                                                                                 test, yes, no > 367                                                                                                                                                                                                                                                                                                x, start, stop > 368                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 369                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 370                                                                                                                                                                                                                                                                                                 test, yes, no > 371                                                                                                                                                                                                                                                                                                             x > 372                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 373                                                                                                                                                                                                                                                                                                 test, yes, no > 374                                                                                                                                                                                                                                                                                                x, start, stop > 375                                                                                                                                                                                                                                                                                                 text, pattern > 376                                                                                                                                                                                                                                                                      fun, lib_path = NULL, safer_check = TRUE > 377                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 378                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 379                                                                                                                                                                                  x, where = -1, envir = if (missing(frame)) as.environment(where) else sys.frame(frame), frame, mode = \"any\", inherits = TRUE > 380                                                                                                                                                                                                                                                                                                          name > 381                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE > 382                                                                                                                                                                                                                                                                                            ns, base.OK = TRUE > 383                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 384                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 385                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 386                                                                                                                                                                                                                                                                                                x, start, stopcall. = TRUE, domain = NULL > 390                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 391                                                                                                                                                                                                                                                                                                 test, yes, no > 392                                                                                                                                                                                                                                                                                                             x > 393                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 394                                                                                                                                                                                                                                                                                                 test, yes, no > 395                                                                                                                                                                                                                                                                                                             x > 396                                                                                                                                                                                                                                                                                                        x, ... > 397                                                                                                                                                                                                                                                                                     expr, classes = \"warning\" > 398                                                                                                                                                                                                                                                      fun = sys.function(sys.parent()), envir = parent.frame() > 399                                                                                                                                                                                                                                                                                                          name > 400                                                                                                                                                                                                                                                                                            ns, base.OK = TRUE > 401                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 402                                                                                                                                                                                                                                                                                                             xx > 405                                                                                                                                                                                                                                                                                                        x, ... > 406                                                                                                                                                                                                                                                      fun = sys.function(sys.parent()), envir = parent.frame() > 407                                                                                                                                                                                                                                                                                            ns, base.OK = TRUE > 408                                                                                                                                                                                                                                                                                                             xsimplify = TRUE, USE.NAMES = TRUE > 414                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 415                                                                                                                                                                                                                                                                                                 test, yes, no > 416                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 417                                                                                                                                                                                                                                                                                                             x > 418                                                                                                                              expr, width.cutoff = 60L, backtick = mode(expr) %in% c(\"call\", \"expression\", \"(\", \"function\"), control = c(\"keepNA\", \"keepInteger\", \"niceNames\", \"showAttributes\"), nlinessep = \" \", collapse = NULL, recycle0 = FALSE > 421                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 422                                                                                                                                                                                                                                                                                                             xstring, pattern, no_regex_pattern, replacement, perl, function_name, package_name > 425                                                                                                                                                                                                                                                                                                             x > 426                                                                                                                                                                                                                                                                                                             x > 427                                                                                                                                                                                                                                                                                                             x > 428                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex > 431                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 432                                                                                                                                                                                                                                                                                                               > 433                                                                                                                                                                                                                                                                                                             x > 434                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 435                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 436                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 437                                                                                                                                                                                                                                                                                                 test, yes, no > 438                                                                                                                                                                                                                                                                                                             x > 439                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 440                                                                                                                                                                                                                                                                                                 test, yes, no > 441                                                                                                                                                                                                                                                                                                             x > 442                                                                                                                                                                                                        string, pattern, no_regex_pattern, replacement, perl, open_pos, close_pos, function_name, package_namepattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 445                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 446                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE > 447                                                                                                                                                                                                                                                       x, split, fixed = FALSE, perl = FALSE, useBytes = FALSE > 448                                                                                                                                                                                                                                                                                                             x > 449                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA > 450                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 451                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 452                                                                                                                                                                                                                                                                                                               > 453                                                                                                                                                                                                                                                                                                             x > 454                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 455                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 456                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 457                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 458                                                                                                                                                                                                                                                                                                 test, yes, no > 459                                                                                                                                                                                                                                                                                                             x > 460                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 461                                                                                                                                                                                                                                                                                                 test, yes, no > 462                                                                                                                                                                                                                                                                                                             x > 463                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA > 464                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 465                                                                                                                                                                                                                                                                                                             x > 466                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 467                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 468                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 469                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 470                                                                                                                                                                                                                                                                                                 test, yes, no > 471                                                                                                                                                                                                                                                                                                             x > 472                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 473                                                                                                                                                                                                                                                                                                 test, yes, no > 474                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 475                                                                                                                                                                                                                                                                                                             x > 476                                                                                                                                                                                                                                                                                                x, start, stop > 477                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA > 478                                                                                                                                                                                                                                                                                                             x > 479                                                                                                                                                                                                                                                                                                             x > 480                                                                                                                                                                                                                                                                                                             x > 481                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE > 482                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex > 485                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recyclex > 488                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE > 489                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL > 490                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 491                                                                                                                                                                                                                                                                                                 test, yes, no > 492                                                                                                                                                                                                                                                                                                             x > 493                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 494                                                                                                                                                                                                                                                                                                 test, yes, no > 495                                                                                                                                                                arg_full, arg_full_names, tempo_split, three_dots_log, i2, col1_i2, col2_i2, arg_user_setting_x, function_name, package_name, warn, warn_countna.rmcollapse = NULL, recycle0 = FALSE > 506                                                                                                                                                                                                                                                                                                        x, ... > 507                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 508                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 509                                                                                                                                                                                                                                                                        expr = NULL, add = FALSE, after = TRUE > 510                                                                                                                                                                                                                                        ..., file = \"\", sep = \" \", fill = FALSE, labels = NULL, append = FALSE > 511                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 512                                                                                                                                                                                               ..., row.names = NULL, check.rows = FALSE, check.names = TRUE, fix.empty.names = TRUE, stringsAsFactors = FALSE > 513                                                                                                                              x, file = \"\", append = FALSE, quote = TRUE, sep = \" \", eol = \"\\\\n\", na = \"NA\", dec = \".\", row.names = TRUE, col.names = TRUE, qmethod = c(\"escape\", \"double\"), fileEncodingx > 517                                                                                                                                                                                                                                                                        expr = NULL, add = FALSE, after = TRUE > 518                                                                                                                                                                                                                                       ..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE, domain = NULL > 519                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 520                                                                                                                                                                                                                                                                                                 test, yes, no > 521                                                                                                                                                                                                                                                                                                             x > 522                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE > 523                                                                                                                                                                                                                                                                        expr = NULL, add = FALSE, after = TRUE > 524                                                                                                                                                                                                                                                                                                           ... >     MISSING_ARG_NAMES MISSING_ARGS STATUS > 1                                    GOOD > 2                                    GOOD > 3                                    GOOD > 4                                    GOOD > 5                                    GOOD > 6                                    GOOD > 7                                    GOOD > 8                                    GOOD > 9                                    GOOD > 10                                   GOOD > 11                                   GOOD > 12                                   GOOD > 13                                   GOOD > 14                                   GOOD > 15                                        > 16                                   GOOD > 17                                   GOOD > 18                                   GOOD > 19                                   GOOD > 20                                   GOOD > 21                                   GOOD > 22                                   GOOD > 23                                   GOOD > 24                                   GOOD > 25                                   GOOD > 26                                   GOOD > 27                                   GOOD > 28                                   GOOD > 29                                   GOOD > 30                                   GOOD > 31                                   GOOD > 32                                   GOOD > 33                                   GOOD > 34                                   GOOD > 35                                   GOOD > 36                                   GOOD > 37                                   GOOD > 38                                   GOOD > 39                                   GOOD > 40                                   GOOD > 41                                   GOOD > 42                                   GOOD > 43                                   GOOD > 44                                   GOOD > 45                                   GOOD > 46                                   GOOD > 47                                   GOOD > 48                                   GOOD > 49                                   GOOD > 50                                   GOOD > 51                                        > 52                                        > 53                                   GOOD > 54                                   GOOD > 55                                   GOOD > 56                                        > 57                                        > 58                                   GOOD > 59                                        > 60                                   GOOD > 61                                   GOOD > 62                                   GOOD > 63                                   GOOD > 64                                   GOOD > 65                                   GOOD > 66                                   GOOD > 67                                   GOOD > 68                                   GOOD > 69                                   GOOD > 70                                   GOOD > 71                                   GOOD > 72                                   GOOD > 73                                        > 74                                        > 75                                        > 76                                        > 77                                   GOOD > 78                                   GOOD > 79                                   GOOD > 80                                   GOOD > 81                                   GOOD > 82                                   GOOD > 83                                   GOOD > 84                                   GOOD > 85                                   GOOD > 86                                   GOOD > 87                                   GOOD > 88                                   GOOD > 89                                   GOOD > 90                                   GOOD > 91                                   GOOD > 92                                   GOOD > 93                                   GOOD > 94                                   GOOD > 95                                   GOOD > 96                                   GOOD > 97                                   GOOD > 98                                   GOOD > 99                                   GOOD > 100                                  GOOD > 101                                  GOOD > 102                                  GOOD > 103                                  GOOD > 104                                  GOOD > 105                                  GOOD > 106                                  GOOD > 107                                  GOOD > 108                                  GOOD > 109                                  GOOD > 110                                  GOOD > 111                                  GOOD > 112                                  GOOD > 113                                  GOOD > 114                                  GOOD > 115                                  GOOD > 116                                  GOOD > 117                                  GOOD > 118                                  GOOD > 119                                  GOOD > 120                                       > 121                                  GOOD > 122                                  GOOD > 123                                  GOOD > 124                                  GOOD > 125                                  GOOD > 126                                  GOOD > 127                                  GOOD > 128                                  GOOD > 129                                  GOOD > 130                                  GOOD > 131                                  GOOD > 132                                  GOOD > 133                                  GOOD > 134                                  GOOD > 135                                  GOOD > 136                                       > 137                                  GOOD > 138                                  GOOD > 139                                  GOOD > 140                                  GOOD > 141                                  GOOD > 142                                       > 143                                  GOOD > 144                                  GOOD > 145                                  GOOD > 146                                  GOOD > 147                                  GOOD > 148                                  GOOD > 149                                  GOOD > 150                                  GOOD > 151                                  GOOD > 152                                  GOOD > 153                                  GOOD > 154                                  GOOD > 155                                  GOOD > 156                                  GOOD > 157                                  GOOD > 158                                  GOOD > 159                                  GOOD > 160                                  GOOD > 161                                  GOOD > 162                                  GOOD > 163                                  GOOD > 164                                  GOOD > 165                                  GOOD > 166                                  GOOD > 167                                  GOOD > 168                                  GOOD > 169                                  GOOD > 170                                       > 171                                       > 172                                       > 173                                  GOOD > 174                                  GOOD > 175                                  GOOD > 176                                  GOOD > 177                                  GOOD > 178                                  GOOD > 179                                  GOOD > 180                                  GOOD > 181                                  GOOD > 182                                  GOOD > 183                                  GOOD > 184                                  GOOD > 185                                  GOOD > 186                                  GOOD > 187                                  GOOD > 188                                  GOOD > 189                                  GOOD > 190                                  GOOD > 191                                  GOOD > 192                                  GOOD > 193                                  GOOD > 194                                  GOOD > 195                                  GOOD > 196                                  GOOD > 197                                  GOOD > 198                                  GOOD > 199                                  GOOD > 200                                  GOOD > 201                                  GOOD > 202                                  GOOD > 203                                       > 204                                  GOOD > 205                                  GOOD > 206                                  GOOD > 207                                  GOOD > 208                                  GOOD > 209                                  GOOD > 210                                  GOOD > 211                                  GOOD > 212                                  GOOD > 213                                       > 214                                  GOOD > 215                                  GOOD > 216                                  GOOD > 217                                  GOOD > 218                                  GOOD > 219                                       > 220                                  GOOD > 221                                  GOOD > 222                                  GOOD > 223                                  GOOD > 224                                  GOOD > 225                                  GOOD > 226                                       > 227                                  GOOD > 228                                  GOOD > 229                                  GOOD > 230                                  GOOD > 231                                       > 232                                  GOOD > 233                                  GOOD > 234                                  GOOD > 235                                  GOOD > 236                                  GOOD > 237                                  GOOD > 238                                  GOOD > 239                                  GOOD > 240                                  GOOD > 241                                  GOOD > 242                                  GOOD > 243                                  GOOD > 244                                  GOOD > 245                                  GOOD > 246                                  GOOD > 247                                  GOOD > 248                                  GOOD > 249                                  GOOD > 250                                  GOOD > 251                                  GOOD > 252                                  GOOD > 253                                  GOOD > 254                                  GOOD > 255                                  GOOD > 256                                  GOOD > 257                                  GOOD > 258                                  GOOD > 259                                  GOOD > 260                                  GOOD > 261                                  GOOD > 262                                  GOOD > 263                                  GOOD > 264                                  GOOD > 265                                  GOOD > 266                                  GOOD > 267                                  GOOD > 268                                  GOOD > 269                                  GOOD > 270                                  GOOD > 271                                  GOOD > 272                                  GOOD > 273                                  GOOD > 274                                  GOOD > 275                                  GOOD > 276                                  GOOD > 277                                  GOOD > 278                                  GOOD > 279                                  GOOD > 280                                  GOOD > 281                                  GOOD > 282                                  GOOD > 283                                  GOOD > 284                                  GOOD > 285                                  GOOD > 286                                  GOOD > 287                                  GOOD > 288                                  GOOD > 289                                  GOOD > 290                                  GOOD > 291                                  GOOD > 292                                  GOOD > 293                                  GOOD > 294                                  GOOD > 295                                  GOOD > 296                                  GOOD > 297                                       > 298                                  GOOD > 299                                  GOOD > 300                                  GOOD > 301                                       > 302                                  GOOD > 303                                  GOOD > 304                                  GOOD > 305                                  GOOD > 306                                  GOOD > 307                                  GOOD > 308                                  GOOD > 309                                  GOOD > 310                                  GOOD > 311                                  GOOD > 312                                  GOOD > 313                                  GOOD > 314                                       > 315                                  GOOD > 316                                       > 317                                  GOOD > 318                                       > 319                                  GOOD > 320                                       > 321                                  GOOD > 322                                       > 323                                  GOOD > 324                                       > 325                                  GOOD > 326                                  GOOD > 327                                  GOOD > 328                                  GOOD > 329                                  GOOD > 330                                  GOOD > 331                                  GOOD > 332                                  GOOD > 333                                  GOOD > 334                                  GOOD > 335                                  GOOD > 336                                  GOOD > 337                                  GOOD > 338                                  GOOD > 339                                       > 340                                       > 341                                       > 342                                  GOOD > 343                                  GOOD > 344                                  GOOD > 345                                  GOOD > 346                                  GOOD > 347                                  GOOD > 348                                  GOOD > 349                                  GOOD > 350                                  GOOD > 351                                  GOOD > 352                                  GOOD > 353                                  GOOD > 354                                  GOOD > 355                                  GOOD > 356                                  GOOD > 357                                  GOOD > 358                                  GOOD > 359                                       > 360                                       > 361                                  GOOD > 362                                  GOOD > 363                                  GOOD > 364                                  GOOD > 365                                  GOOD > 366                                  GOOD > 367                                  GOOD > 368                                  GOOD > 369                                  GOOD > 370                                  GOOD > 371                                  GOOD > 372                                  GOOD > 373                                  GOOD > 374                                  GOOD > 375                                  GOOD > 376                                  GOOD > 377                                  GOOD > 378                                  GOOD > 379                                  GOOD > 380                                  GOOD > 381                                  GOOD > 382                                  GOOD > 383                                  GOOD > 384                                  GOOD > 385                                  GOOD > 386                                  GOOD > 387                                       > 388                                       > 389                                  GOOD > 390                                  GOOD > 391                                  GOOD > 392                                  GOOD > 393                                  GOOD > 394                                  GOOD > 395                                  GOOD > 396                                  GOOD > 397                                  GOOD > 398                                  GOOD > 399                                  GOOD > 400                                  GOOD > 401                                  GOOD > 402                                  GOOD > 403                                       > 404                                  GOOD > 405                                  GOOD > 406                                  GOOD > 407                                  GOOD > 408                                  GOOD > 409                                       > 410                                       > 411                                       > 412                                       > 413                                  GOOD > 414                                  GOOD > 415                                  GOOD > 416                                  GOOD > 417                                  GOOD > 418                                  GOOD > 419                                       > 420                                  GOOD > 421                                  GOOD > 422                                  GOOD > 423                                       > 424                                  GOOD > 425                                  GOOD > 426                                  GOOD > 427                                  GOOD > 428                                  GOOD > 429                                       > 430                                  GOOD > 431                                  GOOD > 432                                       > 433                                  GOOD > 434                                  GOOD > 435                                  GOOD > 436                                  GOOD > 437                                  GOOD > 438                                  GOOD > 439                                  GOOD > 440                                  GOOD > 441                                  GOOD > 442                                  GOOD > 443                                       > 444                                  GOOD > 445                                  GOOD > 446                                  GOOD > 447                                  GOOD > 448                                  GOOD > 449                                  GOOD > 450                                  GOOD > 451                                  GOOD > 452                                       > 453                                  GOOD > 454                                  GOOD > 455                                  GOOD > 456                                  GOOD > 457                                  GOOD > 458                                  GOOD > 459                                  GOOD > 460                                  GOOD > 461                                  GOOD > 462                                  GOOD > 463                                  GOOD > 464                                  GOOD > 465                                  GOOD > 466                                  GOOD > 467                                  GOOD > 468                                  GOOD > 469                                  GOOD > 470                                  GOOD > 471                                  GOOD > 472                                  GOOD > 473                                  GOOD > 474                                  GOOD > 475                                  GOOD > 476                                  GOOD > 477                                  GOOD > 478                                  GOOD > 479                                  GOOD > 480                                  GOOD > 481                                  GOOD > 482                                  GOOD > 483                                       > 484                                  GOOD > 485                                  GOOD > 486                                       > 487                                  GOOD > 488                                  GOOD > 489                                  GOOD > 490                                  GOOD > 491                                  GOOD > 492                                  GOOD > 493                                  GOOD > 494                                  GOOD > 495                                  GOOD > 496                                       > 497                                       > 498                                       > 499                                       > 500                                       > 501                                       > 502                                       > 503                                  GOOD > 504                                       > 505                                  GOOD > 506                                  GOOD > 507                                  GOOD > 508                                  GOOD > 509                                  GOOD > 510                                  GOOD > 511                                  GOOD > 512                                  GOOD > 513                                  GOOD > 514                                       > 515                                       > 516                                  GOOD > 517                                  GOOD > 518                                  GOOD > 519                                  GOOD > 520                                  GOOD > 521                                  GOOD > 522                                  GOOD > 523                                  GOOD > 524"},{"path":"/articles/arg_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"arg_check","text":"","code":"vec1 <- -1:3 # vector of integers vec2 <- 1:3 / 3 # vector of proportions vec3 <- c(1, 2, 3) # vector of integers but stored as \"double\" vec4 <- \"pearson\" # vector of characters vec5 <- c(\"a\", \"b\",\"a\", \"b\") # vector of characters mat1 <- matrix(vec1) # matrix of integers mat2 <- matrix(c(1:3 / 3, NA)) # matrix of proportions with NA"},{"path":"/articles/arg_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"arg_check","text":"","code":"vec1 # vector of integers > [1] -1  0  1  2  3 vec2 # vector of proportions > [1] 0.3333333 0.6666667 1.0000000 vec3 # vector of integers but stored as \"double\" > [1] 1 2 3 vec4 # vector of characters > [1] \"pearson\" vec5 # vector of characters > [1] \"a\" \"b\" \"a\" \"b\" mat1 # matrix of integers >      [,1] > [1,]   -1 > [2,]    0 > [3,]    1 > [4,]    2 > [5,]    3 mat2 # matrix of proportions with NA >           [,1] > [1,] 0.3333333 > [2,] 0.6666667 > [3,] 1.0000000 > [4,]        NA"},{"path":"/articles/arg_check.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"arg_check","text":"","code":"# Check that vec1 is of class integer (means that it is also a vector) -> ok arg_check(data = vec1, class = \"integer\") > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 OBJECT\" >  > $object.name > [1] \"vec1\" # Check that vec1 is a numeric vector -> error because vec1 is a vector of integers arg_check(data = vec1, class = \"numeric\") > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec1 OBJECT MUST BE CLASS numeric\" >  > $object.name > [1] \"vec1\" # Check that vec1 is an integer vector of length 3 without negative values and without NA -> error because of length 5 and negative values inside vec1 arg_check(data = vec1, class = \"vector\", typeof = \"integer\", length = 3, neg_values = FALSE, na_contain = FALSE) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec1 OBJECT MUST BE LENGTH 3 AND THE vec1 OBJECT MUST BE MADE OF NON NEGATIVE NUMERIC VALUES\" >  > $object.name > [1] \"vec1\" # No result displayed because the output list is assigned into res (see below the print argument) res <- arg_check(data = vec1, class = \"integer\")  # with data = NULL, the function systematically report a checking problem arg_check(data = NULL, class = \"integer\") > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE NULL OBJECT MUST BE CLASS integer\" >  > $object.name > [1] \"NULL\""},{"path":"/articles/arg_check.html","id":"argument-class-typeof-mode-and-length-are-the-same-as-the-corresponding-r-function-except-class-which","dir":"Articles","previous_headings":"","what":"Argument class, typeof, mode and length are the same as the corresponding R function, except class which","title":"arg_check","text":"also “vector” remains “matrix” matrices “matrix” “array”","code":"# Example arg_check(     data = vec1,      class = \"vector\",      typeof = \"integer\",      mode = \"numeric\",      length = 5,  ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 OBJECT\" >  > $object.name > [1] \"vec1\" # Warning: the function does not check for inconsistencies between arguments. It just checks if everything is ok between arguments values and data arg_check(     data = vec1,      typeof = \"integer\",      mode = \"character\", # the mode \"character\" exists but is inconsistant with typeof \"integer\". However, this aspect is not signaled by the function ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec1 OBJECT MUST BE MODE character\" >  > $object.name > [1] \"vec1\"  # Error message due to wrong value in the class and length arguments arg_check(     data = vec1,      mode = \"integer\", # the mode \"integer\" does not exist in the mode() function of R ) > Error:  >  > ================ >  > ERROR IN arg_check()() OF THE saferDev PACKAGE > mode ARGUMENT MUST BE ONE OF THESE VALUE: > \"logical\", \"numeric\", \"complex\", \"character\", \"list\", \"expression\", \"name\", \"symbol\", \"function\", \"environment\", \"S4\", \"call\" >  > ================"},{"path":"/articles/arg_check.html","id":"argument-prop","dir":"Articles","previous_headings":"","what":"Argument prop","title":"arg_check","text":"","code":"arg_check(     data = mat2,      prop = TRUE # Check for values between 0 and 1 only ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat2 OBJECT CONTAINS NA WHILE NOT AUTHORIZED\" >  > $object.name > [1] \"mat2\""},{"path":"/articles/arg_check.html","id":"argument-double_as_integer_allowed","dir":"Articles","previous_headings":"","what":"Argument double_as_integer_allowed","title":"arg_check","text":"","code":"arg_check(     data = vec3,      typeof = \"integer\",     double_as_integer_allowed = TRUE # with TRUE, integers stored as double are accepted ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec3 OBJECT\" >  > $object.name > [1] \"vec3\""},{"path":"/articles/arg_check.html","id":"argument-options","dir":"Articles","previous_headings":"","what":"Argument options","title":"arg_check","text":"","code":"arg_check(     data = vec4,      options = c(\"pearson\", \"spearman\", \"kendall\") ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec4 OBJECT\" >  > $object.name > [1] \"vec4\""},{"path":"/articles/arg_check.html","id":"argument-all_options_in_data","dir":"Articles","previous_headings":"","what":"Argument all_options_in_data","title":"arg_check","text":"","code":"# No error arg_check(     data = vec5,     options = c(\"a\", \"b\"),      all_options_in_data = TRUE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec5 OBJECT\" >  > $object.name > [1] \"vec5\" # No error arg_check(     data = vec5,     options = c(\"a\", \"b\", \"c\"),      all_options_in_data = FALSE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec5 OBJECT\" >  > $object.name > [1] \"vec5\" # Error arg_check(     data = vec5,     options = c(\"a\", \"b\", \"c\"),      all_options_in_data = TRUE ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE vec5 OBJECT MUST BE MADE OF ALL THESE OPTIONS: a b c\\nTHE MISSING ELEMENTS OF THE options ARGUMENT ARE: c\" >  > $object.name > [1] \"vec5\""},{"path":"/articles/arg_check.html","id":"argument-na_contain","dir":"Articles","previous_headings":"","what":"Argument na_contain","title":"arg_check","text":"","code":"arg_check(     data = mat2,      class = \"matrix\",      prop = TRUE,     na_contain = FALSE # with TRUE, integers stored as double are accepted ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat2 OBJECT CONTAINS NA WHILE NOT AUTHORIZED\" >  > $object.name > [1] \"mat2\""},{"path":"/articles/arg_check.html","id":"argument-neg_values","dir":"Articles","previous_headings":"","what":"Argument neg_values","title":"arg_check","text":"","code":"# Warning: only considered if set to FALSE, to check for non negative values when class is set to \"vector\", \"numeric\", \"matrix\", \"array\", \"data.frame\", \"table\", or typeof is set to \"double\", \"integer\", or mode is set to \"numeric\" arg_check(     data = mat1,      class = \"matrix\",     neg_values = FALSE # with TRUE, integers stored as double are accepted ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat1 OBJECT MUST BE MADE OF NON NEGATIVE NUMERIC VALUES\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-inf_values","dir":"Articles","previous_headings":"","what":"Argument inf_values","title":"arg_check","text":"","code":"# Warning: only considered if set to FALSE, to check for non infinite values when class is set to \"vector\", \"numeric\", \"matrix\", \"array\", \"data.frame\", \"table\", or typeof is set to \"double\", \"integer\", or mode is set to \"numeric\" arg_check(     data = mat1,      class = \"matrix\",     inf_values = FALSE ) > $problem > [1] TRUE >  > $text > [1] \"ERROR\\nTHE mat1 OBJECT MUST BE MADE OF NON INFINITE VALUES BUT IS NOT EVEN TYPE DOUBLE\" >  > $object.name > [1] \"mat1\""},{"path":"/articles/arg_check.html","id":"argument-print","dir":"Articles","previous_headings":"","what":"Argument print","title":"arg_check","text":"","code":"# No error message printed because print is FALSE res <- arg_check(     data = mat1,      class = \"data.frame\",     print = FALSE ) # Error message printed res <- arg_check(     data = mat1,      class = \"data.frame\",     print = TRUE ) >  >  > ================ >  > ERROR > THE mat1 OBJECT MUST BE CLASS data.frame >  > ================ # Even if print is TRUE, no error message printed because no error res <- arg_check(     data = mat1,      class = \"matrix\",     print = TRUE )"},{"path":"/articles/arg_check.html","id":"arguments-data_name-fun_name-and-pack_name","dir":"Articles","previous_headings":"","what":"Arguments data_name, fun_name and pack_name","title":"arg_check","text":"","code":"# Example tempo <- arg_check(     data = vec1,      class = \"integer\",      data_name = \"OBSERVATION_1\",      fun_name = \"FUNCTION_1\",      pack_name = \"PACKAGE_2\" ) tempo$text > [1] \"IN FUNCTION_1\\nNO PROBLEM DETECTED FOR THE OBSERVATION_1 OBJECT\" # In fact, these two arguments are interesting when check() is used inside functions fun1 <- function(arg1){     tempo <- arg_check(                 data = arg1,                  class = \"integer\",                  data_name = NULL, # if NULL, the name displayed is arg1                 fun_name = NULL, # if NULL, no name displayed                 pack_name = NULL # if NULL, no name displayed     )     if(tempo$problem == TRUE){         cat(paste0(\"\\n\\n================\\n\\n\", tempo$text, \"\\n\\n================\\n\\n\"))     } } fun1(arg1 = vec4) # error message because arg1 requires a vector of integers >  >  > ================ >  > ERROR > THE arg1 OBJECT MUST BE CLASS integer >  > ================ fun2 <- function(arg1){     tempo <- arg_check(                 data = arg1,                  class = \"integer\",                  data_name = NULL, # if NULL, the name displayed is arg1                 fun_name = \"FUNCTION_2\",                 pack_name = \"PACKAGE_3\"     )     if(tempo$problem == TRUE){         cat(paste0(\"\\n\\n================\\n\\n\", tempo$text, \"\\n\\n================\\n\\n\"))     } } fun2(arg1 = vec1) # error message with the name of the function, because arg1 requires a vector of integers"},{"path":"/articles/arg_check.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"arg_check","text":"","code":"arg_check(     data = mat1,      class = \"matrix\",      safer_check = TRUE ) # safer_check = TRUE, checkings are performed before main code running > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE mat1 OBJECT\" >  > $object.name > [1] \"mat1\"  arg_check(     data = vec4,      options = c(\"pearson\", \"spearman\", \"kendall\"),      safer_check = FALSE ) # safer_check = TRUE, checkings are performed before main code running > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec4 OBJECT\" >  > $object.name > [1] \"vec4\""},{"path":"/articles/arg_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"arg_check","text":"","code":"# See the examples of fun_info() to test different classes of objects arg_check(     data = vec1,      class = \"integer\",      typeof = NULL,      mode = NULL,      length = NULL,      prop = FALSE,      double_as_integer_allowed = FALSE,      options = NULL,      all_options_in_data = FALSE,      na_contain = FALSE,      neg_values = TRUE,      inf_values = TRUE,      print = FALSE,      data_name = NULL,      fun_name = NULL,     pack_name = NULL,     safer_check = TRUE ) > $problem > [1] FALSE >  > $text > [1] \"NO PROBLEM DETECTED FOR THE vec1 OBJECT\" >  > $object.name > [1] \"vec1\""},{"path":"/articles/arg_test.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"arg_test","text":"","code":"f <- \"unique\" f2 <- \"plot\" argum <- c(\"x\", \"incomparables\") argum2 <- c(\"x\", \"y\") value <- list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)) value2 <- list(x = list(1:10, 12:13, NA, (1:10)^2),y = list(1:10, NA, NA)) error <- list(x = list(FALSE, FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE)) error2 <- list(x = list(FALSE, TRUE, TRUE, FALSE), y = list(FALSE, TRUE, TRUE))"},{"path":"/articles/arg_test.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"arg_test","text":"","code":"f # character string indicating the name of the function tested  > [1] \"unique\" argum # character vector of the arguments of fun > [1] \"x\"             \"incomparables\" value # List in which each compartment containing values of the corresponding argument in arg > $x > $x[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $x[[2]] > [1] 1 1 2 8 >  > $x[[3]] > [1] NA >  >  > $incomparable > [1]  TRUE FALSE    NA value2 # List in which each compartment containing values of the corresponding argument2 in arg > $x > $x[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $x[[2]] > [1] 12 13 >  > $x[[3]] > [1] NA >  > $x[[4]] >  [1]   1   4   9  16  25  36  49  64  81 100 >  >  > $y > $y[[1]] >  [1]  1  2  3  4  5  6  7  8  9 10 >  > $y[[2]] > [1] NA >  > $y[[3]] > [1] NA error # List indicating if an error is expected > $x > $x[[1]] > [1] FALSE >  > $x[[2]] > [1] FALSE >  > $x[[3]] > [1] TRUE >  >  > $incomparable > [1] FALSE FALSE  TRUE"},{"path":"/articles/arg_test.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"arg_test","text":"","code":"arg_test(     fun = f,      arg = argum,      val = value ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S > $fun > [1] \"unique\" >  > $ini > arg_test(fun = f, arg = argum, val = value) >  > $data >                               x incomparables kind problem message > arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE         > arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE         > arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE         > arg_test_4              1 1 2 8          TRUE   OK   FALSE         > arg_test_5              1 1 2 8         FALSE   OK   FALSE         > arg_test_6              1 1 2 8            NA   OK   FALSE         > arg_test_7                   NA          TRUE   OK   FALSE         > arg_test_8                   NA         FALSE   OK   FALSE         > arg_test_9                   NA            NA   OK   FALSE         >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pillar_1.9.0      pkgconfig_2.0.3   > [33] pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       qpdf_1.3.3        > [37] R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       reticulate_1.36.1 > [41] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [45] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [49] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [53] yaml_2.3.8  arg_test(     fun = f2,      arg = argum2,      val = value2 ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 12 >  > LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-11-27 09:25:02.640466 > LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S > $fun > [1] \"plot\" >  > $ini > arg_test(fun = f2, arg = argum2, val = value2) >  > $data >                                       x                    y  kind problem > arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_05                       12 13                   NA ERROR    TRUE > arg_test_06                       12 13                   NA ERROR    TRUE > arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_08                          NA                   NA ERROR    TRUE > arg_test_09                          NA                   NA ERROR    TRUE > arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE > arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE >                                                                                      message > arg_test_01                                                                                  > arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_10                                                                                  > arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pillar_1.9.0      pkgconfig_2.0.3   > [33] pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       qpdf_1.3.3        > [37] R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       reticulate_1.36.1 > [41] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [45] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [49] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [53] yaml_2.3.8  arg_test(     fun = f,      arg = argum,      val = value,     export = TRUE,     res.path = getwd() ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > test JOB END >  > TIME: 2024-11-27 09:25:02.995958 >  > TOTAL TIME LAPSE: 0S > Warning: FROM arg_test() OF THE saferDev PACKAGE >  > (1) THE FIRST FOR & WHILE LOOP STEPS HAVE BEEN TOO FAR AND SUBSEQUENT LOOP STEPS WILL NOT RUN  arg_test(     fun = f2,      arg = argum2,      val = value2,     expect.error = error2,     plot.fun = TRUE,     res.path = \".\" ) >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 12 >  > LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-11-27 09:25:03.373781 > LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S >  > NO DISCREPANCY BETWEEN EXPECTED AND OBSERVED ERRORS > $fun > [1] \"plot\" >  > $ini > arg_test(fun = f2, arg = argum2, val = value2, expect.error = error2,  >     plot.fun = TRUE, res.path = \".\") >  > $data >                                       x                    y  kind problem > arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE > arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_05                       12 13                   NA ERROR    TRUE > arg_test_06                       12 13                   NA ERROR    TRUE > arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE > arg_test_08                          NA                   NA ERROR    TRUE > arg_test_09                          NA                   NA ERROR    TRUE > arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE > arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE > arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE >             expected.error > arg_test_01          FALSE > arg_test_02           TRUE > arg_test_03           TRUE > arg_test_04           TRUE > arg_test_05           TRUE > arg_test_06           TRUE > arg_test_07           TRUE > arg_test_08           TRUE > arg_test_09           TRUE > arg_test_10          FALSE > arg_test_11           TRUE > arg_test_12           TRUE >                                                                                      message > arg_test_01                                                                                  > arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n > arg_test_10                                                                                  > arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n > arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pillar_1.9.0      pkgconfig_2.0.3   > [33] pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       qpdf_1.3.3        > [37] R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       reticulate_1.36.1 > [41] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [45] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [49] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [53] yaml_2.3.8"},{"path":"/articles/arg_test.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"arg_test","text":"","code":"arg_test(     fun = f,      arg = argum,      val= value,      expect.error = error,      parall = FALSE,      thread.nb = NULL,      print.count = 10,      plot.fun = FALSE,      export = FALSE,      res.path = \".\",      lib_path = NULL,     safer_check = TRUE ) # check the function \"mean\" in the environment one step above the local environment >  > test JOB IGNITION >  > TOTAL NUMBER OF TESTS: 9 >  > LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S >  > DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE $data RESULT) > $fun > [1] \"unique\" >  > $ini > arg_test(fun = f, arg = argum, val = value, expect.error = error,  >     parall = FALSE, thread.nb = NULL, print.count = 10, plot.fun = FALSE,  >     export = FALSE, res.path = \".\", lib_path = NULL, safer_check = TRUE) >  > $data >                               x incomparables kind problem expected.error > arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE          FALSE > arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE          FALSE > arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE           TRUE > arg_test_4              1 1 2 8          TRUE   OK   FALSE          FALSE > arg_test_5              1 1 2 8         FALSE   OK   FALSE          FALSE > arg_test_6              1 1 2 8            NA   OK   FALSE           TRUE > arg_test_7                   NA          TRUE   OK   FALSE           TRUE > arg_test_8                   NA         FALSE   OK   FALSE           TRUE > arg_test_9                   NA            NA   OK   FALSE           TRUE >            message > arg_test_1         > arg_test_2         > arg_test_3         > arg_test_4         > arg_test_5         > arg_test_6         > arg_test_7         > arg_test_8         > arg_test_9         >  > $sys.info > R version 4.3.3 (2024-02-29) > Platform: x86_64-pc-linux-gnu (64-bit) > Running under: Ubuntu 22.04.4 LTS >  > Matrix products: default > BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  > LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 >  > locale: >  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               >  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     >  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    >  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  >  [9] LC_ADDRESS=C               LC_TELEPHONE=C             > [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        >  > time zone: UTC > tzcode source: system (glibc) >  > attached base packages: > [1] stats     graphics  grDevices utils     datasets  methods   base      >  > other attached packages: > [1] saferDev_1.0 >  > loaded via a namespace (and not attached): >  [1] askpass_1.2.0     bslib_0.7.0       cachem_1.0.8      cli_3.6.2         >  [5] colorspace_2.1-0  compiler_4.3.3    desc_1.4.3        digest_0.6.35     >  [9] evaluate_0.23     fansi_1.0.6       fastmap_1.1.1     fs_1.6.3          > [13] generics_0.1.3    ggplot2_3.5.0     glue_1.7.0        grid_4.3.3        > [17] gtable_0.3.5      htmltools_0.5.8.1 htmlwidgets_1.6.4 jquerylib_0.1.4   > [21] jsonlite_1.8.8    knitr_1.46        lattice_0.22-6    lifecycle_1.0.4   > [25] lubridate_1.9.3   magrittr_2.0.3    Matrix_1.6-5      memoise_2.0.1     > [29] munsell_0.5.1     parallel_4.3.3    pillar_1.9.0      pkgconfig_2.0.3   > [33] pkgdown_2.0.9     png_0.1-8         purrr_1.0.2       qpdf_1.3.3        > [37] R6_2.5.1          ragg_1.3.0        Rcpp_1.0.12       reticulate_1.36.1 > [41] rlang_1.1.3       rmarkdown_2.26    sass_0.4.9        scales_1.3.0      > [45] systemfonts_1.0.6 textshaping_0.3.7 tibble_3.2.1      timechange_0.3.0  > [49] tools_4.3.3       utf8_1.2.4        vctrs_0.6.5       xfun_0.43         > [53] yaml_2.3.8"},{"path":"/articles/colons_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"colons_check","text":"","code":"fun1 <- function(){     base::sum(1, 3)   }  fun2 <- function(){     sum(1, 3)   }"},{"path":"/articles/colons_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"colons_check","text":"","code":"fun1 > function(){ >     base::sum(1, 3) >   } fun2 > function(){ >     sum(1, 3) >   }"},{"path":"/articles/colons_check.html","id":"argument-x","dir":"Articles","previous_headings":"","what":"Argument x","title":"colons_check","text":"","code":"colons_check(x = fun1) # a function name, written without quotes and brackets >  >  > AFTER RUNNING colons_check() OF THE saferDev PACKAGE: > INSIDE fun1, EVERYTHING SEEMS CLEAN colons_check(x = fun2) # a function name, written without quotes and brackets >  >  > INSIDE fun2(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: >  > LINE  FUN     STRING_BEFORE > 2 sum"},{"path":"/articles/colons_check.html","id":"argument-safer_chek","dir":"Articles","previous_headings":"","what":"Argument safer_chek","title":"colons_check","text":"","code":"colons_check(     x = fun1,      afer_check = FALSE ) # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? > Error in colons_check(x = fun1, afer_check = FALSE): unused argument (afer_check = FALSE)"},{"path":"/articles/colons_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"colons_check","text":"","code":"colons_check(     x = fun1, # a function name, written without quotes and brackets     safer_check = TRUE # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? ) >  >  > AFTER RUNNING colons_check() OF THE saferDev PACKAGE: > INSIDE fun1, EVERYTHING SEEMS CLEAN"},{"path":"/articles/colons_check.html","id":"sophisticated-example","dir":"Articles","previous_headings":"","what":"Sophisticated example","title":"colons_check","text":"","code":"source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") colons_check(     x = test, # a function name, written without quotes and brackets     safer_check = TRUE # Single logical value. Perform some \"safer\" checks (see https://github.com/safer-r) ? ) >  >  > INSIDE test(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: >  > LINE  FUN     STRING_BEFORE > 5 gregexpr        matches <-  > 8 regmatches      matched_strings <-  > 11    sum      > 18    sub     result <-  > 19    range        > 22    return       >  > INSIDE test(), INTERNAL FUNCTION DETECTED: > F >  > INSIDE test(), SOME :: OR ::: ARE MISSING AT OTHER FUNCTION POSITIONS: >  > LINE  FUN     STRING_BEFORE > 9 FUN1         > 16    roc1        base::length( > 20    roc4        tempo.cat <- base::paste0(\"IAGE\\nLENGTHS OF roc00() (\", base::ks.test("},{"path":"/articles/env_check.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"env_check","text":"","code":"pos <- 2 name <- \"mean\""},{"path":"/articles/env_check.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"env_check","text":"","code":"pos # integer indicating the position of the environment checked > [1] 2 name # character vector of the name of the function that will be checked > [1] \"mean\""},{"path":"/articles/env_check.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"env_check","text":"","code":"env_check(pos = 1) > NULL env_check(pos = 2) > NULL"},{"path":"/articles/env_check.html","id":"argument-pos","dir":"Articles","previous_headings":"","what":"Argument pos","title":"env_check","text":"","code":"env_check(pos = 1) # check the object \"NULL\" in the environment one step above the env_check() environment > NULL"},{"path":"/articles/env_check.html","id":"argument-name","dir":"Articles","previous_headings":"","what":"Argument name","title":"env_check","text":"","code":"env_check(name = \"mean\") # check if the object \"mean\" is in the environment one step above the env_check() environment, and if yes, returns if the same name exists in above environments > NULL"},{"path":"/articles/env_check.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"env_check","text":"","code":"env_check(safer_check = TRUE) # with TRUE, checkings are performed before main code running > NULL"},{"path":"/articles/env_check.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"env_check","text":"","code":"mean <- 2 env_check(     pos = 1,     name = \"mean\",     safer_check = TRUE ) # check if the object \"mean\" is in the environment one step above the env_check() environment, and if yes, returns if the same name exists in above environments > [1] \"SOME VARIABLES OF mean ARE ALSO PRESENT IN :\\npackage:base: mean\\n\""},{"path":[]},{"path":[]},{"path":"/articles/get_message.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"get_message","text":"","code":"char1 <- \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\" # single character string char2 <- \"message('ahah')\" # single character string"},{"path":"/articles/get_message.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"get_message","text":"","code":"char1 # single character string > [1] \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\" char2 # single character string > [1] \"message('ahah')\""},{"path":"/articles/get_message.html","id":"simple-example","dir":"Articles","previous_headings":"","what":"Simple example","title":"get_message","text":"","code":"get_message(data = char1) > NULL get_message(data = char2) > ahah > NULL"},{"path":"/articles/get_message.html","id":"argument-kind","dir":"Articles","previous_headings":"","what":"Argument kind","title":"get_message","text":"","code":"get_message(data = char1, kind = \"warning\") # to get warning messages of the wilcox test > [1] \"WARNING MESSAGE REPORTED:\\nsimpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/get_message.html","id":"argument-header","dir":"Articles","previous_headings":"","what":"Argument header","title":"get_message","text":"","code":"get_message(data = char1, header = FALSE) # to get error messages (by default) without header > NULL"},{"path":"/articles/get_message.html","id":"argument-print-no","dir":"Articles","previous_headings":"","what":"Argument print.no","title":"get_message","text":"","code":"get_message(data = char1, print.no = TRUE) # print a message saying that no message reported > [1] \"NO ERROR MESSAGE REPORTED\""},{"path":"/articles/get_message.html","id":"argument-text","dir":"Articles","previous_headings":"","what":"Argument text","title":"get_message","text":"","code":"get_message(     data = char2,      print.no = TRUE,      text = \"IN A\" ) # print a message even if the argument print.no is TRUE > [1] \"NO ERROR MESSAGE REPORTED IN A\""},{"path":"/articles/get_message.html","id":"argument-kind-header-print-no-text","dir":"Articles","previous_headings":"","what":"Argument kind, header, print.no, text","title":"get_message","text":"","code":"get_message(     data = char1,      kind = \"warning\",      header = FALSE,      print.no = TRUE,      text = \"IN A\" ) # print the warning message in text > [1] \"simpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/get_message.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"get_message","text":"","code":"get_message(data = char2, safer_check = TRUE) # with TRUE, checkings are performed before main code running > ahah > NULL"},{"path":"/articles/get_message.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"get_message","text":"","code":"get_message(     data = char1,      kind = \"warning\",      header = FALSE,     print.no = TRUE,      text = \"IN A\",     env = NULL,     safer_check = TRUE ) # print the warning message in text in the environment R_GlobalEnv > [1] \"simpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\""},{"path":"/articles/is_function_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_function_here","text":"","code":"f <- \"ggplot2::geom_point\" path <- \"blablabla\""},{"path":"/articles/is_function_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_function_here","text":"","code":"f # Character vector of function name > [1] \"ggplot2::geom_point\" path # character vector specifying the absolute pathways of the directories, this lib_path will return an error > [1] \"blablabla\""},{"path":"/articles/is_function_here.html","id":"argument-fun","dir":"Articles","previous_headings":"","what":"Argument fun","title":"is_function_here","text":"","code":"is_function_here(fun = f) # check if the package serpentine is in the computer"},{"path":"/articles/is_function_here.html","id":"argument-lib_path","dir":"Articles","previous_headings":"","what":"Argument lib_path","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     lib_path = \".\" ) # check if the function is present in the package > Error:  >  > ================ >  > ERROR IN is_function_here() OF THE saferDev PACKAGE > REQUIRED PACKAGE: > saferDev > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_function_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_function_here","text":"","code":"is_function_here(safer_check = TRUE) # with TRUE, checkings are performed before main code running > Error:  >  > ================ >  > ERROR IN is_function_here() OF THE saferDev PACKAGE > REQUIRED PACKAGE: > saferDev > MUST BE INSTALLED IN ONE OF THESE FOLDERS: > /__w/saferDev/saferDev/vignettes/articles > /usr/local/lib/R/site-library > /usr/local/lib/R/library >  > ================"},{"path":"/articles/is_function_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_function_here","text":"","code":"is_function_here(     fun = f,     lib_path = path,     safer_check = TRUE ) # check if the function is present in the package, returns an error because the path doesn't exist > Error:  >  > ================ >  > ERROR IN is_function_here() OF THE saferDev PACKAGE > DIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS: > blablabla >  > ================"},{"path":"/articles/is_package_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_package_here","text":"","code":"req.pkg <- \"ggplot2\" path <- \"blablabla\""},{"path":"/articles/is_package_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_package_here","text":"","code":"req.pkg # Character vector of package names > [1] \"ggplot2\" path # character vector specifying the absolute pathways of the directories, this lib_path will return an error > [1] \"blablabla\""},{"path":"/articles/is_package_here.html","id":"argument-req-package","dir":"Articles","previous_headings":"","what":"Argument req.package","title":"is_package_here","text":"","code":"is_package_here(req.package = req.pkg) # check if the package serpentine is in the computer > Error in is_package_here(req.package = req.pkg): unused argument (req.package = req.pkg)"},{"path":"/articles/is_package_here.html","id":"argument-lib_path","dir":"Articles","previous_headings":"","what":"Argument lib_path","title":"is_package_here","text":"","code":"is_package_here(     req.package = req.pkg,     lib_path = \".\" ) # check if the package is in the computer > Error in is_package_here(req.package = req.pkg, lib_path = \".\"): unused argument (req.package = req.pkg)"},{"path":"/articles/is_package_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_package_here","text":"","code":"is_package_here(     req.package = req.pkg,     safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running  > Error in is_package_here(req.package = req.pkg, safer_check = TRUE): unused argument (req.package = req.pkg)"},{"path":"/articles/is_package_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_package_here","text":"```","code":"is_package_here(     req.package = req.pkg,     lib_path = path,     safer_check = TRUE ) # check if the package is in the computer > Error in is_package_here(req.package = req.pkg, lib_path = path, safer_check = TRUE): unused argument (req.package = req.pkg)"},{"path":"/articles/is_python_package_here.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"is_python_package_here","text":"","code":"req.pkg <- \"serpentine\" path <- \"blablabla\""},{"path":"/articles/is_python_package_here.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"is_python_package_here","text":"","code":"req.pkg # Character vector of package names to import > [1] \"serpentine\" path # character vector specifying the absolute pathways of the directories, this lib_path will return an error > [1] \"blablabla\""},{"path":"/articles/is_python_package_here.html","id":"argument-req-package","dir":"Articles","previous_headings":"","what":"Argument req.package","title":"is_python_package_here","text":"","code":"is_python_package_here(req.package = req.pkg) # check if the package serpentine is in the computer > Error in is_python_package_here(req.package = req.pkg): unused argument (req.package = req.pkg)"},{"path":"/articles/is_python_package_here.html","id":"argument-lib_path","dir":"Articles","previous_headings":"","what":"Argument lib_path","title":"is_python_package_here","text":"","code":"is_python_package_here(     req.package = req.pkg,     lib_path = path ) # check if the package is in the computer > Error in is_python_package_here(req.package = req.pkg, lib_path = path): unused argument (req.package = req.pkg)"},{"path":"/articles/is_python_package_here.html","id":"argument-safer_check","dir":"Articles","previous_headings":"","what":"Argument safer_check","title":"is_python_package_here","text":"","code":"is_python_package_here(     req.package = req.pkg,     safer_check = TRUE ) # check if the package is in the computer, safer_check = TRUE, checkings are performed before main code running  > Error in is_python_package_here(req.package = req.pkg, safer_check = TRUE): unused argument (req.package = req.pkg)"},{"path":"/articles/is_python_package_here.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"is_python_package_here","text":"","code":"is_python_package_here(     req.package = \"serpentine\",      python.exec.path = \".\",      python.lib_path = \".\",     lib_path = \".\",     safer_check =TRUE ) # check if the python package serpentine is present in the computer, returns an error if the package is not in the computer > Error in is_python_package_here(req.package = \"serpentine\", python.exec.path = \".\", : unused arguments (req.package = \"serpentine\", python.exec.path = \".\", python.lib_path = \".\")"},{"path":"/articles/report.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"report","text":"","code":"string1 <- \"THIS IS A LOG\" vec1 <- 1:6 # vector of integers vec2 <- letters[1:9] # vector of characters mat1 <- matrix(vec1, nrow = 2, ncol = 3, byrow = TRUE) # matrix of integer having 2 rows and 3 columns dimnames(mat1) <- list(c(\"Row 1\",\"Row 2\"), c(\"C1\", \"C2\", \"C3\")) mat2 <- mat1 mode(mat2) <- \"character\" t1 <- table(mat1) # 1D table vec3 <- as.vector(t1) names(vec3) <- letters[1:6] # vector with names t2 <- table(vec2, vec2) # 2D table l1 <- list(vec1, vec2) # list"},{"path":"/articles/report.html","id":"datasets-info","dir":"Articles","previous_headings":"","what":"Datasets info","title":"report","text":"","code":"string1 # string > [1] \"THIS IS A LOG\" vec1 # vector of integers > [1] 1 2 3 4 5 6 vec2 # vector of characters > [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" vec3 # vector of integers with names. No more [1] in front of values > a b c d e f  > 1 1 1 1 1 1 mat1 # matrix of integers with the row names >       C1 C2 C3 > Row 1  1  2  3 > Row 2  4  5  6 mat2 # matrix of characters with the row names >       C1  C2  C3  > Row 1 \"1\" \"2\" \"3\" > Row 2 \"4\" \"5\" \"6\" t1 # 1D table > mat1 > 1 2 3 4 5 6  > 1 1 1 1 1 1 t2 # 2D table >     vec2 > vec2 a b c d e f g h i >    a 1 0 0 0 0 0 0 0 0 >    b 0 1 0 0 0 0 0 0 0 >    c 0 0 1 0 0 0 0 0 0 >    d 0 0 0 1 0 0 0 0 0 >    e 0 0 0 0 1 0 0 0 0 >    f 0 0 0 0 0 1 0 0 0 >    g 0 0 0 0 0 0 1 0 0 >    h 0 0 0 0 0 0 0 1 0 >    i 0 0 0 0 0 0 0 0 1 l1 # list > [[1]] > [1] 1 2 3 4 5 6 >  > [[2]] > [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\""},{"path":"/articles/report.html","id":"simple-examples","dir":"Articles","previous_headings":"","what":"Simple examples","title":"report","text":"","code":"report(data = string1, path = \".\") # print the input into the output file in the path report(data = vec1, path = \".\") # idem report(data = vec2, path = \".\") # idem report(data = vec3, path = \".\") # idem report(data = mat1, path = \".\") # idem report(data = mat2, path = \".\") # idem. We cannot see that it is mode character (see noquote below) report(data = t1, path = \".\") # idem report(data = t2, path = \".\") # idem report(data = l1, path = \".\") # idem"},{"path":"/articles/report.html","id":"argument-output","dir":"Articles","previous_headings":"","what":"Argument output","title":"report","text":"","code":"report(data = vec1, output = \"test.txt\", path = \".\") # print the vector vec1 into the output file named \"test.txt\" in the path"},{"path":"/articles/report.html","id":"argument-overwrite","dir":"Articles","previous_headings":"","what":"Argument overwrite","title":"report","text":"","code":"report(data = vec2, overwrite = TRUE, output = \"test.txt\", path = \".\") # if the file exists, the output file content will be erased before printing"},{"path":"/articles/report.html","id":"argument-rownames-kept","dir":"Articles","previous_headings":"","what":"Argument rownames.kept","title":"report","text":"","code":"report(   data = mat1,    rownames.kept = TRUE,    path = \".\" ) # keep the row names when print the matrix mat1 in the file  report(   data = mat1,    rownames.kept = FALSE,    path = \".\" ) # remove the row names  report(   data = t1,    rownames.kept = TRUE,    path = \".\" ) # keep the row names when print the table t1 in the file  report(   data = t1,    rownames.kept = FALSE,    path = \".\" ) # remove the row names  report(   data = t2,    rownames.kept = TRUE,    path = \".\" ) # keep the row names when print the table t2 in the file  report(   data = t2,    rownames.kept = FALSE,    path = \".\" ) # remove the row names"},{"path":"/articles/report.html","id":"argument-vector-cat","dir":"Articles","previous_headings":"","what":"Argument vector.cat","title":"report","text":"","code":"report(   data = vec3,    vector.cat = TRUE,    path = \".\" ) # print a vector of length > 1 using cat() instead of capture.output() : names are lost."},{"path":"/articles/report.html","id":"argument-noquote","dir":"Articles","previous_headings":"","what":"Argument noquote","title":"report","text":"","code":"report(   data = mat2,    noquote = FALSE,    path = \".\" ) # quote are kept for the characters."},{"path":"/articles/report.html","id":"argument-sep","dir":"Articles","previous_headings":"","what":"Argument sep","title":"report","text":"","code":"report(   data = vec1,    sep = 4,    path = \".\" ) # 4 lines after printed data"},{"path":"/articles/report.html","id":"all-the-arguments","dir":"Articles","previous_headings":"","what":"All the arguments","title":"report","text":"","code":"report(     data = mat2,      output = \"test2.txt\",      path = \".\",      overwrite = TRUE,      rownames.kept = TRUE,      vector.cat = TRUE,      noquote = FALSE,      sep = 4,     safer_check = TRUE ) # matrix mat1 will be print in the file \"text2.txt\" in the path, with quote and row names being kept, and 4 lines after printing data"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haiding Wang. Author, contributor. Gael Millot. Maintainer, author, contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang H, Millot G (2024). saferDev: R function pipeline development. R package version 1.0.","code":"@Manual{,   title = {saferDev: R function and pipeline development},   author = {Haiding Wang and Gael Millot},   year = {2024},   note = {R package version 1.0}, }"},{"path":[]},{"path":"/index.html","id":"table-of-content","dir":"","previous_headings":"","what":"Table of content","title":"R function and pipeline development","text":"Description Content Versions Installation Licence Citations Credits Acknowledgements","code":""},{"path":"/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"R function and pipeline development","text":"Set R functions development R functions, written according safer project specifications.","code":""},{"path":"/index.html","id":"content","dir":"","previous_headings":"","what":"Content","title":"R function and pipeline development","text":"Read vignette(\"saferDev\") details.","code":""},{"path":"/index.html","id":"versions","dir":"","previous_headings":"","what":"Versions","title":"R function and pipeline development","text":"different saferDev releases tagged .","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R function and pipeline development","text":"saferDev can currently installed GitHub: Older versions can installed like :","code":"install.packages(\"remotes\") remotes::install_github(\"https://github.com/safer-r/saferDev\") # or open R as admin and remotes::install_github(\"https://github.com/safer-r/saferDev\", lib = \"C:/Program Files/R/R-4.3.1/library\") v <- \"v1.0\" # desired tag version remotes::install_github(paste0(\"https://github.com/safer-r/saferDev/tree/\", v))"},{"path":"/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"R function and pipeline development","text":"package can redistributed /modified terms GNU General Public License published Free Software Foundation, either version 3 License, (option) later version. Distributed hope useful, without warranty; without even implied warranty merchandability fitness particular purpose. See GNU General Public License details https://www.gnu.org/licenses Licence.txt attached file.","code":""},{"path":"/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"R function and pipeline development","text":"using functions saferDev, please cite: Wang H, Han Y, Serizay J, Millot GA (2023). R saferDev package. https://github.com/safer-r/saferDev/.","code":""},{"path":"/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"R function and pipeline development","text":"Haiding Wang, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Yushi Han, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France Jacques Serizay, Spatial Regulation Genomes team, Institut Pasteur, Paris, France Gael . Millot, Bioinformatics Biostatistics Hub, Institut Pasteur, Paris, France","code":""},{"path":"/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"R function and pipeline development","text":"developers & maintainers mentioned softwares packages, including: R Git Github","code":""},{"path":"/reference/all_args_here.html","id":null,"dir":"Reference","previous_headings":"","what":"all_args_here — all_args_here","title":"all_args_here — all_args_here","text":"Verify functions used inside function written arguments. instance: base::paste0(letters[1:2], collapse = NULL, recycle0 = FALSE) paste0(letters[1:2]).","code":""},{"path":"/reference/all_args_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"all_args_here — all_args_here","text":"","code":"all_args_here(   x,   export = FALSE,   path_out = \".\",   df_name = \"res.tsv\",   overwrite = FALSE,   lib_path = NULL,   safer_check = TRUE )"},{"path":"/reference/all_args_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"all_args_here — all_args_here","text":"x function name, written without quotes brackets. export Single logical value. Export data frame .tsv file? TRUE, data frame returned function exported. path_out Single character string indicating absolute pathway folder export data frame. path_out = \".\" means R working directory set user. Ignored export FALSE df_name Single character string indicating name exported data frame file. Ignored export FALSE. overwrite Single logical value. Overwrite potential df_name file already existing path_out? Ignored export FALSE. lib_path Vector characters specifying absolute pathways directories containing required packages default directories. NULL, pathway specified .libPaths() used. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE all_args_here() fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/all_args_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"all_args_here — all_args_here","text":"data frame indicating missing arguments message saying everything seems fine. export argument TRUE, data frame exported res.tsv instead returned. Data frame:   $LINE_NB: line number function code (starting \"<- function\" line, .e., without counting #' header lines)  $FUN_NAME: function name.  $FUN_ARGS: written arguments $FUN_NAME. \"NOT_CONSIDERED\" means function quotes $  $FUN_POS: position first character function name $LINE_NB line code.  $DEF_ARGS: defaults arguments $FUN_NAME. \"NO_ARGS\" means function arguments  $MISSING_ARG_NAMES: missing argument names $FUN_ARGS.  $MISSING_ARGS: missing arguments values $FUN_ARGS.  $STATUS: either \"GOOD\", meaning arguments already written, new proposal arguments writting, indicates arguments fully written (abbreviation discouraged), nothing. additionnal message \"EVERYTHING SEEMS CLEAN\" $STATUS column made \"\" \"GOOD\".","code":""},{"path":"/reference/all_args_here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"all_args_here — all_args_here","text":"precisely, all_args_here() verifies strings opening bracket \"(\" written arguments. Thus, check function names written without brackets, like FUN argument functions, e.g., sapply(1:3, FUN = .character). perl regex used detect function name : \"[-zA-Z.]1[-zA-Z0-9._]*\\s*\\(\". Function names preceeded $ space considered (pattern \"\\$ *[-zA-Z.]1[-zA-Z0-9._]* *\\(\") following R functions using bracket considered: \"function\", \"\", \"\", \"\" \"repeat\". time, all_args_here() check inside comments, unexpected writting dupe all_args_here(). returned line numbers indicative, depending source checked. instance, saferDev::report (compiled) line numbers source file (https://github.com/safer-r/saferDev/blob/main/R/report.R). Notably, compiled functions comments anymore, compared source function sourced working environment. addition, counting starts \"<- function\" line, .e., without counting #' header lines potentially present source files. Warnings:  1) function properly work comma present default argument values. Please, report https://github.com/safer-r/saferDev/issues case. 2) Proposals STATUS column suggestions, difficult anticipate exceptions arguments writting.","code":""},{"path":"/reference/all_args_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"all_args_here — all_args_here","text":"Gael Millot <gael.millot@pasteur.fr>","code":""},{"path":"/reference/all_args_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"all_args_here — all_args_here","text":"","code":"if (FALSE)  # Example that return an error all_args_here(mean) source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test2.R\") ; all_args_here(test2, export = TRUE) #> Error:  #>  #> ================ #>  #> ERROR IN all_args_here() OF THE saferDev PACKAGE #> THE TESTED FUNCTION test2 SEEMS TO HAVE A WRITTING ERROR IN LINE 13 AND FUNCTION length. #> PLEASE, RUN THE TESTED FUNCTION FIRST. #>  #> ================ #>   all_args_here(all_args_here) #>  #>  #> AFTER RUNNING all_args_here() OF THE saferDev PACKAGE: #> INSIDE all_args_here(), EVERYTHING SEEMS CLEAN #>  #>     LINE_NB                      FUN_NAME #> 1         5                       as.list #> 2         5                    match.call #> 3         5                  sys.function #> 4         5                    sys.parent #> 5         6                      sys.call #> 6         6                    sys.parent #> 7         7                  parent.frame #> 8         8                        paste0 #> 9        14                         names #> 10       14                       formals #> 11       14                  sys.function #> 12       14                    sys.parent #> 13       15                  parent.frame #> 14       16                           all #> 15       16                             c #> 16       17                        length #> 17       17                           all #> 18       17                    is.logical #> 19       19                        paste0 #> 20       20                        ifelse #> 21       20                       is.null #> 22       21                        paste0 #> 23       24                        paste0 #> 24       26                          stop #> 25       26                        paste0 #> 26       31                .base_op_check #> 27       34                       is.null #> 28       35                           all #> 29       35                        typeof #> 30       37                        paste0 #> 31       38                        ifelse #> 32       38                       is.null #> 33       39                        paste0 #> 34       42                         paste #> 35       44                          stop #> 36       44                        paste0 #> 37       48                           all #> 38       48                    dir.exists #> 39       50                        paste0 #> 40       51                        ifelse #> 41       51                       is.null #> 42       52                        paste0 #> 43       55                         paste #> 44       57                          stop #> 45       57                        paste0 #> 46       62                     .libPaths #> 47       62                           sub #> 48       65                     .libPaths #> 49       69                     .libPaths #> 50       72      .pack_and_function_check #> 51       72                             c #> 52       79                             c #> 53       80                          eval #> 54       80                         parse #> 55       80                        paste0 #> 56       80                             c #> 57       80                       missing #> 58       81                        paste0 #> 59       81                       missing #> 60       83                     getOption #> 61       85                   environment #> 62       85                   environment #> 63       86                           any #> 64       87                        paste0 #> 65       88                        ifelse #> 66       88                       is.null #> 67       89                        paste0 #> 68       91                        ifelse #> 69       91                           sum #> 70       93                        paste0 #> 71       96                          stop #> 72       96                        paste0 #> 73      103                    expression #> 74      103                             c #> 75      104                             c #> 76      105                             c #> 77      106                     arg_check #> 78      112                          eval #> 79      112                   environment #> 80      113                   environment #> 81      114                     arg_check #> 82      120                          eval #> 83      120                   environment #> 84      121                   environment #> 85      122                     arg_check #> 86      128                          eval #> 87      128                   environment #> 88      129                   environment #> 89      130                     arg_check #> 90      136                          eval #> 91      136                   environment #> 92      137                   environment #> 93      138                     arg_check #> 94      144                          eval #> 95      144                   environment #> 96      145                   environment #> 97      146                       is.null #> 98      147                           any #> 99      148                          stop #> 100     148                        paste0 #> 101     149                         paste #> 102     155                        length #> 103     156              suppressWarnings #> 104     156                        sapply #> 105     156                        lapply #> 106     158                         is.na #> 107     160                           any #> 108     162                        lapply #> 109     163                        length #> 110     165                           any #> 111     166                        paste0 #> 112     167                        ifelse #> 113     167                       is.null #> 114     168                        paste0 #> 115     170                        ifelse #> 116     170                           sum #> 117     173                        paste0 #> 118     175                          stop #> 119     175                        paste0 #> 120     180                             c #> 121     182                        sapply #> 122     182                        lapply #> 123     184                           get #> 124     184                  parent.frame #> 125     187                       is.null #> 126     189                           any #> 127     190                        paste0 #> 128     191                        ifelse #> 129     191                       is.null #> 130     192                        paste0 #> 131     194                        ifelse #> 132     194                           sum #> 133     196                        paste0 #> 134     199                          stop #> 135     199                        paste0 #> 136     203                             c #> 137     204                        sapply #> 138     204                        lapply #> 139     206                           get #> 140     206                  parent.frame #> 141     209                       is.null #> 142     210                        return #> 143     213                           all #> 144     213                          mode #> 145     216                           any #> 146     217                        paste0 #> 147     218                        ifelse #> 148     218                       is.null #> 149     219                        paste0 #> 150     221                        ifelse #> 151     221                           sum #> 152     223                        paste0 #> 153     226                          stop #> 154     226                        paste0 #> 155     231                        sapply #> 156     231                        lapply #> 157     233                           get #> 158     233                  parent.frame #> 159     236                           any #> 160     238                           any #> 161     239                        paste0 #> 162     240                        ifelse #> 163     240                       is.null #> 164     241                        paste0 #> 165     243                        ifelse #> 166     243                           sum #> 167     245                        paste0 #> 168     248                          stop #> 169     248                        paste0 #> 170     253                             c #> 171     254                       options #> 172     255                       options #> 173     258                       is.null #> 174     259                           all #> 175     259                    dir.exists #> 176     260                        paste0 #> 177     261                        ifelse #> 178     261                       is.null #> 179     262                        paste0 #> 180     265                         paste #> 181     267                          stop #> 182     267                        paste0 #> 183     273                           all #> 184     273                    dir.exists #> 185     274                        paste0 #> 186     275                        ifelse #> 187     275                       is.null #> 188     276                        paste0 #> 189     279                         paste #> 190     281                          stop #> 191     281                        paste0 #> 192     285                         grepl #> 193     287                           sub #> 194     291                         grepl #> 195     294                           sub #> 196     298                    dir.exists #> 197     299                        paste0 #> 198     300                        ifelse #> 199     300                       is.null #> 200     301                        paste0 #> 201     305                          stop #> 202     305                        paste0 #> 203     310                   file.exists #> 204     310                        paste0 #> 205     312                        paste0 #> 206     313                        ifelse #> 207     313                       is.null #> 208     314                        paste0 #> 209     317                        paste0 #> 210     319                          stop #> 211     319                        paste0 #> 212     325                       deparse #> 213     326                             c #> 214     328                        paste0 #> 215     330             .functions_detect #> 216     336                         paste #> 217     338                         grepl #> 218     341                        paste0 #> 219     342                         paste #> 220     345                        paste0 #> 221     345                        ifelse #> 222     345                       is.null #> 223     346                        paste0 #> 224     350                        cumsum #> 225     350                         nchar #> 226     352                             c #> 227     352                        length #> 228     354        .in_quotes_replacement #> 229     359        .in_quotes_replacement #> 230     363                          sort #> 231     363                             c #> 232     366                        lapply #> 233     368                        lapply #> 234     372                        length #> 235     373                    as.integer #> 236     373                           sub #> 237     374                         names #> 238     377                         which #> 239     379                        length #> 240     381                         nchar #> 241     384                        substr #> 242     387                        paste0 #> 243     392                          stop #> 244     392                        paste0 #> 245     393                        ifelse #> 246     393                       is.null #> 247     394                        paste0 #> 248     395                        ifelse #> 249     400                        substr #> 250     401                         nchar #> 251     403                         grepl #> 252     406                 .fun_args_pos #> 253     407                        paste0 #> 254     410                        substr #> 255     412                         grepl #> 256     419                        substr #> 257     420                         paste #> 258     420                           rep #> 259     425                        substr #> 260     427                        substr #> 261     430                       is.null #> 262     431                        unlist #> 263     434                        substr #> 264     435                         paste #> 265     435                           rep #> 266     446                        lapply #> 267     447                        lapply #> 268     451                        length #> 269     452                        length #> 270     453                        paste0 #> 271     455                         grepl #> 272     458        .in_quotes_replacement #> 273     462        .in_quotes_replacement #> 274     466                 .fun_args_pos #> 275     469                       is.null #> 276     470                        unlist #> 277     477                     as.vector #> 278     477                        unlist #> 279     477                        mapply #> 280     479                           rep #> 281     479                        length #> 282     483                     as.vector #> 283     483                        unlist #> 284     483                        mapply #> 285     485                           rep #> 286     485                        length #> 287     489                     as.vector #> 288     489                        unlist #> 289     491                     as.vector #> 290     491                        unlist #> 291     493                     as.vector #> 292     493                        unlist #> 293     495                       do.call #> 294     496                  parent.frame #> 295     497                        lapply #> 296     499                       is.null #> 297     500                           seq #> 298     500                        length #> 299     506                        lapply #> 300     508                       is.null #> 301     509                           seq #> 302     509                        length #> 303     515                        length #> 304     515                        length #> 305     516                        length #> 306     516                        length #> 307     516                        length #> 308     517                        length #> 309     517                        length #> 310     517                        length #> 311     518                        length #> 312     518                        length #> 313     519                        paste0 #> 314     520                          col1 #> 315     521                        length #> 316     521                          col2 #> 317     521                        length #> 318     522                          col3 #> 319     522                        length #> 320     522                          col4 #> 321     523                        length #> 322     523                  code_for_col #> 323     523                        length #> 324     524                middle_bracket #> 325     524                        length #> 326     526                          stop #> 327     526                        paste0 #> 328     527                        ifelse #> 329     527                       is.null #> 330     528                        paste0 #> 331     529                        ifelse #> 332     534                     as.vector #> 333     534                        unlist #> 334     534                        mapply #> 335     537                         grepl #> 336     537                        paste0 #> 337     540                         grepl #> 338     541                        paste0 #> 339     544                        return #> 340     547                        return #> 341     551                        return #> 342     556                           any #> 343     557                        paste0 #> 344     559                         paste #> 345     561                          stop #> 346     561                        paste0 #> 347     562                        ifelse #> 348     562                       is.null #> 349     563                        paste0 #> 350     564                        ifelse #> 351     570                           any #> 352     580                        length #> 353     581                           cat #> 354     589                        length #> 355     591                        paste0 #> 356     593                         paste #> 357     593                        paste0 #> 358     593                        substr #> 359     596                  colons_check #> 360     597                 all_args_here #> 361     600                          stop #> 362     600                        paste0 #> 363     602                        ifelse #> 364     602                       is.null #> 365     603                        paste0 #> 366     604                        ifelse #> 367     609                        substr #> 368     612                          stop #> 369     612                        paste0 #> 370     614                        ifelse #> 371     614                       is.null #> 372     615                        paste0 #> 373     616                        ifelse #> 374     621                        substr #> 375     623        .extract_all_fun_names #> 376     625              is_function_here #> 377     625                        paste0 #> 378     628                           sub #> 379     632                        exists #> 380     633                  getNamespace #> 381     636                           get #> 382     636                   asNamespace #> 383     641                        paste0 #> 384     643                         paste #> 385     643                        paste0 #> 386     643                        substr #> 387     646                   getAnywhere #> 388     649                 all_args_here #> 389     652                          stop #> 390     652                        paste0 #> 391     653                        ifelse #> 392     653                       is.null #> 393     654                        paste0 #> 394     655                        ifelse #> 395     660                  is.primitive #> 396     661                       as.list #> 397     661              suppressWarnings #> 398     661                       formals #> 399     661                          args #> 400     662                   asNamespace #> 401     664                           all #> 402     664                        typeof #> 403     665                             c #> 404     666                        length #> 405     678                       as.list #> 406     678                       formals #> 407     679                   asNamespace #> 408     682                       is.null #> 409     683                             c #> 410     684                             c #> 411     685                             c #> 412     686                             c #> 413     689                        sapply #> 414     690                        paste0 #> 415     690                        ifelse #> 416     690                           all #> 417     690                        typeof #> 418     692                       deparse #> 419     693                             c #> 420     697                         paste #> 421     697                        paste0 #> 422     697                         names #> 423     700                             c #> 424     702        .in_quotes_replacement #> 425     708                        length #> 426     710                        length #> 427     711                        length #> 428     712                        paste0 #> 429     715  nmiddle_bracket_open_in_col3 #> 430     716                        length #> 431     717                         paste #> 432     719 nmiddle_bracket_close_in_col3 #> 433     720                        length #> 434     721                         paste #> 435     724                          stop #> 436     724                        paste0 #> 437     726                        ifelse #> 438     726                       is.null #> 439     727                        paste0 #> 440     728                        ifelse #> 441     734                        length #> 442     735   .in_parenthesis_replacement #> 443     741                             c #> 444     744                           sub #> 445     744                        paste0 #> 446     749                           sub #> 447     752                      strsplit #> 448     755                       is.null #> 449     756                         nchar #> 450     759                           any #> 451     760                        paste0 #> 452     762                     npos_rep2 #> 453     763                        length #> 454     763                         paste #> 455     765                         paste #> 456     768                          stop #> 457     768                        paste0 #> 458     770                        ifelse #> 459     770                       is.null #> 460     771                        paste0 #> 461     772                        ifelse #> 462     778                        length #> 463     780                         nchar #> 464     782                           any #> 465     782                         is.na #> 466     784                        paste0 #> 467     787                        paste0 #> 468     790                          stop #> 469     790                        paste0 #> 470     792                        ifelse #> 471     792                       is.null #> 472     793                        paste0 #> 473     794                        ifelse #> 474     800                           any #> 475     801                        length #> 476     803                        substr #> 477     808                         nchar #> 478     813                         names #> 479     815                        length #> 480     815                        length #> 481     816                           any #> 482     817                        paste0 #> 483     820                  ntempo_split #> 484     820                        length #> 485     821                         paste #> 486     822               narg_full_names #> 487     823                        length #> 488     824                         paste #> 489     827                          stop #> 490     827                        paste0 #> 491     829                        ifelse #> 492     829                       is.null #> 493     830                        paste0 #> 494     831                        ifelse #> 495     837           .all_args_here_fill #> 496     843                             c #> 497     844                             c #> 498     845                             c #> 499     849                             c #> 500     850                             c #> 501     851                             c #> 502     852                             c #> 503     856                           all #> 504     856                             c #> 505     857                        paste0 #> 506     857                  as.character #> 507     860                        paste0 #> 508     864                        paste0 #> 509     867                       on.exit #> 510     867                           cat #> 511     867                        paste0 #> 512     872                    data.frame #> 513     878                   write.table #> 514     880                             c #> 515     884                        return #> 516     886                       is.null #> 517     887                       on.exit #> 518     887                       warning #> 519     887                        paste0 #> 520     888                        ifelse #> 521     888                       is.null #> 522     889                        paste0 #> 523     895                       on.exit #> 524     895                       optionsas.list(x = base::match.call(definition = base::sys.function(which = base::sys.parent(n = 0)),  call = base::sys.call(which = base::sys.parent(n = 0)),  expand.dots = FALSE, envir = base::parent.frame(n = 2L))) #> 2                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               match.call(definition = base::sys.function(which = base::sys.parent(n = 0)),  call = base::sys.call(which = base::sys.parent(n = 0)),  expand.dots = FALSE, envir = base::parent.frame(nsys.function(which = base::sys.parent(nsys.parent(nsys.call(which = base::sys.parent(nsys.parent(nparent.frame(n = 2L) #> 8                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         paste0(tempo_settings[[1]], \"()\",  collapse = NULL, recyclenames(x = base::formals(fun = base::sys.function(which = base::sys.parent(n = 2)),  envir = base::parent.frame(nformals(fun = base::sys.function(which = base::sys.parent(n = 2)),  envir = base::parent.frame(n = 1)) #> 11                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                sys.function(which = base::sys.parent(nsys.parent(nparent.frame(nall(safer_check %in% base::c(TRUE, FALSE), na.rm = FALSE) #> 15                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               clength(x = safer_checkall(base::is.logical(x = safer_check),  na.rmis.logical(x = safer_check) #> 19                                                                                                                                                                                                                                                                                                                paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nsafer_check ARGUMENT MUST BE EITHER TRUE OR FALSE. HER IT IS:\\\\n\",  base::paste0(safer_check, collapse = \"\\\\n\", recycle0 = FALSE),  collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste0(safer_check, collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) #> 25                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recyclebase_op_check(external_function_name = function_name,  external_package_name = package_nameis.null(x = lib_pathall(base::typeof(x = lib_path) == \"character\",  na.rm = FALSE) #> 29                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         typeof(x = lib_path) #> 30                                                                                                                                                                                                                                                                                     paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT MUST BE A VECTOR OF CHARACTERS:\\\\n\",  base::paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)) #> 32                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    is.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(lib_path, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycleall(base::dir.exists(paths = lib_path),  na.rm = TRUE) #> 38                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 dir.exists(paths = lib_path) #> 39                                                                                                                                                                                                                                                                                                    paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS:\\\\n\",  base::paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(lib_path, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclelibPaths(new = base::sub(x = lib_path, pattern = \"/$|\\\\\\\\\\\\\\\\$\",  replacement = \"\", ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytes = FALSE), include.sitesub(x = lib_path, pattern = \"/$|\\\\\\\\\\\\\\\\$\",  replacement = \"\", ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useByteslibPaths(new = , include.site = TRUE) #> 49                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       .libPaths(new = , include.site = TRUE) #> 50                                                                                                                                                                                                                                                                       .pack_and_function_check(fun = base::c(\"saferDev::arg_check\",  \"saferDev::is_function_here\", \"saferDev:::.functions_detect\",  \"saferDev:::.in_quotes_replacement\", \"saferDev:::.fun_args_pos\",  \"saferDev:::.extract_all_fun_names\", \"saferDev:::.in_parenthesis_replacement\",  \"saferDev:::.all_args_here_fill\"), lib_path = lib_path,  external_function_name = function_name, external_package_name = package_name) #> 51                                                                                                                                                                                                                                                                                                                                                                                                                 c(\"saferDev::arg_check\",  \"saferDev::is_function_here\", \"saferDev:::.functions_detect\",  \"saferDev:::.in_quotes_replacement\", \"saferDev:::.fun_args_pos\",  \"saferDev:::.extract_all_fun_names\", \"saferDev:::.in_parenthesis_replacement\",  \"saferDev:::.all_args_here_fillc(\"x\") #> 53                                                                                                                                                                                                                                                                  eval(expr = base::parse(text = base::paste0(\"base::c(base::missing(\",  base::paste0(mandat_args, collapse = \"),base::missing(\",  recycle0 = FALSE), \"))\", collapse = NULL, recycle0 = FALSE),  file = \"\", n = NULL, prompt = \"?\", keep.source = base::getOption(x = \"keep.source\",  default = NULL), srcfile = NULL, encoding = \"unknown\"),  envir = base::environment(fun = NULL), enclos = base::environment(fun = NULL)) #> 54                                                                                                                                                                                                                                                                                                                                                                     parse(text = base::paste0(\"base::c(base::missing(\",  base::paste0(mandat_args, collapse = \"),base::missing(\",  recycle0 = FALSE), \"))\", collapse = NULL, recycle0 = FALSE),  file = \"\", n = NULL, prompt = \"?\", keep.source = base::getOption(x = \"keep.source\",  default = NULL), srcfile = NULL, encoding = \"unknownpaste0(\"base::c(base::missing(\",  base::paste0(mandat_args, collapse = \"),base::missing(\",  recycle0 = FALSE), \"))\", collapse = NULL, recycle0 = FALSE) #> 56                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               NOT_CONSIDERED #> 57                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               NOT_CONSIDERED #> 58                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        paste0(mandat_args, collapse = \"),base::missing(\",  recyclegetOption(x = \"keep.source\",  defaultenvironment(fun = NULL) #> 62                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      environment(funany(tempo, na.rm = FALSE) #> 64                                                                                                                                                                                                                      paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nFOLLOWING ARGUMENT\", base::ifelse(test = base::sum(tempo,  na.rm = TRUE) > 1, yes = \"S HAVE\", no = \" HAS\"),  \" NO DEFAULT VALUE AND REQUIRE ONE:\\\\n\", base::paste0(mandat_args[tempo],  collapse = \"\\\\n\", recycle0 = FALSE), collapse = NULL,  recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo,  na.rm = TRUE) > 1, yes = \"S HAVE\", nosum(tempo,  na.rmpaste0(mandat_args[tempo],  collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycleexpression(argum_check <- base::c(argum_check,  tempo$problem), text_check <- base::c(text_check, tempo$text),  checked_arg_names <- base::c(checked_arg_names, tempo$object.namec(argum_check,  tempo$problemc(text_check, tempo$textc(checked_arg_names, tempo$object.name) #> 77                                                                                                                                                                                                                                                                                                                                     arg_check(data = x, class = \"function\",  typeof = NULL, mode = NULL, length = NULL, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = TRUE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_check = FALSE) #> 78                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              eval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(fun = NULL) #> 81                                                                                                                                                                                                                                                                                                                               arg_check(data = export, class = \"vector\",  typeof = \"logical\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(fun = NULL) #> 85                                                                                                                                                                                                                                                                                                                           arg_check(data = path_out, class = \"vector\",  typeof = \"character\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(fun = NULL)) #> 87                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      environment(funenvironment(fun = NULL) #> 89                                                                                                                                                                                                                                                                                                                            arg_check(data = df_name, class = \"vector\",  typeof = \"character\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(fun = NULL) #> 93                                                                                                                                                                                                                                                                                                                            arg_check(data = overwrite, class = \"vector\",  typeof = \"logical\", mode = NULL, length = 1, prop = FALSE,  double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE,  na_contain = FALSE, neg_values = TRUE, inf_values = TRUE,  print = FALSE, data_name = NULL, fun_name = function_name,  pack_name = package_name, safer_checkeval(expr = ee, envir = base::environment(fun = NULL),  enclos = base::environment(funenvironment(funenvironment(funis.null(x = argum_checkany(argum_check, na.rm = TRUE) #> 99                                                                                                                                                                                                                                                                                                                                                                                                                                                 stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  base::paste(text_check[argum_check], sep = \" \",  collapse = \"\\\\n\", recycle0 = FALSE), \"\\\\n\\\\n================\\\\n\\\\n\",  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) #> 100                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  base::paste(text_check[argum_check], sep = \" \",  collapse = \"\\\\n\", recycle0 = FALSE), \"\\\\n\\\\n================\\\\n\\\\n\",  collapse = NULL, recyclepaste(text_check[argum_check], sep = \" \",  collapse = \"\\\\n\", recyclelength(x = arg_user_setting) #> 103                                                                                                                                                                                                                                                                                                                                                                                                                                                     suppressWarnings(expr = base::sapply(X = base::lapply(X = arg_user_setting,  FUN = function(x) { base::is.na(x = x) }), FUN = function(x) { base::any(x = x, na.rm = FALSE) }, simplify = TRUE, USE.NAMES = TRUE), classes = \"warning\") #> 104                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         sapply(X = base::lapply(X = arg_user_setting,  FUN = function(x) { base::is.na(x = x) }), FUN = function(x) { base::any(x = x, na.rm = FALSE) }, simplify = TRUE, USE.NAMES = TRUE) #> 105                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     lapply(X = arg_user_setting,  FUN = function(x) { base::is.na(x = x) }is.na(x = xany(x = x, na.rmlapply(X = arg_user_setting, FUN = function(x) { base::length(x = x) }length(x = xany(tempo_log, na.rm = FALSE) #> 111                                                                                                                                                                                                                                 paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\",  no = \"THIS ARGUMENT\"), \" CANNOT JUST BE NA:\",  base::paste0(arg_names[tempo_log], collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\",  nosum(tempo_log,  na.rmpaste0(arg_names[tempo_log], collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) #> 119                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclec(\"x\", \"export\", \"path_out\", \"df_name\",  \"overwrite\", \"safer_check\") #> 121                                                                                                                                                                                                                                                                                                                                                                                                                                              sapply(X = base::lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }), FUN = function(x) { base::is.null(x = x) }, simplify = TRUE, USE.NAMES = TRUE) #> 122                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inheritsparent.frame(nis.null(x = xany(tempo_log, na.rm = FALSE) #> 127                                                                                                                                                                                                                             paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS\\\\n\", no = \"THIS ARGUMENT\\\\n\"),  base::paste0(tempo_arg[tempo_log], collapse = \"\\\\n\",  recycle0 = FALSE), \"\\\\nCANNOT BE NULL\", collapse = NULL,  recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_name) #> 130                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS\\\\n\", no = \"THIS ARGUMENT\\\\n\") #> 132                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                sum(tempo_log, na.rmpaste0(tempo_arg[tempo_log], collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) #> 135                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recyclec(\"path_out\", \"df_name\", \"lib_path\") #> 137                                                                                                                                                                                                                                                                                                                                               sapply(X = base::lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }), FUN = function(x) { if (base::is.null(x = x)) { base::return(TRUE) } else { base::all(base::mode(x = x) == \"character\", na.rm = TRUE) } }, simplify = TRUE, USE.NAMES = TRUE) #> 138                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }) #> 139                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inheritsparent.frame(nis.null(x = xreturnall(base::mode(x = x) == \"character\", na.rm = TRUE) #> 144                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 mode(x = xany(tempo_log, na.rm = TRUE) #> 146                                                                                                                                                                                                       paste0(\"INTERNAL ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS ARE\", no = \"THIS ARGUMENT IS\"),  \" NOT MODE \\\\\"character\\\\\":\\\\n\", base::paste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recycle0 = FALSE), collapse = NULL,  recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log, na.rm = TRUE) >  1, yes = \"THESE ARGUMENTS ARE\", nosum(tempo_log, na.rmpaste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recycle0 = FALSE) #> 153                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE),  call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo_cat,  \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE) #> 155                                                                                                                                                                                                                                                                                                                                                                                                                                 sapply(X = base::lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }), FUN = function(x) { base::any(x == \"\", na.rm = FALSE) }, simplify = TRUE, USE.NAMES = TRUE) #> 156                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               lapply(X = tempo_arg,  FUN = function(x) { base::get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inherits = FALSE) }get(x = x, pos = -1L, envir = base::parent.frame(n = 2),  mode = \"any\", inheritsparent.frame(nany(x == \"\", na.rmany(tempo_log, na.rm = TRUE) #> 161                                                                                                                                                                                                                      paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\", base::ifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\\\\n\",  no = \"THIS ARGUMENT\\\\n\"), base::paste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recycle0 = FALSE), \"\\\\nCANNOT CONTAIN \\\\\"\\\\\"\",  collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_name) #> 164                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleifelse(test = base::sum(tempo_log,  na.rm = TRUE) > 1, yes = \"THESE ARGUMENTS\\\\n\",  no = \"THIS ARGUMENT\\\\nsum(tempo_log,  na.rmpaste0(tempo_arg[tempo_log],  collapse = \"\\\\n\", recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclecoptionsoptions(warning.lengthis.null(x = lib_pathall(base::dir.exists(paths = lib_path), na.rmdir.exists(paths = lib_path) #> 176                                                                                                                                                                                                                                                                                                   paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE lib_path ARGUMENT DOES NOT EXISTS:\\\\n\",  base::paste(lib_path, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(lib_path, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycleall(base::dir.exists(paths = path_out), na.rmdir.exists(paths = path_out) #> 185                                                                                                                                                                                                                                                                                                   paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE path_out ARGUMENT DOES NOT EXISTS:\\\\n\",  base::paste(path_out, sep = \" \", collapse = \"\\\\n\",  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste(path_out, sep = \" \", collapse = \"\\\\n\",  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recyclegrepl(x = path_out, pattern = \"/$\", ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytessub(pattern = \"/$\", replacement = \"\",  x = path_out, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytesgrepl(x = path_out, pattern = \"\\\\\\\\\\\\\\\\$\",  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytessub(pattern = \"\\\\\\\\\\\\\\\\$\", replacement = \"\",  x = path_out, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytesdir.exists(paths = path_out) #> 197                                                                                                                                                                                                                                                                                                                                                                paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nDIRECTORY PATH INDICATED IN THE path_out ARGUMENT DOES NOT EXISTS:\\\\n\",  path_out, collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)) #> 199                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   is.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domainpaste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE) #> 203                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       file.exists(base::paste0(path_out, \"/\",  df_name, collapse = NULL, recyclepaste0(path_out, \"/\",  df_name, collapse = NULL, recycle0 = FALSE) #> 205                                                                                                                                                                                                                                                                                                                   paste0(\"ERROR IN \", function_name,  base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\nFILE NAME ALREADY EXISTS AT THE INDICATED PATH:\\\\n\",  base::paste0(path_out, \"/\", df_name, collapse = NULL,  recycle0 = FALSE), collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleis.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recyclepaste0(path_out, \"/\", df_name, collapse = NULL,  recyclestop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) #> 211                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", collapse = NULL,  recycledeparse(expr = arg_user_setting$x,  width.cutoff = 60L, backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"), nlines = -1L) #> 213                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributespaste0(path_out, \"/\", df_name, collapse = NULL,  recyclefunctions_detect(x = x, arg_user_setting = arg_user_setting,  function_name = function_name, package_name = package_namepaste(out$code, collapse = \" \", recycle0 = FALSE,  sepgrepl(x = fun_1_line, pattern = reserved_words,  ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE) #> 218                                                                                                                                                                                                                                                                                                                                                                                                                    paste0(\"(\", warn_count, \") THE RESERVED WORD \\\\\"\",  base::paste(reserved_words, collapse = \" \", recycle0 = FALSE),  \"\\\\\" HAS BEEN DETECTED IN THE CODE OF THE INPUT FUNCTION\\\\nWHICH COULD HAMPER THE ACCURACY OF THE OUTPUT TABLE\",  collapse = NULL, recyclepaste0(base::ifelse(test = base::is.null(x = warn),  yes = tempo_warn, no = base::paste0(warn, \"\\\\n\\\\n\",  tempo_warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycleifelse(test = base::is.null(x = warn),  yes = tempo_warn, no = base::paste0(warn, \"\\\\n\\\\n\",  tempo_warn, collapse = NULL, recycleis.null(x = warnpaste0(warn, \"\\\\n\\\\n\",  tempo_warn, collapse = NULL, recyclecumsum(x = base::nchar(x = out$code,  type = \"chars\", allowNA = FALSE, keepnchar(x = out$code,  type = \"chars\", allowNA = FALSE, keepc(0, cum_nchar_code_line[-base::length(x = cum_nchar_code_linelength(x = cum_nchar_code_line) #> 228                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        .in_quotes_replacement(string = fun_1_line,  pattern = \"\\\\\\\\)\", no_regex_pattern = \")\", replacement = \" \",  perl = TRUE, function_name = function_name, package_name = package_name) #> 229                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                .in_quotes_replacement(string = fun_1_line_replace,  pattern = \"\\\\\\\\(\", no_regex_pattern = \"(\", replacement = \" \",  perl = TRUE, function_name = function_name, package_name = package_namesort(x = base::c(pos_rep, tempo$pos), decreasingc(pos_rep, tempo$poslapply(X = fun_names,  FUN = function(x) { base::lapply(X = x, FUN = function(y) { NULL }) }lapply(X = x, FUN = function(y) { NULL }length(x = fun_namesas.integer(x = base::sub(pattern = \"^c\",  replacement = \"\", x = base::names(x = fun_names)[i1],  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytes = FALSE)) #> 236                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            sub(pattern = \"^c\",  replacement = \"\", x = base::names(x = fun_names)[i1],  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytes = FALSE) #> 237                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        names(x = fun_nameswhich(x = code_line_nb %in% tempo_pos_in_code,  arr.ind = FALSE, useNameslength(x = fun_names[[inchar(x = fun_names[[i1]][i2],  type = \"chars\", allowNA = FALSE, keepsubstr(x = fun_1_line_replace,  start = fun_pos_start, stop = fun_pos_stop) #> 242                                                                                                                                                                                                                                                                                                                                                                                         paste0(\"INTERNAL ERROR 2 IN \",  function_name, \" OF THE \", package_name, \" PACKAGE\\\\ntempo_fun MUST BE IDENTICAL TO fun_names[[i1]][i2]\\\\n\\\\ntempo_fun: \",  tempo_fun, \"\\\\n\\\\nfun_names[[i1]][i2]: \", fun_names[[i1]][i2],  \"\\\\n\\\\ni1: \", i1, \"\\\\n\\\\ni2: \", i2, collapse = NULL,  recycle0 = FALSE) #> 243                                                                                                                                                                                                                                                                                                       stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) #> 244                                                                                                                                                                                                                                                                                                                                                  paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE) #> 245                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nosubstr(x = fun_1_line_replace,  start = fun_pos_stop + 1, stop = base::nchar(x = fun_1_line_replace,  type = \"chars\", allowNA = FALSE, keepnchar(x = fun_1_line_replace,  type = \"chars\", allowNA = FALSE, keepgrepl(x = tempo_str_after, pattern = \"^[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\",  ignore.case = FALSE, perl = TRUE, fixed = FALSE,  useBytes = FALSE) #> 252                                                                                                                                                                                                                                                                                                                                                                                                                                                                          .fun_args_pos(text = fun_1_line_replace,  pattern = base::paste0(fun_names[[i1]][i2],  \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL, recycle0 = FALSE),  function_name = function_name, package_name = package_namepaste0(fun_names[[i1]][i2],  \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL, recycle0 = FALSE) #> 254                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        substr(x = fun_1_line_replace,  start = 1, stop = fun_pos_startgrepl(x = tempo_str_before,  pattern = \"\\\\\\\\$ *$\", ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytessubstr(x = fun_1_line_replace, start = 1,  stop = fun_pos_startpaste(base::rep(x = \" \",  fun_pos_start - 1), collapse = \"\", recycle0 = FALSE,  seprep(x = \" \",  fun_pos_startsubstr(x = fun_1_line,  start = tempo_pos$begin_fun, stop = tempo_pos$endsubstr(x = fun_1_line,  start = tempo_pos$begin + 1, stop = tempo_pos$endis.null(x = tempo_pos$middle_bracket_posunlist(x = tempo_pos$middle_bracket_pos,  recursive = TRUE, use.namessubstr(x = fun_1_line_replace, start = 1,  stop = tempo_pos$beginpaste(base::rep(x = \" \",  tempo_pos$begin - 1), collapse = \"\", recycle0 = FALSE,  sep = \" \") #> 265                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          rep(x = \" \",  tempo_pos$beginlapply(X = fun_names, FUN = function(x) { base::lapply(X = x, FUN = function(y) { NULL }) }lapply(X = x, FUN = function(y) { NULL }length(x = fun_nameslength(x = fun_names[[ipaste0(fun_names[[i1]][i2], \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\",  collapse = NULL, recyclegrepl(x = arg_string_for_col3[[i1]][i2],  pattern = pattern2, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytes = FALSE) #> 272                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    .in_quotes_replacement(string = arg_string_for_col3[[i1]][i2],  pattern = \"\\\\\\\\(\", no_regex_pattern = \"(\", replacement = \" \",  perl = TRUE, function_name = function_name,  package_name = package_name) #> 273                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    .in_quotes_replacement(string = tempo1$string,  pattern = \"\\\\\\\\)\", no_regex_pattern = \")\", replacement = \" \",  perl = TRUE, function_name = function_name,  package_name = package_namefun_args_pos(text = tempo2$string,  pattern = pattern2, function_name = function_name,  package_name = package_nameis.null(x = tempo_pos$middle_bracket_pos) #> 276                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               unlist(x = tempo_pos$middle_bracket_pos,  recursive = TRUE, use.names = TRUE) #> 277                                                                                                                                                                                                                                                                                                                                                                                                                                     as.vector(x = base::unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE),  mode = \"any\") #> 278                                                                                                                                                                                                                                                                                                                                                                                                                                                                         unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.namesmapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_for_col, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE) #> 280                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             rep(x = y, base::length(x = xlength(x = x) #> 282                                                                                                                                                                                                                                                                                                                                                                                                                                     as.vector(x = base::unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE),  mode = \"any\") #> 283                                                                                                                                                                                                                                                                                                                                                                                                                                                                         unlist(x = base::mapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.namesmapply(FUN = function(x,  y) { base::rep(x = y, base::length(x = x)) }, x = fun_names, y = code_line_nb, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE) #> 285                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             rep(x = y, base::length(x = xlength(x = xas.vector(x = base::unlist(x = fun_names, recursive = TRUE,  use.names = TRUE), mode = \"any\") #> 288                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  unlist(x = fun_names, recursive = TRUE,  use.namesas.vector(x = base::unlist(x = arg_string_for_col3,  recursive = TRUE, use.names = TRUE), mode = \"anyunlist(x = arg_string_for_col3,  recursive = TRUE, use.namesas.vector(x = base::unlist(x = fun_names_pos,  recursive = TRUE, use.names = TRUE), mode = \"anyunlist(x = fun_names_pos,  recursive = TRUE, use.namesdo.call(what = base::c, args = mid_bracket_pos_in_col3,  quote = FALSE, envir = base::parent.frame(nparent.frame(nlapply(X = middle_bracket,  FUN = function(x) { if (!base::is.null(x = x)) { x[base::seq(1, base::length(x = x), by = 2)] } else { NULL } }) #> 296                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              is.null(x = xseq(1, base::length(x = x), by = 2) #> 298                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               length(x = xlapply(X = middle_bracket,  FUN = function(x) { if (!base::is.null(x = x)) { x[base::seq(2, base::length(x = x), by = 2)] } else { NULL } }is.null(x = xseq(2, base::length(x = x), bylength(x = x) #> 303                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            length(x = col1) #> 304                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            length(x = collength(x = collength(x = collength(x = collength(x = collength(x = collength(x = code_for_collength(x = collength(x = middle_bracket) #> 313                                                                                                                                                                                                                                                          paste0(\"INTERNAL ERROR 3 IN \", function_name,  \" OF THE \", package_name, \" PACKAGE\\\\nLENGTHS OF col1 (\",  base::length(x = col1), \"), col2 (\", base::length(x = col2),  \"), col3 (\", base::length(x = col3), \"), col4 (\",  base::length(x = col4), \"), code_for_col (\", base::length(x = code_for_col),  \"), AND middle_bracket (\", base::length(x = middle_bracket),  \"), SHOULD BE EQUAL\\\\n\", collapse = NULL, recyclelength(x = collength(x = collength(x = collength(x = collength(x = code_for_collength(x = middle_bracket) #> 326                                                                                                                                                                                                                                                                                                       stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) #> 327                                                                                                                                                                                                                                                                                                                                                  paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE) #> 328                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  no = \"\") #> 332 as.vector(x = base::unlist(x = base::mapply(FUN = function(x,  y) { if (y != \"\") { if (base::grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytes = FALSE) | base::grepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE)) { base::return(FALSE) } else { base::return(TRUE) } } else { base::return(FALSE) } }, x = col2, y = col3, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE),  mode = \"any\") #> 333                                     unlist(x = base::mapply(FUN = function(x,  y) { if (y != \"\") { if (base::grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytes = FALSE) | base::grepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE)) { base::return(FALSE) } else { base::return(TRUE) } } else { base::return(FALSE) } }, x = col2, y = col3, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE), recursive = TRUE, use.names = TRUE) #> 334                                                                                           mapply(FUN = function(x,  y) { if (y != \"\") { if (base::grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytes = FALSE) | base::grepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE)) { base::return(FALSE) } else { base::return(TRUE) } } else { base::return(FALSE) } }, x = col2, y = col3, MoreArgs = NULL, SIMPLIFY = TRUE,  USE.NAMES = TRUE) #> 335                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    grepl(x = y, pattern = base::paste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recycle0 = FALSE), ignore.case = FALSE, perl = TRUE,  fixed = FALSE, useBytespaste0(\"^\",  x, \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(.*\\\\\\\\)$\", collapse = NULL,  recyclegrepl(x = y,  pattern = base::paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recycle0 = FALSE), ignore.case = FALSE,  perl = FALSE, fixed = FALSE, useBytes = FALSE) #> 338                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        paste0(\"^\", reserved_words, \"$\",  collapse = NULL, recyclereturnreturnreturnany(tempo.log, na.rm = TRUE) #> 343                                                                                                                                                                                                                                                                                                                                                         paste0(\"INTERNAL ERROR 4 IN \", function_name,  \" OF THE \", package_name, \" PACKAGE\\\\ncol3 MUST BE MADE OF STRINGS STARTING BY\\\\n\\\\\"<FUNCTION_NAME>[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\\\\\"\\\\nAND FINISHING BY\\\\\")\\\\\"\\\\nHERE IT IS:\\\\n\\\\n\",  base::paste(col3, collapse = \"\\\\n\", recycle0 = FALSE,  sep = \" \"), collapse = NULL, recyclepaste(col3, collapse = \"\\\\n\", recycle0 = FALSE,  sep = \" \") #> 345                                                                                                                                                                                                                                                                                                       stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) #> 346                                                                                                                                                                                                                                                                                                                                                  paste0(\"\\\\n\\\\n================\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL, recycle0 = FALSE) #> 347                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  noany(tempo_log, na.rmlength(x = col1) #> 353                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               cat(\"\\\\n\\\\nEVERYTHING SEEMS CLEAN\\\\n\\\\n\", file = \"\",  sep = \" \", fill = FALSE, labels = NULL, appendlength(x = col1) #> 355                    paste0(\"ERROR IN \",  function_name, \" OF THE \", package_name, \" PACKAGE\\\\nCANNOT GET THE ARGUMENTS OF A FUNCTION THAT IS NOT ASSOCIATED TO ITS PACKAGE IN LINE \",  col1[i2], \":\\\\n\\\\n\", base::paste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\nPLEASE, RUN saferDev::colons_check(\",  arg_user_setting$x, \") FIRST,\\\\nADD THE MISSING <PACKAGE>::<FUNCTION> (OR <PACKAGE>:::<FUNCTION> FOR FUNCTION STARTING BY A DOT)\\\\nAND RERUN saferDev::all_args_here(\",  arg_user_setting$x, \")\", collapse = NULL, recyclepaste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, seppaste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recyclesubstr(x = code_for_col[i2],  start = 1, stop = col4[istop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) #> 362                                                                                                                                                                                                                                                                                                                                     paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE) #> 363                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)) #> 364                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           is.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nosubstr(x = code_for_col[i2],  start = col4[i2] - 2, stop = col4[i2] - 1) #> 368                                                                                                                                                                                                                                                                                           stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) #> 369                                                                                                                                                                                                                                                                                                                                     paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo_cat_fun_exists, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE) #> 370                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE) #> 373                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ifelse(test = warn_count > 1, yes = \"S\",  nosubstr(x = code_for_col[i2],  start = 1, stop = col4[iextract_all_fun_names(text = tempo_string,  pattern = \"[a-zA-Z][a-zA-Z0-9.]*:{2,3}is_function_here(fun = base::paste0(tempo_package_name_colons,  col2[i2], collapse = NULL, recycle0 = FALSE),  lib_path = NULL, safer_checkpaste0(tempo_package_name_colons,  col2[i2], collapse = NULL, recycle0 = FALSE) #> 378                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                sub(pattern = \":+$\",  replacement = \"\", x = tempo_package_name_colons,  ignore.case = FALSE, perl = FALSE, fixed = FALSE,  useBytesexists(x = col2[i2], where = -1,  envir = base::getNamespace(name = tempo_package_name),  frame = NULL, mode = \"any\", inheritsgetNamespace(name = tempo_package_nameget(x = col2[i2], envir = base::asNamespace(ns = tempo_package_name,  base.OK = TRUE), mode = \"function\", inherits = FALSE,  posasNamespace(ns = tempo_package_name,  base.OK = TRUE) #> 383     paste0(\"ERROR IN \", function_name,  \" OF THE \", package_name, \" PACKAGE\\\\nCANNOT GET THE ARGUMENTS OF A FUNCTION THAT IS NOT CORRECTLY ASSOCIATED TO ITS PACKAGE IN LINE \",  col1[i2], \":\\\\n\\\\n\", base::paste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\nPLEASE, RUN utils::getAnywhere('\",  col2[i2], \"')$where FIRST,\\\\nCORRECT THE LINE \",  col1[i2], \" IN \", arg_user_setting$x, \"\\\\nSAVE AND REIMPORT \",  arg_user_setting$x, \"\\\\nAND RERUN saferDev::all_args_here(\",  arg_user_setting$x, \")\", collapse = NULL,  recyclepaste(base::paste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recycle0 = FALSE), collapse = \"\\\\n\",  recycle0 = FALSE, seppaste0(base::substr(x = code_for_col[i2],  start = 1, stop = col4[i2] - 1), col3[i2],  collapse = NULL, recyclesubstr(x = code_for_col[i2],  start = 1, stop = col4[istop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE), call. = FALSE, domain = NULL) #> 390                                                                                                                                                                                                                                                                                                                                                 paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\", base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycle0 = FALSE)), collapse = NULL,  recycle0 = FALSE) #> 391                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1, yes = \"S\",  no = \"\"), \":\\\\n\\\\n\", warn, collapse = NULL,  recycleifelse(test = warn_count > 1, yes = \"S\",  nois.primitive(x = tempo_fun2) #> 396                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     as.list(x = base::suppressWarnings(expr = base::formals(fun = base::args(name = col2[i2]),  envir = base::asNamespace(ns = tempo_package_name,  base.OK = TRUE)), classes = \"warningsuppressWarnings(expr = base::formals(fun = base::args(name = col2[i2]),  envir = base::asNamespace(ns = tempo_package_name,  base.OK = TRUE)), classes = \"warning\") #> 398                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            formals(fun = base::args(name = col2[i2]),  envir = base::asNamespace(ns = tempo_package_name,  baseargs(name = col2[iasNamespace(ns = tempo_package_name,  baseall(base::typeof(x = tempo_fun2) %in%  base::c(\"special\", \"symbol\"), na.rmtypeof(x = tempo_func(\"special\", \"symbol\") #> 404                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  length(x = tempo_all_argsas.list(x = base::formals(fun = col2[i2],  envir = base::asNamespace(ns = tempo_package_name,  baseformals(fun = col2[i2],  envir = base::asNamespace(ns = tempo_package_name,  baseasNamespace(ns = tempo_package_name,  baseis.null(x = arg_fullc(col5, \"NO_ARGS\") #> 410                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 c(colc(colc(col8, \"\") #> 413                                                                                                                                                                                                                                                                                            sapply(X = arg_full, FUN = function(x) { base::paste0(base::ifelse(test = base::all(base::typeof(x = x) ==  \"symbol\", na.rm = TRUE), yes = \"\", no = \" = \"),  base::deparse(expr = x, width.cutoff = 60L,  backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"),  nlines = -1L), collapse = NULL, recycle0 = FALSE) }, simplify = TRUE, USE.NAMES = TRUE) #> 414                                                                                                                                                                                                                                                                                                                                                                                 paste0(base::ifelse(test = base::all(base::typeof(x = x) ==  \"symbol\", na.rm = TRUE), yes = \"\", no = \" = \"),  base::deparse(expr = x, width.cutoff = 60L,  backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"),  nlines = -1L), collapse = NULL, recycleifelse(test = base::all(base::typeof(x = x) ==  \"symbol\", na.rm = TRUE), yes = \"\", noall(base::typeof(x = x) ==  \"symbol\", na.rmtypeof(x = xdeparse(expr = x, width.cutoff = 60L,  backtick = FALSE, control = base::c(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributes\"),  nlinesc(\"keepNA\",  \"keepInteger\", \"niceNames\", \"showAttributespaste(base::paste0(base::names(x = tempo),  tempo, collapse = NULL, recycle0 = FALSE),  collapse = \", \", recycle0 = FALSE, seppaste0(base::names(x = tempo),  tempo, collapse = NULL, recyclenames(x = tempoc(col5, tempo) #> 424                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           .in_quotes_replacement(string = tempo_col3,  pattern = \",\", no_regex_pattern = \",\", replacement = \" \",  perl = TRUE, function_name = function_name,  package_name = package_namelength(x = middle_bracket_open_in_col3[[ilength(x = middle_bracket_open_in_col3[[ilength(x = middle_bracket_close_in_col3[[i2]]) #> 428                                                  paste0(\"INTERNAL ERROR 5 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\nmiddle_bracket_open_in_col3 AND middle_bracket_close_in_col3 MUST HAVE THE SAME LENGTH IN LOOP \",  i2, \"\\\\n\\\\nmiddle_bracket_open_in_col3 (\",  base::length(x = middle_bracket_open_in_col3),  \"):\\\\n\", base::paste(middle_bracket_open_in_col3,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\nmiddle_bracket_close_in_col3 (\",  base::length(x = middle_bracket_close_in_col3),  \"):\\\\n\", base::paste(middle_bracket_close_in_col3,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\ni2:\\\\n\", i2, collapse = NULL, recyclelength(x = middle_bracket_open_in_colpaste(middle_bracket_open_in_col3,  collapse = \" \", recycle0 = FALSE, seplength(x = middle_bracket_close_in_colpaste(middle_bracket_close_in_col3,  collapse = \" \", recycle0 = FALSE, sep = \" \") #> 435                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) #> 436                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) #> 437                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleifelse(test = warn_count >  1, yes = \"S\", nolength(x = middle_bracket_open_in_col3[[i2]]) #> 442                                                                                                                                                                                                                                                                                                                                                                                               .in_parenthesis_replacement(string = tempo_col3,  pattern = \",\", no_regex_pattern = \",\",  replacement = \" \", perl = TRUE, open_pos = middle_bracket_open_in_col3[[i2]][i6],  close_pos = middle_bracket_close_in_col3[[i2]][i6],  function_name = function_name, package_name = package_namec(pos_rep2, tempo$pos) #> 444                                                                                                                                                                                                                                                                                                                                                                                                                                                                           sub(pattern = base::paste0(\"^\",  col2[i2], \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL,  recycle0 = FALSE), replacement = \"\", x = tempo_col3,  ignore.case = FALSE, perl = TRUE, fixed = FALSE,  useBytespaste0(\"^\",  col2[i2], \"[\\\\\\\\s\\\\\\\\r\\\\\\\\n]*\\\\\\\\(\", collapse = NULL,  recycle0 = FALSE) #> 446                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               sub(pattern = \"\\\\\\\\)$\", replacement = \"\",  x = obs_args, ignore.case = FALSE, perl = FALSE,  fixed = FALSE, useBytesstrsplit(x = obs_args,  split = \",\", fixed = FALSE, perl = FALSE,  useBytes = FALSE) #> 448                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       is.null(x = pos_repnchar(x = col2[i2],  type = \"chars\", allowNA = FALSE, keepany(pos_rep2 <= 0, na.rm = TRUE) #> 451                                                                                                                                                                                                                                                            paste0(\"INTERNAL ERROR 6 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\nPOSITIONS OF REMOVED COMMAS CANOT OR LESS\\\\n\\\\npos_rep2 (\",  base::length(x = pos_rep2), \"):\\\\n\", base::paste(pos_rep2,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\nARGUMENT STRING obs_args:\\\\n\", base::paste(obs_args,  collapse = \" \", recycle0 = FALSE, sep = \" \"),  \"\\\\n\\\\ni2:\\\\n\", i2, collapse = NULL, recyclelength(x = pos_reppaste(pos_rep2,  collapse = \" \", recycle0 = FALSE, seppaste(obs_args,  collapse = \" \", recycle0 = FALSE, sep = \" \") #> 456                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) #> 457                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) #> 458                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE) #> 461                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          ifelse(test = warn_count >  1, yes = \"S\", nolength(x = tempo_splitnchar(x = tempo_split[i6], type = \"chars\",  allowNA = FALSE, keepany(base::is.na(x = tempo_log),  na.rmis.na(x = tempo_log) #> 466                                                                                                                                                                                                                                                                                                                                                                                                                                                                          paste0(\"INTERNAL ERROR 7 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\ntempo_log CONTAINS NA:\\\\n\",  base::paste0(tempo_log, collapse = \" \",  recycle0 = FALSE), collapse = NULL,  recyclepaste0(tempo_log, collapse = \" \",  recycle0 = FALSE) #> 468                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE),  call. = FALSE, domain = NULL) #> 469                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) #> 470                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycle0 = FALSE)) #> 471                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           is.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count >  1, yes = \"S\", no = \"\"), \":\\\\n\\\\n\",  warn, collapse = NULL, recycleifelse(test = warn_count >  1, yes = \"S\", no = \"\") #> 474                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                any(tempo_log, na.rmlength(x = tempo_logsubstr(x = tempo_split[i6],  start = pos_rep2[i7], stop = pos_rep2[inchar(x = tempo_split[i6],  type = \"chars\", allowNA = FALSE, keepnames(x = arg_full) #> 479                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     length(x = tempo_splitlength(x = arg_full_namesany(three_dots_log, na.rm = TRUE) #> 482                                                                                                  paste0(\"INTERNAL ERROR 8 IN \",  function_name, \" OF THE \", package_name,  \" PACKAGE\\\\nLENGTH OF tempo_split MUST LOWER OR EQUAL TO LENGTH OF arg_full_names IF ... IS NOT AN ARGUMENT OF THE FUNCTION\\\\n\\\\nFUNCTION: \",  col2[i2], \"\\\\n\\\\ntempo_split (\", base::length(x = tempo_split),  \"):\\\\n\", base::paste(tempo_split, collapse = \"\\\\n\",  recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\narg_full_names (\",  base::length(x = arg_full_names), \"):\\\\n\",  base::paste(arg_full_names, collapse = \"\\\\n\",  , recycle0 = FALSE, sep = \" \"), \"\\\\n\\\\ni2:\\\\n\",  i2, collapse = NULL, recycle0 = FALSE) #> 483                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              NOT_CONSIDERED #> 484                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     length(x = tempo_splitpaste(tempo_split, collapse = \"\\\\n\",  recycle0 = FALSE, seplength(x = arg_full_namespaste(arg_full_names, collapse = \"\\\\n\",  , recycle0 = FALSE, sep = \" \") #> 489                                                                                                                                                                                                                                                                                                     stop(base::paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE), call. = FALSE,  domain = NULL) #> 490                                                                                                                                                                                                                                                                                                                                                paste0(\"\\\\n\\\\n================\\\\n\\\\n\",  tempo.cat, \"\\\\n\\\\n================\\\\n\\\\n\",  base::ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycle0 = FALSE)),  collapse = NULL, recycle0 = FALSE) #> 491                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ifelse(test = base::is.null(x = warn),  yes = \"\", no = base::paste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycleis.null(x = warnpaste0(\"IN ADDITION\\\\nWARNING\",  base::ifelse(test = warn_count > 1,  yes = \"S\", no = \"\"), \":\\\\n\\\\n\", warn,  collapse = NULL, recycleifelse(test = warn_count > 1,  yes = \"S\", no = \"\") #> 495                                                                                                                                                                                                                                                                                                                                                      .all_args_here_fill(arg_full = arg_full,  arg_full_names = arg_full_names, tempo_split = tempo_split,  three_dots_log = three_dots_log, i2 = i2,  col1_i2 = col1[i2], col2_i2 = col2[i2], arg_user_setting_x = arg_user_setting$x,  function_name = function_name, package_name = package_name,  warn = warn, warn_count = warn_countc(col6, tempo_out$col6) #> 497                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     c(col7, tempo_out$colc(col8, tempo_out$colc(colc(colc(colc(colall(col8 %in% base::c(\"\", \"GOOD\"), na.rmcpaste0(\"INSIDE \", base::as.character(x = out$arg_user_setting$x),  \"(), EVERYTHING SEEMS CLEAN\", collapse = NULL, recycle0 = FALSE) #> 506                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    as.character(x = out$arg_user_setting$xpaste0(\"RESULT EXPORTED IN\\\\n\",  path_out, \"\\\\nBUT \", tempo.cat, collapse = NULL,  recyclepaste0(\"AFTER RUNNING \", function_name,  \" OF THE \", package_name, \" PACKAGE:\\\\n\", tempo.cat,  collapse = NULL, recycle0 = FALSE) #> 509                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   on.exit(expr = base::cat(base::paste0(\"\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE), file = \"\",  sep = \" \", fill = FALSE, labels = NULL, append = FALSE),  add = TRUE, aftercat(base::paste0(\"\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE), file = \"\",  sep = \" \", fill = FALSE, labels = NULL, appendpaste0(\"\\\\n\\\\n\", tempo.cat,  \"\\\\n\\\\n\", collapse = NULL, recycle0 = FALSE) #> 512                                                                                                                                                                                                                                                                                                                                                                                                                 data.frame(LINE_NB = col1, FUN_NAME = col2,  FUN_ARGS = col3, FUN_POS = col4, DEF_ARGS = col5, MISSING_ARG_NAMES = col6,  MISSING_ARGS = col7, STATUS = col8, row.names = NULL,  check.rows = FALSE, check.names = TRUE, fix.empty.names = TRUE,  stringsAsFactors = FALSE) #> 513                                                                                                                                                                                                                                                                                                                                                                                                                                                                     write.table(x = output, file = path_out, row.names = FALSE,  col.names = TRUE, append = FALSE, quote = FALSE,  sep = \"\\\\t\", eol = \"\\\\n\", na = \"\", dec = \".\", qmethod = base::c(\"escape\",  \"double\"), fileEncodingc(\"escape\",  \"doublereturn(output) #> 516                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           is.null(x = warn) #> 517                                                                                                                                                                                                                                                                                                     on.exit(expr = base::warning(base::paste0(\"FROM \",  function_name, base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\\\\n\", warn, collapse = NULL, recycle0 = FALSE),  call. = FALSE, immediate. = FALSE, noBreaks. = FALSE,  domain = NULL), add = TRUE, after = TRUE) #> 518                                                                                                                                                                                                                                                                                                                                                     warning(base::paste0(\"FROM \",  function_name, base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\\\\n\", warn, collapse = NULL, recycle0 = FALSE),  call. = FALSE, immediate. = FALSE, noBreaks. = FALSE,  domain = NULL) #> 519                                                                                                                                                                                                                                                                                                                                                                                                                                           paste0(\"FROM \",  function_name, base::ifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)),  \"\\\\n\\\\n\", warn, collapse = NULL, recycleifelse(test = base::is.null(x = package_name),  yes = \"\", no = base::paste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycle0 = FALSE)) #> 521                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   is.null(x = package_namepaste0(\" OF THE \", package_name,  \" PACKAGE\", collapse = NULL, recycleon.exit(expr = base::options(warning.length = ini_warning_length),  add = TRUE, afteroptions(warning.length = ini_warning_length) #>     FUN_POS #> 1        25 #> 2        43 #> 3        73 #> 4       100 #> 5        14 #> 6        37 #> 7        36 #> 8        24 #> 9        20 #> 10       36 #> 11       56 #> 12       83 #> 13       15 #> 14       13 #> 15       40 #> 16        7 #> 17       44 #> 18       54 #> 19       20 #> 20        7 #> 21       27 #> 22       22 #> 23        7 #> 24        7 #> 25       18 #> 26       12 #> 27       12 #> 28       12 #> 29       22 #> 30       20 #> 31        7 #> 32       27 #> 33       22 #> 34        7 #> 35        7 #> 36       18 #> 37       17 #> 38       27 #> 39       20 #> 40        7 #> 41       27 #> 42       22 #> 43        7 #> 44        7 #> 45       18 #> 46        8 #> 47       30 #> 48       20 #> 49       20 #> 50       12 #> 51       49 #> 52       22 #> 53       16 #> 54       34 #> 55       53 #> 56       67 #> 57       75 #> 58        7 #> 59       47 #> 60       56 #> 61       15 #> 62       55 #> 63       11 #> 64       20 #> 65        7 #> 66       27 #> 67       22 #> 68       31 #> 69       51 #> 70       47 #> 71        7 #> 72       18 #> 73       13 #> 74       45 #> 75       37 #> 76       28 #> 77       20 #> 78        7 #> 79       37 #> 80       16 #> 81       20 #> 82        7 #> 83       37 #> 84       16 #> 85       20 #> 86        7 #> 87       37 #> 88       16 #> 89       20 #> 90        7 #> 91       37 #> 92       16 #> 93       20 #> 94        7 #> 95       37 #> 96       16 #> 97       12 #> 98       11 #> 99        7 #> 100      18 #> 101       7 #> 102      11 #> 103      20 #> 104      50 #> 105      67 #> 106       7 #> 107       7 #> 108       7 #> 109       7 #> 110      11 #> 111      20 #> 112       7 #> 113      27 #> 114      22 #> 115      13 #> 116      33 #> 117       7 #> 118       7 #> 119      18 #> 120      20 #> 121      20 #> 122      37 #> 123       7 #> 124      43 #> 125       7 #> 126      11 #> 127      20 #> 128       7 #> 129      27 #> 130      22 #> 131      13 #> 132      33 #> 133       7 #> 134       7 #> 135      18 #> 136      20 #> 137      21 #> 138      38 #> 139       7 #> 140      43 #> 141      11 #> 142       7 #> 143       7 #> 144      17 #> 145      11 #> 146      20 #> 147       7 #> 148      27 #> 149      22 #> 150      13 #> 151      33 #> 152      37 #> 153       7 #> 154      18 #> 155      20 #> 156      37 #> 157       7 #> 158      43 #> 159       7 #> 160      11 #> 161      20 #> 162       7 #> 163      27 #> 164      22 #> 165      13 #> 166      33 #> 167      32 #> 168       7 #> 169      18 #> 170      25 #> 171      29 #> 172       7 #> 173      12 #> 174      12 #> 175      22 #> 176      20 #> 177       7 #> 178      27 #> 179      22 #> 180       7 #> 181       7 #> 182      18 #> 183      12 #> 184      22 #> 185      20 #> 186       7 #> 187      27 #> 188      22 #> 189       7 #> 190       7 #> 191      18 #> 192      11 #> 193      19 #> 194      16 #> 195      19 #> 196      12 #> 197      20 #> 198       7 #> 199      27 #> 200      22 #> 201       7 #> 202      18 #> 203      11 #> 204      29 #> 205      20 #> 206       7 #> 207      27 #> 208      22 #> 209       7 #> 210       7 #> 211      18 #> 212      29 #> 213      55 #> 214      19 #> 215      19 #> 216      21 #> 217      11 #> 218      21 #> 219       7 #> 220      15 #> 221      28 #> 222      48 #> 223      30 #> 224      30 #> 225      47 #> 226      30 #> 227      62 #> 228      21 #> 229      21 #> 230      18 #> 231      33 #> 232      40 #> 233       7 #> 234      20 #> 235      28 #> 236      49 #> 237      29 #> 238      22 #> 239      20 #> 240      39 #> 241      20 #> 242      20 #> 243       7 #> 244      18 #> 245      46 #> 246      66 #> 247      22 #> 248       7 #> 249      26 #> 250      40 #> 251      11 #> 252      25 #> 253      17 #> 254      27 #> 255      20 #> 256       7 #> 257      36 #> 258      48 #> 259      40 #> 260      31 #> 261      12 #> 262      52 #> 263       7 #> 264      38 #> 265      50 #> 266      34 #> 267       7 #> 268      20 #> 269      20 #> 270      19 #> 271      11 #> 272      22 #> 273      22 #> 274      25 #> 275      12 #> 276      46 #> 277      23 #> 278      43 #> 279      60 #> 280       7 #> 281      24 #> 282      15 #> 283      35 #> 284      52 #> 285       7 #> 286      24 #> 287      15 #> 288      35 #> 289      15 #> 290      35 #> 291      15 #> 292      35 #> 293      25 #> 294      30 #> 295      38 #> 296      12 #> 297       9 #> 298      22 #> 299      39 #> 300      12 #> 301       9 #> 302      22 #> 303      13 #> 304      39 #> 305       7 #> 306      33 #> 307      58 #> 308       7 #> 309      32 #> 310      58 #> 311       7 #> 312      33 #> 313      20 #> 314      49 #> 315       7 #> 316      29 #> 317      44 #> 318       5 #> 319      20 #> 320      42 #> 321       7 #> 322      29 #> 323      52 #> 324       9 #> 325      34 #> 326       7 #> 327      18 #> 328      35 #> 329      55 #> 330      22 #> 331       7 #> 332      20 #> 333      40 #> 334      57 #> 335      11 #> 336      40 #> 337      42 #> 338      17 #> 339       7 #> 340       7 #> 341       7 #> 342      11 #> 343      20 #> 344       7 #> 345       7 #> 346      18 #> 347      35 #> 348      55 #> 349      22 #> 350       7 #> 351      11 #> 352      12 #> 353       7 #> 354      20 #> 355      31 #> 356      26 #> 357      38 #> 358      51 #> 359      58 #> 360     150 #> 361       7 #> 362      18 #> 363       7 #> 364      27 #> 365      22 #> 366       7 #> 367      23 #> 368       7 #> 369      18 #> 370       7 #> 371      27 #> 372      22 #> 373       7 #> 374      23 #> 375      41 #> 376      11 #> 377      40 #> 378      29 #> 379      20 #> 380      15 #> 381      21 #> 382      53 #> 383      20 #> 384      26 #> 385      38 #> 386      51 #> 387      55 #> 388      44 #> 389       7 #> 390      18 #> 391      46 #> 392      66 #> 393      22 #> 394       7 #> 395      11 #> 396      25 #> 397      43 #> 398      73 #> 399      93 #> 400      15 #> 401      11 #> 402      21 #> 403       7 #> 404      11 #> 405      19 #> 406      37 #> 407      15 #> 408      11 #> 409      15 #> 410      15 #> 411      15 #> 412      15 #> 413      16 #> 414       7 #> 415      20 #> 416      40 #> 417      50 #> 418       7 #> 419      35 #> 420      16 #> 421      28 #> 422      41 #> 423      15 #> 424      21 #> 425      11 #> 426      11 #> 427       7 #> 428      20 #> 429       9 #> 430       7 #> 431      15 #> 432       5 #> 433       7 #> 434      15 #> 435       7 #> 436      18 #> 437       7 #> 438      27 #> 439      22 #> 440       7 #> 441      20 #> 442      21 #> 443      19 #> 444      19 #> 445      39 #> 446      19 #> 447      22 #> 448      12 #> 449      30 #> 450      11 #> 451      20 #> 452      56 #> 453       7 #> 454      43 #> 455      42 #> 456       7 #> 457      18 #> 458       7 #> 459      27 #> 460      22 #> 461       7 #> 462      20 #> 463       7 #> 464      11 #> 465      21 #> 466      20 #> 467       7 #> 468       7 #> 469      18 #> 470       7 #> 471      27 #> 472      22 #> 473       7 #> 474      11 #> 475      20 #> 476       7 #> 477      30 #> 478      25 #> 479      11 #> 480      43 #> 481       8 #> 482      20 #> 483      15 #> 484      38 #> 485      15 #> 486      35 #> 487       7 #> 488       7 #> 489       7 #> 490      18 #> 491       7 #> 492      27 #> 493      22 #> 494       7 #> 495      25 #> 496      15 #> 497      15 #> 498      15 #> 499      15 #> 500      15 #> 501      15 #> 502      15 #> 503      11 #> 504      31 #> 505      20 #> 506      44 #> 507      20 #> 508      20 #> 509       7 #> 510      28 #> 511      38 #> 512      17 #> 513       8 #> 514      61 #> 515       7 #> 516      12 #> 517       7 #> 518      28 #> 519      42 #> 520      22 #> 521      42 #> 522      22 #> 523       7 #> 524      28 #>                                                                                                                                                                                                                                                                                                          DEF_ARGS #> 1                                                                                                                                                                                                                                                                                                          x, ... #> 2                                                                                                                                                                                            definition = sys.function(sys.parent()), call = sys.call(sys.parent()), expand.dots = TRUE, envir = parent.frame(2L) #> 3                                                                                                                                                                                                                                                                                                      which = 0L #> 4                                                                                                                                                                                                                                                                                                          n = 1L #> 5                                                                                                                                                                                                                                                                                                      which = 0L #> 6                                                                                                                                                                                                                                                                                                          n = 1L #> 7                                                                                                                                                                                                                                                                                                           n = 1 #> 8                                                                                                                                                                                                                                                                          ..., collapse = NULL, recycle0 = FALSE #> 9                                                                                                                                                                                                                                                                                                               x #> 10                                                                                                                                                                                                                                                       fun = sys.function(sys.parent()), envir = parent.frame() #> 11                                                                                                                                                                                                                                                                                                     which = 0L #> 12                                                                                                                                                                                                                                                                                                         n = 1L #> 13                                                                                                                                                                                                                                                                                                          n = 1 #> 14                                                                                                                                                                                                                                                                                             ..., na.rmx #> 17                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE #> 18                                                                                                                                                                                                                                                                                                              x #> 19                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 20                                                                                                                                                                                                                                                                                                  test, yes, no #> 21                                                                                                                                                                                                                                                                                                              x #> 22                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 23                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 24                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL #> 25                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 26                                                                                                                                                                                                                                                                  external_function_name, external_package_name #> 27                                                                                                                                                                                                                                                                                                              x #> 28                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE #> 29                                                                                                                                                                                                                                                                                                              x #> 30                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 31                                                                                                                                                                                                                                                                                                  test, yes, no #> 32                                                                                                                                                                                                                                                                                                              x #> 33                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 34                                                                                                                                                                                                                                                              ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 35                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL #> 36                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 37                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE #> 38                                                                                                                                                                                                                                                                                                          paths #> 39                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 40                                                                                                                                                                                                                                                                                                  test, yes, no #> 41                                                                                                                                                                                                                                                                                                              x #> 42                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 43                                                                                                                                                                                                                                                              ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 44                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL #> 45                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 46                                                                                                                                                                                                                                                                                       new, include.site = TRUE #> 47                                                                                                                                                                                                                    pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 48                                                                                                                                                                                                                                                                                       new, include.site = TRUE #> 49                                                                                                                                                                                                                                                                                       new, include.site = TRUE #> 50                                                                                                                                                                                                                                                   fun, lib_path, external_function_name, external_package_nameexpr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() #> 54                                                                                                                                                                                   file = \"\", n = NULL, text = NULL, prompt = \"?\", keep.source = getOption(\"keep.source\"), srcfile = NULL, encoding = \"unknown\" #> 55                                                                                                                                                                                                                                                                         ..., collapse = NULL, recyclecollapse = NULL, recyclex, default = NULL #> 61                                                                                                                                                                                                                                                                                                     fun = NULL #> 62                                                                                                                                                                                                                                                                                                     fun = NULL #> 63                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE #> 64                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 65                                                                                                                                                                                                                                                                                                  test, yes, no #> 66                                                                                                                                                                                                                                                                                                              x #> 67                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 68                                                                                                                                                                                                                                                                                                  test, yes, no #> 69                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE #> 70                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycle0 = FALSE #> 71                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL #> 72                                                                                                                                                                                                                                                                         ..., collapse = NULL, recycledata, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE #> 78                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() #> 79                                                                                                                                                                                                                                                                                                     fun = NULL #> 80                                                                                                                                                                                                                                                                                                     fun = NULL #> 81  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE #> 82                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() #> 83                                                                                                                                                                                                                                                                                                     fun = NULL #> 84                                                                                                                                                                                                                                                                                                     fun = NULL #> 85  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE #> 86                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() #> 87                                                                                                                                                                                                                                                                                                     fun = NULL #> 88                                                                                                                                                                                                                                                                                                     fun = NULL #> 89  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE #> 90                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() #> 91                                                                                                                                                                                                                                                                                                     fun = NULL #> 92                                                                                                                                                                                                                                                                                                     fun = NULL #> 93  data, class = NULL, typeof = NULL, mode = NULL, length = NULL, prop = FALSE, double_as_integer_allowed = FALSE, options = NULL, all_options_in_data = FALSE, na_contain = FALSE, neg_values = TRUE, inf_values = TRUE, print = FALSE, data_name = NULL, fun_name = NULL, pack_name = NULL, safer_check = TRUE #> 94                                                                                                                                                                                                 expr, envir = parent.frame(), enclos = if (is.list(envir) || is.pairlist(envir)) parent.frame() else baseenv() #> 95                                                                                                                                                                                                                                                                                                     fun = NULL #> 96                                                                                                                                                                                                                                                                                                     fun = NULL #> 97                                                                                                                                                                                                                                                                                                              x #> 98                                                                                                                                                                                                                                                                                             ..., na.rm = FALSE #> 99                                                                                                                                                                                                                                                                               ..., call. = TRUE, domain = NULL #> 100                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 101                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 102                                                                                                                                                                                                                                                                                                             x #> 103                                                                                                                                                                                                                                                                                     expr, classes = \"warning\" #> 104                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE #> 105                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 106                                                                                                                                                                                                                                                                                                             x #> 107                                                                                                                                                                                                                                                                                            ..., na.rmx #> 110                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 111                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 112                                                                                                                                                                                                                                                                                                 test, yes, no #> 113                                                                                                                                                                                                                                                                                                             x #> 114                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 115                                                                                                                                                                                                                                                                                                 test, yes, no #> 116                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 117                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 118                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 119                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 120                                                                                                                                                                                                                                                                                                           ... #> 121                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE #> 122                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 123                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE #> 124                                                                                                                                                                                                                                                                                                         n = 1 #> 125                                                                                                                                                                                                                                                                                                             x #> 126                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 127                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 128                                                                                                                                                                                                                                                                                                 test, yes, no #> 129                                                                                                                                                                                                                                                                                                             x #> 130                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 131                                                                                                                                                                                                                                                                                                 test, yes, no #> 132                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 133                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 134                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 135                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 136                                                                                                                                                                                                                                                                                                           ... #> 137                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE #> 138                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 139                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE #> 140                                                                                                                                                                                                                                                                                                         n = 1 #> 141                                                                                                                                                                                                                                                                                                             x #> 142                                                                                                                                                                                                                                                                                                       NO_ARGS #> 143                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 144                                                                                                                                                                                                                                                                                                             x #> 145                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 146                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 147                                                                                                                                                                                                                                                                                                 test, yes, no #> 148                                                                                                                                                                                                                                                                                                             x #> 149                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 150                                                                                                                                                                                                                                                                                                 test, yes, no #> 151                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 152                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 153                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 154                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 155                                                                                                                                                                                                                                                                X, FUN, ..., simplify = TRUE, USE.NAMES = TRUE #> 156                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 157                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE #> 158                                                                                                                                                                                                                                                                                                         n = 1 #> 159                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 160                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 161                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 162                                                                                                                                                                                                                                                                                                 test, yes, no #> 163                                                                                                                                                                                                                                                                                                             x #> 164                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 165                                                                                                                                                                                                                                                                                                 test, yes, no #> 166                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 167                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 168                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 169                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex #> 174                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 175                                                                                                                                                                                                                                                                                                         paths #> 176                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 177                                                                                                                                                                                                                                                                                                 test, yes, no #> 178                                                                                                                                                                                                                                                                                                             x #> 179                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 180                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 181                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 182                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 183                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 184                                                                                                                                                                                                                                                                                                         paths #> 185                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 186                                                                                                                                                                                                                                                                                                 test, yes, no #> 187                                                                                                                                                                                                                                                                                                             x #> 188                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 189                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 190                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 191                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 192                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 193                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 194                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 195                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 196                                                                                                                                                                                                                                                                                                         paths #> 197                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 198                                                                                                                                                                                                                                                                                                 test, yes, no #> 199                                                                                                                                                                                                                                                                                                             x #> 200                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 201                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 202                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 203                                                                                                                                                                                                                                                                                                           ... #> 204                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 205                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 206                                                                                                                                                                                                                                                                                                 test, yes, no #> 207                                                                                                                                                                                                                                                                                                             x #> 208                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 209                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 210                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 211                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 212                                                                                                                              expr, width.cutoff = 60L, backtick = mode(expr) %in% c(\"call\", \"expression\", \"(\", \"function\"), control = c(\"keepNA\", \"keepInteger\", \"niceNames\", \"showAttributes\"), nlines = -1L #> 213                                                                                                                                                                                                                                                                                                           ... #> 214                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 215                                                                                                                                                                                                                                                              x, arg_user_setting, function_name, package_name #> 216                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 217                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 218                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclecollapse = NULL, recycle0 = FALSE #> 221                                                                                                                                                                                                                                                                                                 test, yes, no #> 222                                                                                                                                                                                                                                                                                                             x #> 223                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 224                                                                                                                                                                                                                                                                                                             x #> 225                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA #> 226                                                                                                                                                                                                                                                                                                           ... #> 227                                                                                                                                                                                                                                                                                                             x #> 228                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name #> 229                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name #> 230                                                                                                                                                                                                                                                                                    x, decreasing = FALSE, ... #> 231                                                                                                                                                                                                                                                                                                           ... #> 232                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 233                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 234                                                                                                                                                                                                                                                                                                             x #> 235                                                                                                                                                                                                                                                                                                        x, ... #> 236                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 237                                                                                                                                                                                                                                                                                                             x #> 238                                                                                                                                                                                                                                                                           x, arr.ind = FALSE, useNames = TRUE #> 239                                                                                                                                                                                                                                                                                                             x #> 240                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA #> 241                                                                                                                                                                                                                                                                                                x, start, stop #> 242                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 243                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 244                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 245                                                                                                                                                                                                                                                                                                 test, yes, no #> 246                                                                                                                                                                                                                                                                                                             x #> 247                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 248                                                                                                                                                                                                                                                                                                 test, yes, no #> 249                                                                                                                                                                                                                                                                                                x, start, stop #> 250                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA #> 251                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 252                                                                                                                                                                                                                                                                    text, pattern, function_name, package_name #> 253                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 254                                                                                                                                                                                                                                                                                                x, start, stop #> 255                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 256                                                                                                                                                                                                                                                                                                x, start, stop #> 257                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 258                                                                                                                                                                                                                                                                                                        x, ... #> 259                                                                                                                                                                                                                                                                                                x, start, stop #> 260                                                                                                                                                                                                                                                                                                x, start, stop #> 261                                                                                                                                                                                                                                                                                                             x #> 262                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 263                                                                                                                                                                                                                                                                                                x, start, stop #> 264                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 265                                                                                                                                                                                                                                                                                                        x, ... #> 266                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 267                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 268                                                                                                                                                                                                                                                                                                             x #> 269                                                                                                                                                                                                                                                                                                             x #> 270                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 271                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 272                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name #> 273                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name #> 274                                                                                                                                                                                                                                                                    text, pattern, function_name, package_name #> 275                                                                                                                                                                                                                                                                                                             x #> 276                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 277                                                                                                                                                                                                                                                                                               x, mode = \"any\" #> 278                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 279                                                                                                                                                                                                                                                  FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE #> 280                                                                                                                                                                                                                                                                                                        x, ... #> 281                                                                                                                                                                                                                                                                                                             x #> 282                                                                                                                                                                                                                                                                                               x, mode = \"any\" #> 283                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 284                                                                                                                                                                                                                                                  FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE #> 285                                                                                                                                                                                                                                                                                                        x, ... #> 286                                                                                                                                                                                                                                                                                                             x #> 287                                                                                                                                                                                                                                                                                               x, mode = \"any\" #> 288                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 289                                                                                                                                                                                                                                                                                               x, mode = \"any\" #> 290                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 291                                                                                                                                                                                                                                                                                               x, mode = \"any\" #> 292                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 293                                                                                                                                                                                                                                                             what, args, quote = FALSE, envir = parent.frame() #> 294                                                                                                                                                                                                                                                                                                         n = 1 #> 295                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 296                                                                                                                                                                                                                                                                                                             xx #> 299                                                                                                                                                                                                                                                                                                   X, FUN, ... #> 300                                                                                                                                                                                                                                                                                                             xx #> 303                                                                                                                                                                                                                                                                                                             x #> 304                                                                                                                                                                                                                                                                                                             x #> 305                                                                                                                                                                                                                                                                                                             x #> 306                                                                                                                                                                                                                                                                                                             x #> 307                                                                                                                                                                                                                                                                                                             x #> 308                                                                                                                                                                                                                                                                                                             x #> 309                                                                                                                                                                                                                                                                                                             x #> 310                                                                                                                                                                                                                                                                                                             x #> 311                                                                                                                                                                                                                                                                                                             x #> 312                                                                                                                                                                                                                                                                                                             x #> 313                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclexxx #> 320                                                                                                                                                                                                                                                                                                               #> 321                                                                                                                                                                                                                                                                                                             xxx #> 326                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 327                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 328                                                                                                                                                                                                                                                                                                 test, yes, no #> 329                                                                                                                                                                                                                                                                                                             x #> 330                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 331                                                                                                                                                                                                                                                                                                 test, yes, no #> 332                                                                                                                                                                                                                                                                                               x, mode = \"any\" #> 333                                                                                                                                                                                                                                                                         x, recursive = TRUE, use.names = TRUE #> 334                                                                                                                                                                                                                                                  FUN, ..., MoreArgs = NULL, SIMPLIFY = TRUE, USE.NAMES = TRUE #> 335                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 336                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 337                                                                                                                                                                                                                                pattern, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 338                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 339                                                                                                                                                                                                                                                                                                       NO_ARGS #> 340                                                                                                                                                                                                                                                                                                       NO_ARGS #> 341                                                                                                                                                                                                                                                                                                       NO_ARGS #> 342                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 343                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 344                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 345                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 346                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 347                                                                                                                                                                                                                                                                                                 test, yes, no #> 348                                                                                                                                                                                                                                                                                                             x #> 349                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 350                                                                                                                                                                                                                                                                                                 test, yes, no #> 351                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 352                                                                                                                                                                                                                                                                                                             x #> 353                                                                                                                                                                                                                                        ..., file = \"\", sep = \" \", fill = FALSE, labels = NULL, append = FALSE #> 354                                                                                                                                                                                                                                                                                                             x #> 355                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 356                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 357                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 358                                                                                                                                                                                                                                                                                                x, start, stopcall. = TRUE, domain = NULL #> 362                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 363                                                                                                                                                                                                                                                                                                 test, yes, no #> 364                                                                                                                                                                                                                                                                                                             x #> 365                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 366                                                                                                                                                                                                                                                                                                 test, yes, no #> 367                                                                                                                                                                                                                                                                                                x, start, stop #> 368                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 369                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 370                                                                                                                                                                                                                                                                                                 test, yes, no #> 371                                                                                                                                                                                                                                                                                                             x #> 372                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 373                                                                                                                                                                                                                                                                                                 test, yes, no #> 374                                                                                                                                                                                                                                                                                                x, start, stop #> 375                                                                                                                                                                                                                                                                                                 text, pattern #> 376                                                                                                                                                                                                                                                                      fun, lib_path = NULL, safer_check = TRUE #> 377                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 378                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 379                                                                                                                                                                                  x, where = -1, envir = if (missing(frame)) as.environment(where) else sys.frame(frame), frame, mode = \"any\", inherits = TRUE #> 380                                                                                                                                                                                                                                                                                                          name #> 381                                                                                                                                                                                                                                      x, pos = -1L, envir = as.environment(pos), mode = \"any\", inherits = TRUE #> 382                                                                                                                                                                                                                                                                                            ns, base.OK = TRUE #> 383                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 384                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 385                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 386                                                                                                                                                                                                                                                                                                x, start, stopcall. = TRUE, domain = NULL #> 390                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 391                                                                                                                                                                                                                                                                                                 test, yes, no #> 392                                                                                                                                                                                                                                                                                                             x #> 393                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 394                                                                                                                                                                                                                                                                                                 test, yes, no #> 395                                                                                                                                                                                                                                                                                                             x #> 396                                                                                                                                                                                                                                                                                                        x, ... #> 397                                                                                                                                                                                                                                                                                     expr, classes = \"warning\" #> 398                                                                                                                                                                                                                                                      fun = sys.function(sys.parent()), envir = parent.frame() #> 399                                                                                                                                                                                                                                                                                                          name #> 400                                                                                                                                                                                                                                                                                            ns, base.OK = TRUE #> 401                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 402                                                                                                                                                                                                                                                                                                             xx #> 405                                                                                                                                                                                                                                                                                                        x, ... #> 406                                                                                                                                                                                                                                                      fun = sys.function(sys.parent()), envir = parent.frame() #> 407                                                                                                                                                                                                                                                                                            ns, base.OK = TRUE #> 408                                                                                                                                                                                                                                                                                                             xsimplify = TRUE, USE.NAMES = TRUE #> 414                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 415                                                                                                                                                                                                                                                                                                 test, yes, no #> 416                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 417                                                                                                                                                                                                                                                                                                             x #> 418                                                                                                                              expr, width.cutoff = 60L, backtick = mode(expr) %in% c(\"call\", \"expression\", \"(\", \"function\"), control = c(\"keepNA\", \"keepInteger\", \"niceNames\", \"showAttributes\"), nlines = -1L #> 419                                                                                                                                                                                                                                                                                                           ... #> 420                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 421                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 422                                                                                                                                                                                                                                                                                                             x #> 423                                                                                                                                                                                                                                                                                                           ... #> 424                                                                                                                                                                                                                             string, pattern, no_regex_pattern, replacement, perl, function_name, package_name #> 425                                                                                                                                                                                                                                                                                                             x #> 426                                                                                                                                                                                                                                                                                                             x #> 427                                                                                                                                                                                                                                                                                                             x #> 428                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex #> 431                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 432                                                                                                                                                                                                                                                                                                               #> 433                                                                                                                                                                                                                                                                                                             x #> 434                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 435                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 436                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 437                                                                                                                                                                                                                                                                                                 test, yes, no #> 438                                                                                                                                                                                                                                                                                                             x #> 439                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 440                                                                                                                                                                                                                                                                                                 test, yes, no #> 441                                                                                                                                                                                                                                                                                                             x #> 442                                                                                                                                                                                                        string, pattern, no_regex_pattern, replacement, perl, open_pos, close_pos, function_name, package_namepattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 445                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 446                                                                                                                                                                                                                   pattern, replacement, x, ignore.case = FALSE, perl = FALSE, fixed = FALSE, useBytes = FALSE #> 447                                                                                                                                                                                                                                                       x, split, fixed = FALSE, perl = FALSE, useBytes = FALSE #> 448                                                                                                                                                                                                                                                                                                             x #> 449                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA #> 450                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 451                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex #> 454                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 455                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 456                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 457                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 458                                                                                                                                                                                                                                                                                                 test, yes, no #> 459                                                                                                                                                                                                                                                                                                             x #> 460                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 461                                                                                                                                                                                                                                                                                                 test, yes, no #> 462                                                                                                                                                                                                                                                                                                             x #> 463                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA #> 464                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 465                                                                                                                                                                                                                                                                                                             x #> 466                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 467                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 468                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 469                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 470                                                                                                                                                                                                                                                                                                 test, yes, no #> 471                                                                                                                                                                                                                                                                                                             x #> 472                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 473                                                                                                                                                                                                                                                                                                 test, yes, no #> 474                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 475                                                                                                                                                                                                                                                                                                             x #> 476                                                                                                                                                                                                                                                                                                x, start, stop #> 477                                                                                                                                                                                                                                                               x, type = \"chars\", allowNA = FALSE, keepNA = NA #> 478                                                                                                                                                                                                                                                                                                             x #> 479                                                                                                                                                                                                                                                                                                             x #> 480                                                                                                                                                                                                                                                                                                             x #> 481                                                                                                                                                                                                                                                                                            ..., na.rm = FALSE #> 482                                                                                                                                                                                                                                                                        ..., collapse = NULL, recyclex #> 485                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recyclex #> 488                                                                                                                                                                                                                                                             ..., sep = \" \", collapse = NULL, recycle0 = FALSE #> 489                                                                                                                                                                                                                                                                              ..., call. = TRUE, domain = NULL #> 490                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 491                                                                                                                                                                                                                                                                                                 test, yes, no #> 492                                                                                                                                                                                                                                                                                                             x #> 493                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 494                                                                                                                                                                                                                                                                                                 test, yes, no #> 495                                                                                                                                                                arg_full, arg_full_names, tempo_split, three_dots_log, i2, col1_i2, col2_i2, arg_user_setting_x, function_name, package_name, warn, warn_countna.rm = FALSE #> 504                                                                                                                                                                                                                                                                                                           ... #> 505                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 506                                                                                                                                                                                                                                                                                                        x, ... #> 507                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 508                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 509                                                                                                                                                                                                                                                                        expr = NULL, add = FALSE, after = TRUE #> 510                                                                                                                                                                                                                                        ..., file = \"\", sep = \" \", fill = FALSE, labels = NULL, append = FALSE #> 511                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 512                                                                                                                                                                                               ..., row.names = NULL, check.rows = FALSE, check.names = TRUE, fix.empty.names = TRUE, stringsAsFactors = FALSE #> 513                                                                                                                              x, file = \"\", append = FALSE, quote = TRUE, sep = \" \", eol = \"\\\\n\", na = \"NA\", dec = \".\", row.names = TRUE, col.names = TRUE, qmethod = c(\"escape\", \"double\"), fileEncoding = \"\" #> 514                                                                                                                                                                                                                                                                                                           ... #> 515                                                                                                                                                                                                                                                                                                       NO_ARGS #> 516                                                                                                                                                                                                                                                                                                             x #> 517                                                                                                                                                                                                                                                                        expr = NULL, add = FALSE, after = TRUE #> 518                                                                                                                                                                                                                                       ..., call. = TRUE, immediate. = FALSE, noBreaks. = FALSE, domain = NULL #> 519                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 520                                                                                                                                                                                                                                                                                                 test, yes, no #> 521                                                                                                                                                                                                                                                                                                             x #> 522                                                                                                                                                                                                                                                                        ..., collapse = NULL, recycle0 = FALSE #> 523                                                                                                                                                                                                                                                                        expr = NULL, add = FALSE, after = TRUE #> 524                                                                                                                                                                                                                                                                                                           ... #>     MISSING_ARG_NAMES MISSING_ARGS STATUS #> 1                                    GOOD #> 2                                    GOOD #> 3                                    GOOD #> 4                                    GOOD #> 5                                    GOOD #> 6                                    GOOD #> 7                                    GOOD #> 8                                    GOOD #> 9                                    GOOD #> 10                                   GOOD #> 11                                   GOOD #> 12                                   GOOD #> 13                                   GOOD #> 14                                   GOOD #> 15                                        #> 16                                   GOOD #> 17                                   GOOD #> 18                                   GOOD #> 19                                   GOOD #> 20                                   GOOD #> 21                                   GOOD #> 22                                   GOOD #> 23                                   GOOD #> 24                                   GOOD #> 25                                   GOOD #> 26                                   GOOD #> 27                                   GOOD #> 28                                   GOOD #> 29                                   GOOD #> 30                                   GOOD #> 31                                   GOOD #> 32                                   GOOD #> 33                                   GOOD #> 34                                   GOOD #> 35                                   GOOD #> 36                                   GOOD #> 37                                   GOOD #> 38                                   GOOD #> 39                                   GOOD #> 40                                   GOOD #> 41                                   GOOD #> 42                                   GOOD #> 43                                   GOOD #> 44                                   GOOD #> 45                                   GOOD #> 46                                   GOOD #> 47                                   GOOD #> 48                                   GOOD #> 49                                   GOOD #> 50                                   GOOD #> 51                                        #> 52                                        #> 53                                   GOOD #> 54                                   GOOD #> 55                                   GOOD #> 56                                        #> 57                                        #> 58                                   GOOD #> 59                                        #> 60                                   GOOD #> 61                                   GOOD #> 62                                   GOOD #> 63                                   GOOD #> 64                                   GOOD #> 65                                   GOOD #> 66                                   GOOD #> 67                                   GOOD #> 68                                   GOOD #> 69                                   GOOD #> 70                                   GOOD #> 71                                   GOOD #> 72                                   GOOD #> 73                                        #> 74                                        #> 75                                        #> 76                                        #> 77                                   GOOD #> 78                                   GOOD #> 79                                   GOOD #> 80                                   GOOD #> 81                                   GOOD #> 82                                   GOOD #> 83                                   GOOD #> 84                                   GOOD #> 85                                   GOOD #> 86                                   GOOD #> 87                                   GOOD #> 88                                   GOOD #> 89                                   GOOD #> 90                                   GOOD #> 91                                   GOOD #> 92                                   GOOD #> 93                                   GOOD #> 94                                   GOOD #> 95                                   GOOD #> 96                                   GOOD #> 97                                   GOOD #> 98                                   GOOD #> 99                                   GOOD #> 100                                  GOOD #> 101                                  GOOD #> 102                                  GOOD #> 103                                  GOOD #> 104                                  GOOD #> 105                                  GOOD #> 106                                  GOOD #> 107                                  GOOD #> 108                                  GOOD #> 109                                  GOOD #> 110                                  GOOD #> 111                                  GOOD #> 112                                  GOOD #> 113                                  GOOD #> 114                                  GOOD #> 115                                  GOOD #> 116                                  GOOD #> 117                                  GOOD #> 118                                  GOOD #> 119                                  GOOD #> 120                                       #> 121                                  GOOD #> 122                                  GOOD #> 123                                  GOOD #> 124                                  GOOD #> 125                                  GOOD #> 126                                  GOOD #> 127                                  GOOD #> 128                                  GOOD #> 129                                  GOOD #> 130                                  GOOD #> 131                                  GOOD #> 132                                  GOOD #> 133                                  GOOD #> 134                                  GOOD #> 135                                  GOOD #> 136                                       #> 137                                  GOOD #> 138                                  GOOD #> 139                                  GOOD #> 140                                  GOOD #> 141                                  GOOD #> 142                                       #> 143                                  GOOD #> 144                                  GOOD #> 145                                  GOOD #> 146                                  GOOD #> 147                                  GOOD #> 148                                  GOOD #> 149                                  GOOD #> 150                                  GOOD #> 151                                  GOOD #> 152                                  GOOD #> 153                                  GOOD #> 154                                  GOOD #> 155                                  GOOD #> 156                                  GOOD #> 157                                  GOOD #> 158                                  GOOD #> 159                                  GOOD #> 160                                  GOOD #> 161                                  GOOD #> 162                                  GOOD #> 163                                  GOOD #> 164                                  GOOD #> 165                                  GOOD #> 166                                  GOOD #> 167                                  GOOD #> 168                                  GOOD #> 169                                  GOOD #> 170                                       #> 171                                       #> 172                                       #> 173                                  GOOD #> 174                                  GOOD #> 175                                  GOOD #> 176                                  GOOD #> 177                                  GOOD #> 178                                  GOOD #> 179                                  GOOD #> 180                                  GOOD #> 181                                  GOOD #> 182                                  GOOD #> 183                                  GOOD #> 184                                  GOOD #> 185                                  GOOD #> 186                                  GOOD #> 187                                  GOOD #> 188                                  GOOD #> 189                                  GOOD #> 190                                  GOOD #> 191                                  GOOD #> 192                                  GOOD #> 193                                  GOOD #> 194                                  GOOD #> 195                                  GOOD #> 196                                  GOOD #> 197                                  GOOD #> 198                                  GOOD #> 199                                  GOOD #> 200                                  GOOD #> 201                                  GOOD #> 202                                  GOOD #> 203                                       #> 204                                  GOOD #> 205                                  GOOD #> 206                                  GOOD #> 207                                  GOOD #> 208                                  GOOD #> 209                                  GOOD #> 210                                  GOOD #> 211                                  GOOD #> 212                                  GOOD #> 213                                       #> 214                                  GOOD #> 215                                  GOOD #> 216                                  GOOD #> 217                                  GOOD #> 218                                  GOOD #> 219                                       #> 220                                  GOOD #> 221                                  GOOD #> 222                                  GOOD #> 223                                  GOOD #> 224                                  GOOD #> 225                                  GOOD #> 226                                       #> 227                                  GOOD #> 228                                  GOOD #> 229                                  GOOD #> 230                                  GOOD #> 231                                       #> 232                                  GOOD #> 233                                  GOOD #> 234                                  GOOD #> 235                                  GOOD #> 236                                  GOOD #> 237                                  GOOD #> 238                                  GOOD #> 239                                  GOOD #> 240                                  GOOD #> 241                                  GOOD #> 242                                  GOOD #> 243                                  GOOD #> 244                                  GOOD #> 245                                  GOOD #> 246                                  GOOD #> 247                                  GOOD #> 248                                  GOOD #> 249                                  GOOD #> 250                                  GOOD #> 251                                  GOOD #> 252                                  GOOD #> 253                                  GOOD #> 254                                  GOOD #> 255                                  GOOD #> 256                                  GOOD #> 257                                  GOOD #> 258                                  GOOD #> 259                                  GOOD #> 260                                  GOOD #> 261                                  GOOD #> 262                                  GOOD #> 263                                  GOOD #> 264                                  GOOD #> 265                                  GOOD #> 266                                  GOOD #> 267                                  GOOD #> 268                                  GOOD #> 269                                  GOOD #> 270                                  GOOD #> 271                                  GOOD #> 272                                  GOOD #> 273                                  GOOD #> 274                                  GOOD #> 275                                  GOOD #> 276                                  GOOD #> 277                                  GOOD #> 278                                  GOOD #> 279                                  GOOD #> 280                                  GOOD #> 281                                  GOOD #> 282                                  GOOD #> 283                                  GOOD #> 284                                  GOOD #> 285                                  GOOD #> 286                                  GOOD #> 287                                  GOOD #> 288                                  GOOD #> 289                                  GOOD #> 290                                  GOOD #> 291                                  GOOD #> 292                                  GOOD #> 293                                  GOOD #> 294                                  GOOD #> 295                                  GOOD #> 296                                  GOOD #> 297                                       #> 298                                  GOOD #> 299                                  GOOD #> 300                                  GOOD #> 301                                       #> 302                                  GOOD #> 303                                  GOOD #> 304                                  GOOD #> 305                                  GOOD #> 306                                  GOOD #> 307                                  GOOD #> 308                                  GOOD #> 309                                  GOOD #> 310                                  GOOD #> 311                                  GOOD #> 312                                  GOOD #> 313                                  GOOD #> 314                                       #> 315                                  GOOD #> 316                                       #> 317                                  GOOD #> 318                                       #> 319                                  GOOD #> 320                                       #> 321                                  GOOD #> 322                                       #> 323                                  GOOD #> 324                                       #> 325                                  GOOD #> 326                                  GOOD #> 327                                  GOOD #> 328                                  GOOD #> 329                                  GOOD #> 330                                  GOOD #> 331                                  GOOD #> 332                                  GOOD #> 333                                  GOOD #> 334                                  GOOD #> 335                                  GOOD #> 336                                  GOOD #> 337                                  GOOD #> 338                                  GOOD #> 339                                       #> 340                                       #> 341                                       #> 342                                  GOOD #> 343                                  GOOD #> 344                                  GOOD #> 345                                  GOOD #> 346                                  GOOD #> 347                                  GOOD #> 348                                  GOOD #> 349                                  GOOD #> 350                                  GOOD #> 351                                  GOOD #> 352                                  GOOD #> 353                                  GOOD #> 354                                  GOOD #> 355                                  GOOD #> 356                                  GOOD #> 357                                  GOOD #> 358                                  GOOD #> 359                                       #> 360                                       #> 361                                  GOOD #> 362                                  GOOD #> 363                                  GOOD #> 364                                  GOOD #> 365                                  GOOD #> 366                                  GOOD #> 367                                  GOOD #> 368                                  GOOD #> 369                                  GOOD #> 370                                  GOOD #> 371                                  GOOD #> 372                                  GOOD #> 373                                  GOOD #> 374                                  GOOD #> 375                                  GOOD #> 376                                  GOOD #> 377                                  GOOD #> 378                                  GOOD #> 379                                  GOOD #> 380                                  GOOD #> 381                                  GOOD #> 382                                  GOOD #> 383                                  GOOD #> 384                                  GOOD #> 385                                  GOOD #> 386                                  GOOD #> 387                                       #> 388                                       #> 389                                  GOOD #> 390                                  GOOD #> 391                                  GOOD #> 392                                  GOOD #> 393                                  GOOD #> 394                                  GOOD #> 395                                  GOOD #> 396                                  GOOD #> 397                                  GOOD #> 398                                  GOOD #> 399                                  GOOD #> 400                                  GOOD #> 401                                  GOOD #> 402                                  GOOD #> 403                                       #> 404                                  GOOD #> 405                                  GOOD #> 406                                  GOOD #> 407                                  GOOD #> 408                                  GOOD #> 409                                       #> 410                                       #> 411                                       #> 412                                       #> 413                                  GOOD #> 414                                  GOOD #> 415                                  GOOD #> 416                                  GOOD #> 417                                  GOOD #> 418                                  GOOD #> 419                                       #> 420                                  GOOD #> 421                                  GOOD #> 422                                  GOOD #> 423                                       #> 424                                  GOOD #> 425                                  GOOD #> 426                                  GOOD #> 427                                  GOOD #> 428                                  GOOD #> 429                                       #> 430                                  GOOD #> 431                                  GOOD #> 432                                       #> 433                                  GOOD #> 434                                  GOOD #> 435                                  GOOD #> 436                                  GOOD #> 437                                  GOOD #> 438                                  GOOD #> 439                                  GOOD #> 440                                  GOOD #> 441                                  GOOD #> 442                                  GOOD #> 443                                       #> 444                                  GOOD #> 445                                  GOOD #> 446                                  GOOD #> 447                                  GOOD #> 448                                  GOOD #> 449                                  GOOD #> 450                                  GOOD #> 451                                  GOOD #> 452                                       #> 453                                  GOOD #> 454                                  GOOD #> 455                                  GOOD #> 456                                  GOOD #> 457                                  GOOD #> 458                                  GOOD #> 459                                  GOOD #> 460                                  GOOD #> 461                                  GOOD #> 462                                  GOOD #> 463                                  GOOD #> 464                                  GOOD #> 465                                  GOOD #> 466                                  GOOD #> 467                                  GOOD #> 468                                  GOOD #> 469                                  GOOD #> 470                                  GOOD #> 471                                  GOOD #> 472                                  GOOD #> 473                                  GOOD #> 474                                  GOOD #> 475                                  GOOD #> 476                                  GOOD #> 477                                  GOOD #> 478                                  GOOD #> 479                                  GOOD #> 480                                  GOOD #> 481                                  GOOD #> 482                                  GOOD #> 483                                       #> 484                                  GOOD #> 485                                  GOOD #> 486                                       #> 487                                  GOOD #> 488                                  GOOD #> 489                                  GOOD #> 490                                  GOOD #> 491                                  GOOD #> 492                                  GOOD #> 493                                  GOOD #> 494                                  GOOD #> 495                                  GOOD #> 496                                       #> 497                                       #> 498                                       #> 499                                       #> 500                                       #> 501                                       #> 502                                       #> 503                                  GOOD #> 504                                       #> 505                                  GOOD #> 506                                  GOOD #> 507                                  GOOD #> 508                                  GOOD #> 509                                  GOOD #> 510                                  GOOD #> 511                                  GOOD #> 512                                  GOOD #> 513                                  GOOD #> 514                                       #> 515                                       #> 516                                  GOOD #> 517                                  GOOD #> 518                                  GOOD #> 519                                  GOOD #> 520                                  GOOD #> 521                                  GOOD #> 522                                  GOOD #> 523                                  GOOD #> 524                                       source(\"https://raw.githubusercontent.com/safer-r/.github/refs/heads/main/profile/backbone.R\") ; all_args_here(BACKBONE, export = TRUE) #>  #>  #> AFTER RUNNING all_args_here() OF THE saferDev PACKAGE: #> RESULT EXPORTED IN #> ./res.tsv #> BUT INSIDE BACKBONE(), EVERYTHING SEEMS CLEAN #>"},{"path":"/reference/arg_check.html","id":null,"dir":"Reference","previous_headings":"","what":"arg_check — arg_check","title":"arg_check — arg_check","text":"Check expected values argument functions: class, type, mode, length, restricted values panel, kind numeric values addition distinction 'integer' 'double' (proportion ? Inf values authorized? negative values authorized? Integers type 'double'?)","code":""},{"path":"/reference/arg_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arg_check — arg_check","text":"","code":"arg_check(   data,   class = NULL,   typeof = NULL,   mode = NULL,   length = NULL,   prop = FALSE,   double_as_integer_allowed = FALSE,   options = NULL,   all_options_in_data = FALSE,   na_contain = FALSE,   neg_values = TRUE,   inf_values = TRUE,   print = FALSE,   data_name = NULL,   fun_name = NULL,   pack_name = NULL,   safer_check = TRUE )"},{"path":"/reference/arg_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arg_check — arg_check","text":"data Object test. class Single character string. Either one class() result \"vector\" \"ggplot2\" (.e., objects class c(\"gg\", \"ggplot\")) NULL. See warning section . typeof Single character string. Either one typeof() result NULL. mode Single character string. Either one mode() result (non-vector object) NULL. length Single numeric value indicating length object. considered NULL. prop Single logical value. numeric values 0 1 (proportion)? TRUE, can used alone, without considering class, etc. double_as_integer_allowed Single logical value. TRUE, error reported cheking message argument set typeof == \"integer\" class == \"integer\", reality typeof == \"double\" class == \"numeric\" numbers strictly zero modulo (remainder division). means <- 1, typeof() -> \"double\" considered integer double_as_integer_allowed = TRUE. WARNING: data mod 1 == 0L isTRUE(.equal(data mod 1, 0)) used argument checks integers stored double (check decimal numbers approximate integers). options Vector character strings integers indicating possible option values data argument, NULL. Numbers type \"double\" accepted 0 modulo. all_options_in_data Single logical value. TRUE, options must present least data argument, nothing else. FALSE, options must present data argument, nothing else. Ignored options base::.null. na_contain Single logical value. Can data argument contain NA? neg_values Single logical value. negative numeric values authorized? Warning: default setting TRUE, meaning , case, check performed presence negative values. neg_values argument activated set FALSE. addition, (1) neg_values = FALSE can used class, typeof mode arguments NULL, otherwise return error message, (2) presence negative values checked neg_values = FALSE tested object factor following checking message returned \"OBJECT MUST MADE NON NEGATIVE VALUES FACTOR\". inf_values Single logical value. infinite numeric values authorized (Inf -Inf)? Identical remarks neg_values argument. print Single logical value. Print message $problem TRUE? Warning: set default FALSE, facilitates control checking message output using arg_check() inside functions. See example section. data_name Single character string indicating name object test. NULL, use assigned data argument returned message. fun_name Single character string indicating name function checked (.e., arg_check() used check arguments function). non-null, value fun_name added message returned arg_check(). pack_name Single character string indicating name package fun_name. non-null, value pack_name added message returned arg_check(). safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/arg_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arg_check — arg_check","text":"list containing: - §problem: logical. problem detected? - §text: message indicating details problem, absence problem. - §object.name: value data_name argument (.e., name checked object provided, NULL otherwise).","code":""},{"path":"/reference/arg_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arg_check — arg_check","text":"- options == NULL, least class type mode length argument must non-null. - options non-null, class, type mode must NULL, length can NULL specified. - function tests written arguments, even written incoherent. instance, arg_check(data = factor(1), class = \"factor\", mode = \"character\") return problem, whatever object tested data argument, object can class \"factor\" mode \"character\" (factors class \"factor\" mode \"numeric\"). note, length object class \"environment\" always 0. - tested object base::.null, function always return checking problem. - Argument \"class\" value \"vector\" means object tested class(data) returning \"numeric\", \"integer\", \"character\", \"logical\", \"complex\" \"expression\". Please, use another value class (e.g., class = \"call\" class = \"list\") types class objects - Since R >= 4.0.0, class(matrix()) returns \"matrix\" \"array\", \"matrix\" alone . However, use argument class = \"matrix\" check matrix object (class \"matrix\" \"array\" R >= 4.0.0) use argument class = \"array\" check array object (class \"array\" R >= 4.0.0).","code":""},{"path":[]},{"path":"/reference/arg_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arg_check — arg_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/arg_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arg_check — arg_check","text":"","code":"test <- matrix(1:3) # arg_check(data = test, print = TRUE, class = \"vector\", mode = \"numeric\")  # commented because this example returns an error"},{"path":"/reference/arg_test.html","id":null,"dir":"Reference","previous_headings":"","what":"arg_test — arg_test","title":"arg_test — arg_test","text":"Test combinations argument values function.","code":""},{"path":"/reference/arg_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arg_test — arg_test","text":"","code":"arg_test(   fun,   arg,   val,   expect.error = NULL,   parall = FALSE,   thread.nb = NULL,   print.count = 10,   plot.fun = FALSE,   export = FALSE,   res.path = NULL,   lib_path = NULL,   safer_check = TRUE )"},{"path":"/reference/arg_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arg_test — arg_test","text":"fun Single character string indicating name function tested (without brackets). arg Vector character strings arguments fun. least arguments default values must present vector. val List number compartments equal length arg, compartment containing values corresponding argument arg. different value must list vector. instance, argument 3 arg logical argument (values accepted TRUE, FALSE, NA). Thus, compartment 3 val can either list(TRUE, FALSE, NA), c(TRUE, FALSE, NA). NULL value alone must written list(NULL). expect.error List exactly structure val argument, containing FALSE TRUE, depending whether error expected (TRUE) (FALSE) corresponding value val. message returned depending discrepancies expected observed errors. See examples . BEWARE: always possible write expected errors combination argument values. Ignored NULL. parall Single logical value. Force parallelization ? thread.nb Single numeric integer indicating number threads use ever parallelization required. NULL, available threads used. Ignored parall FALSE. print.count Single interger value. Print working progress message every print.count loops. BEWARE: can increase substentially time complete process using small integer value, like 10 instance. Use Inf loop message desired. plot.fun Single logical value. Plot plotting function tested test? Ignored tested function graphic function. export Single logical value. Export results .RData file .tsv file? FALSE, return list console (see ). BEWARE: automatically set TRUE parall TRUE. means using parallelization, results systematically exported, returned console. res.path Single character string indicating absolute pathway folder txt results pdfs, containing plots, saved. Several txt pdf, one per thread, parallelization. Ignored export FALSE. Must specified parall TRUE export TRUE. lib_path Vector characters specifying absolute pathways directories containing required packages default directories. Ignored NULL. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/arg_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arg_test — arg_test","text":"One several pdf plotting function tested plot.fun argument TRUE. , export FALSE list containing: - $fun: tested function. - $ini: initial input values. - $data: data frame combination tested, containing following columns: # different values tested, named arguments      - $kind: vector character strings indicating kind test result: either \"ERROR\", \"WARNING\", \"OK\".      - $problem: logical vector indicating error . - $expected.error: optional logical vector indicating expected error specified expect.error argument.      - $message: either NULL $kind always \"OK\", messages. - $sys.info: system packages info. export TRUE: - list object .RData file. - also $data data frame .tsv file. - expect.error non NULL discrepancy, $data data frame .tsv file containing rows discrepancies expected observed errors.","code":""},{"path":"/reference/arg_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"arg_test — arg_test","text":"Limited 43 arguments least 2 values . total number arguments tested can additional arguments single value. limit due nested \"\" loops (https://stat.ethz.ch/pipermail/r-help/2008-March/157341.html), limitation away number tests performed 2^43.","code":""},{"path":[]},{"path":"/reference/arg_test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"arg_test — arg_test","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/arg_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arg_test — arg_test","text":"","code":"arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA))) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> $fun #> [1] \"unique\" #>  #> $ini #> arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(x = list(1:10,  #>     c(1, 1, 2, 8), NA), incomparable = c(TRUE, FALSE, NA))) #>  #> $data #>                               x incomparables kind problem message #> arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE         #> arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE         #> arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE         #> arg_test_4              1 1 2 8          TRUE   OK   FALSE         #> arg_test_5              1 1 2 8         FALSE   OK   FALSE         #> arg_test_6              1 1 2 8            NA   OK   FALSE         #> arg_test_7                   NA          TRUE   OK   FALSE         #> arg_test_8                   NA         FALSE   OK   FALSE         #> arg_test_9                   NA            NA   OK   FALSE         #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      png_0.1-8          #> [41] purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         remotes_2.5.0.9000 #> [45] reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [49] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [53] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [57] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [61] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA),  incomparable = c(TRUE, FALSE, NA)), expect.error = list(x = list(FALSE, FALSE, TRUE),  incomparable = c(FALSE, FALSE, TRUE))) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE $data RESULT) #>  #> $fun #> [1] \"unique\" #>  #> $ini #> arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"), val = list(x = list(1:10,  #>     c(1, 1, 2, 8), NA), incomparable = c(TRUE, FALSE, NA)), expect.error = list(x = list(FALSE,  #>     FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE))) #>  #> $data #>                               x incomparables kind problem expected.error #> arg_test_1 1 2 3 4 5 6 7 8 9 10          TRUE   OK   FALSE          FALSE #> arg_test_2 1 2 3 4 5 6 7 8 9 10         FALSE   OK   FALSE          FALSE #> arg_test_3 1 2 3 4 5 6 7 8 9 10            NA   OK   FALSE           TRUE #> arg_test_4              1 1 2 8          TRUE   OK   FALSE          FALSE #> arg_test_5              1 1 2 8         FALSE   OK   FALSE          FALSE #> arg_test_6              1 1 2 8            NA   OK   FALSE           TRUE #> arg_test_7                   NA          TRUE   OK   FALSE           TRUE #> arg_test_8                   NA         FALSE   OK   FALSE           TRUE #> arg_test_9                   NA            NA   OK   FALSE           TRUE #>            message #> arg_test_1         #> arg_test_2         #> arg_test_3         #> arg_test_4         #> arg_test_5         #> arg_test_6         #> arg_test_7         #> arg_test_8         #> arg_test_9         #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      png_0.1-8          #> [41] purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         remotes_2.5.0.9000 #> [45] reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [49] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [53] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [57] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [61] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"unique\", arg = c(\"x\", \"incomparables\"),  val = list(x = list(1:10, c(1,1,2,8), NA), incomparable = c(TRUE, FALSE, NA)),  expect.error = list(x = list(FALSE, FALSE, TRUE), incomparable = c(FALSE, FALSE, TRUE)),  export = TRUE, res.path = getwd()) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 9 #>  #> LOOP PROCESS ENDED | LOOP 9 / 9 | TIME SPENT: 0S #>  #> DISCREPANCIES BETWEEN EXPECTED AND OBSERVED ERRORS (SEE THE discrepancy_table_from_arg_test_1-9.tsv FILE) #>  #> test JOB END #>  #> TIME: 2024-11-27 09:24:38.409335 #>  #> TOTAL TIME LAPSE: 0S #>  #>  #> Warning: FROM arg_test() OF THE saferDev PACKAGE #>  #> (1) THE FIRST FOR & WHILE LOOP STEPS HAVE BEEN TOO FAR AND SUBSEQUENT LOOP STEPS WILL NOT RUN  # Return an error if you run this example # arg_test(fun = \"round\", arg = c(\"data\", \"dec.nb\", \"after.lead.zero\"), val = list(L1 = list(c(1, 1.0002256, 1.23568), \"a\", NA), L2 = list(2, c(1,3), NA), L3 = c(TRUE, FALSE, NA)))  arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10, 12:13, NA, (1:10)^2),  y = list(1:10, NA, NA)),  expect.error = list(x = list(FALSE, TRUE, TRUE, FALSE),  y = list(FALSE, TRUE, TRUE)), parall = FALSE, thread.nb = NULL, plot.fun = TRUE,  res.path = \".\", lib_path = NULL) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 12 #>  #> LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-11-27 09:24:38.696067 #> LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S #>  #> NO DISCREPANCY BETWEEN EXPECTED AND OBSERVED ERRORS #>  #> $fun #> [1] \"plot\" #>  #> $ini #> arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10,  #>     12:13, NA, (1:10)^2), y = list(1:10, NA, NA)), expect.error = list(x = list(FALSE,  #>     TRUE, TRUE, FALSE), y = list(FALSE, TRUE, TRUE)), parall = FALSE,  #>     thread.nb = NULL, plot.fun = TRUE, res.path = \".\", lib_path = NULL) #>  #> $data #>                                       x                    y  kind problem #> arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_05                       12 13                   NA ERROR    TRUE #> arg_test_06                       12 13                   NA ERROR    TRUE #> arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_08                          NA                   NA ERROR    TRUE #> arg_test_09                          NA                   NA ERROR    TRUE #> arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #> arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #>             expected.error #> arg_test_01          FALSE #> arg_test_02           TRUE #> arg_test_03           TRUE #> arg_test_04           TRUE #> arg_test_05           TRUE #> arg_test_06           TRUE #> arg_test_07           TRUE #> arg_test_08           TRUE #> arg_test_09           TRUE #> arg_test_10          FALSE #> arg_test_11           TRUE #> arg_test_12           TRUE #>                                                                                      message #> arg_test_01                                                                                  #> arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_10                                                                                  #> arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      png_0.1-8          #> [41] purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         remotes_2.5.0.9000 #> [45] reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [49] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [53] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [57] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [61] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10, 12:13, NA,  (1:10)^2), y = list(1:10, NA, NA)), parall = FALSE, thread.nb = 4,  plot.fun = TRUE, res.path = \".\",  lib_path = NULL) #>  #> test JOB IGNITION #>  #> TOTAL NUMBER OF TESTS: 12 #>  #> LOOP 10 / 12 | TIME SPENT: 0S | EXPECTED END: 2024-11-27 09:24:38.993989 #> LOOP PROCESS ENDED | LOOP 12 / 12 | TIME SPENT: 0S #>  #> $fun #> [1] \"plot\" #>  #> $ini #> arg_test(fun = \"plot\", arg = c(\"x\", \"y\"), val = list(x = list(1:10,  #>     12:13, NA, (1:10)^2), y = list(1:10, NA, NA)), parall = FALSE,  #>     thread.nb = 4, plot.fun = TRUE, res.path = \".\", lib_path = NULL) #>  #> $data #>                                       x                    y  kind problem #> arg_test_01        1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_02        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_03        1 2 3 4 5 6 7 8 9 10                   NA ERROR    TRUE #> arg_test_04                       12 13 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_05                       12 13                   NA ERROR    TRUE #> arg_test_06                       12 13                   NA ERROR    TRUE #> arg_test_07                          NA 1 2 3 4 5 6 7 8 9 10 ERROR    TRUE #> arg_test_08                          NA                   NA ERROR    TRUE #> arg_test_09                          NA                   NA ERROR    TRUE #> arg_test_10 1 4 9 16 25 36 49 64 81 100 1 2 3 4 5 6 7 8 9 10    OK   FALSE #> arg_test_11 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #> arg_test_12 1 4 9 16 25 36 49 64 81 100                   NA ERROR    TRUE #>                                                                                      message #> arg_test_01                                                                                  #> arg_test_02 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_03 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_04 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_05 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_06 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_07 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_08                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_09                          Error in plot.window(...) : need finite 'xlim' values\\n #> arg_test_10                                                                                  #> arg_test_11 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #> arg_test_12 Error in xy.coords(x, y, xlabel, ylabel, log) : \\n  'x' and 'y' lengths differ\\n #>  #> $sys.info #> R version 4.3.3 (2024-02-29) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.4 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               #>  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=C               #>  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    #>  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  #>  [9] LC_ADDRESS=C               LC_TELEPHONE=C             #> [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] saferDev_1.0 #>  #> loaded via a namespace (and not attached): #>  [1] Matrix_1.6-5       R6_2.5.1           Rcpp_1.0.12        askpass_1.2.0      #>  [5] brio_1.1.4         bslib_0.7.0        cachem_1.0.8       cli_3.6.2          #>  [9] colorspace_2.1-0   compiler_4.3.3     curl_5.2.1         desc_1.4.3         #> [13] digest_0.6.35      downlit_0.4.3      evaluate_0.23      fansi_1.0.6        #> [17] fastmap_1.1.1      fs_1.6.3           generics_0.1.3     ggplot2_3.5.0      #> [21] glue_1.7.0         grid_4.3.3         gtable_0.3.5       htmltools_0.5.8.1  #> [25] htmlwidgets_1.6.4  httr_1.4.7         jquerylib_0.1.4    jsonlite_1.8.8     #> [29] knitr_1.46         lattice_0.22-6     lifecycle_1.0.4    lubridate_1.9.3    #> [33] magrittr_2.0.3     memoise_2.0.1      munsell_0.5.1      parallel_4.3.3     #> [37] pillar_1.9.0       pkgconfig_2.0.3    pkgdown_2.0.9      png_0.1-8          #> [41] purrr_1.0.2        qpdf_1.3.3         ragg_1.3.0         remotes_2.5.0.9000 #> [45] reticulate_1.36.1  rlang_1.1.3        rmarkdown_2.26     rstudioapi_0.16.0  #> [49] sass_0.4.9         scales_1.3.0       systemfonts_1.0.6  testthat_3.2.1.1   #> [53] textshaping_0.3.7  tibble_3.2.1       timechange_0.3.0   tools_4.3.3        #> [57] utf8_1.2.4         vctrs_0.6.5        whisker_0.4.1      withr_3.0.0        #> [61] xfun_0.43          xml2_1.3.6         yaml_2.3.8         #>   # set.seed(1) ;  # obs1 <- data.frame(Time = c(rnorm(10), rnorm(10) + 2), Group1 = rep(c(\"G\", \"H\"), each = 10),  # stringsAsFactors = TRUE) ; arg_test(fun = \"ggbox\", arg = c(\"data1\", \"y\", \"categ\"),  # val = list(L1 = list(L1 = obs1), L2 = list(L1 = \"Time\"), L3 = list(L1 = \"Group1\")))  # set.seed(1) ;  # obs1 <- data.frame(Time = c(rnorm(10), rnorm(10) + 2), Group1 = rep(c(\"G\", \"H\"), each = 10),  # stringsAsFactors = TRUE) ;  # arg_test(fun = \"ggbox\", arg = c(\"data1\", \"y\", \"categ\"), val = list(L1 = list(obs1),  # L2 = \"Time\", L3 = \"Group1\"), parall = FALSE, thread.nb = NULL, plot.fun = TRUE,  # res.path = \"C:\\Users\\yhan\\Desktop\\\", lib_path = \"C:\\Program Files\\R\\R-4.3.1\\library\\\")  # library(ggplot2) ; arg_test(fun = \"geom_histogram\", arg = c(\"data\", \"mapping\"),  # val = list(x = list(data.frame(X = \"a\", stringsAsFactors = TRUE)),  # y = list(ggplot2::aes(x = X))), parall = FALSE, thread.nb = NULL,  # plot.fun = TRUE, res.path = \"C:\\Users\\yhan\\Desktop\\\",  # lib_path = \"C:\\Program Files\\R\\R-4.3.1\\library\\\")  # BEWARE: ggplot2::geom_histogram does not work"},{"path":"/reference/colons_check.html","id":null,"dir":"Reference","previous_headings":"","what":"colons_check — colons_check","title":"colons_check — colons_check","text":"Verify functions used inside function referenced package attribution. instance: base::mean() mean(), saferDev:::.base_op_check() .base_op_check().","code":""},{"path":"/reference/colons_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"colons_check — colons_check","text":"","code":"colons_check(x, safer_check = TRUE)"},{"path":"/reference/colons_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"colons_check — colons_check","text":"x function name, written without quotes brackets. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/colons_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"colons_check — colons_check","text":"table-like message indicating missing :: ::: message saying everything seems fine. Table-like: column 1, line number function code (starting \"<- function\" line, .e., without counting #' header lines); column 2,  function name; column 3, code preceeding function name missing :: :::, message also indicates internal functions created inside checked function code, since functions :: :::.","code":""},{"path":"/reference/colons_check.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"colons_check — colons_check","text":"- Use result modify code function like : <PACKAGE>::<FUNCTION> (<PACKAGE>:::<FUNCTION> function names starting dot) - precisely, colons_check() verifies strings opening bracket \"(\" preceeded \"::\" - \":::\" checked per se, incorrect writting, like saferDev::.colons_check_message() returns error, base:::sum() ok base::sum(). manner, three colons checked returns error. - Warning: function check function names written without brackets, like FUN argument functions, e.g., sapply(1:3, FUN = .character). - perl regex used detect function name : \"[-zA-Z.]1[-zA-Z0-9._]*\\s*\\(\". - Function names preceeded $ space considered (pattern \"\\$ *[-zA-Z.]1[-zA-Z0-9._]* *\\(\") - following R functions using bracket considered: \"function\", \"\", \"\", \"\" \"repeat\". - time, colons_check() check inside comments, unexpected writting dupe colons_check(). - returned line numbers indicative, depending source checked. instance, saferDev::report (compiled) line numbers source file (https://github.com/safer-r/saferDev/blob/main/R/report.R). Notably, compiled functions comments anymore, compared source function sourced working environment. addition, counting starts \"<- function\" line, .e., without counting #' header lines potentially present source files. - note, package creation, devtools::check() command tells functions wrongly attributed package. Example:      checking dependencies R code ... WARNING       '::' ':::' import declared : 'sbase'       Missing unexported objects:         'base::dev.' 'base::graphics.' 'base::hcl' 'base::par' 'base::read.table' 'saferGG::report'","code":""},{"path":"/reference/colons_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"colons_check — colons_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/colons_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"colons_check — colons_check","text":"","code":"colons_check(mean) #>  #>  #> INSIDE mean(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 2\tUseMethod\t\t #>  colons_check(colons_check) #>  #>  #> AFTER RUNNING colons_check() OF THE saferDev PACKAGE: #> INSIDE colons_check, EVERYTHING SEEMS CLEAN #>  source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") ; colons_check(test) #>  #>  #> INSIDE test(), SOME :: OR ::: ARE MISSING AT BASIC FUNCTION POSITIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 5\tgregexpr\t\tmatches <-  #> 8\tregmatches\t\tmatched_strings <-  #> 11\tsum\t\t #> 18\tsub\t\tresult <-  #> 19\trange\t\t #> 22\treturn\t\t #>  #> INSIDE test(), INTERNAL FUNCTION DETECTED: #> F #>  #> INSIDE test(), SOME :: OR ::: ARE MISSING AT OTHER FUNCTION POSITIONS: #>  #> LINE\tFUN\t\tSTRING_BEFORE #> 9\tFUN1\t\t #> 16\troc1\t\tbase::length( #> 20\troc4\t\ttempo.cat <- base::paste0(\"IAGE\\nLENGTHS OF roc00() (\", base::ks.test( #>"},{"path":"/reference/env_check.html","id":null,"dir":"Reference","previous_headings":"","what":"env_check — env_check","title":"env_check — env_check","text":"Verify object names environment defined pos parameter identical object names environments (following R Scope). can used verify names used objects inside function working environment override names objects already present R environments, following R scope.","code":""},{"path":"/reference/env_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"env_check — env_check","text":"","code":"env_check(pos = 1, name = NULL, safer_check = TRUE)"},{"path":"/reference/env_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"env_check — env_check","text":"pos Single non nul positive integer indicating position environment checked (argument n parent.frame() function). Value 1 means one step env_check() local environment (default). means env_check(pos = 1) used inside function , checks name object local environment function also present environments, following R Scope, starting just environment. env_check(pos = 1) used working (Global) environment (named .GlobalEnv), checks object names .GlobalEnv environment, environments. See examples . name Single character string indicating string added output string, instance name function inside env_check() used. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/env_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"env_check — env_check","text":"character string indicating object names tested environment match object names environments, following R scope, NULL match.","code":""},{"path":[]},{"path":"/reference/env_check.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"env_check — env_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/env_check.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"env_check — env_check","text":"","code":"# Examples in the working environment # creation of the object mean with value 1 in the .GlobalEnv environment,  # knowing that the mean() function also exists in the environment base, above .GlobalEnv: mean <- 1  # creation of the object t.test with value 1 in the .GlobalEnv environment,  # knowing that the t.test() function also exists in the environment stats, above .GlobalEnv: t.test <- 1  search() # current R scope (order of the successive R environments). #>  [1] \".GlobalEnv\"        \"package:saferDev\"  \"package:stats\"     #>  [4] \"package:graphics\"  \"package:grDevices\" \"package:utils\"     #>  [7] \"package:datasets\"  \"package:methods\"   \"Autoloads\"         #> [10] \"package:base\"      utils::find(\"mean\") # where the objects with the name \"mean\" are present. #> [1] \"package:base\" utils::find(\"t.test\") # where the objects with the name \"mean\" are present. #> [1] \"package:stats\" a <- env_check(pos = 1) # test if any object name of the global environment are above environments  a # output string. #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" cat(a) #> SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN : #> package:stats: t.test #> package:base: mean # test if any object of the stats environment (one step above .GlobalEnv)  # are in upper environments of stats. Returns NULL since no object names of stats are in upper environments: env_check(pos = 2)  #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\neval_with_user_handlers(expr, envir, enclos, user_handlers): enclos envir expr\\nwithCallingHandlers(withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers)), warning = wHandler, error = eHandler, message = mHandler): expr\\ndoTryCatch(return(expr), name, parentenv, handler): expr\\ntryCatchOne(expr, names, parentenv, handlers[[1]]): expr\\ntryCatchList(expr, classes, parentenv, handlers): expr\\ntryCatch(expr, error = function(e) {\\n    call <- conditionCall(e)\\n    if (!is.null(call)) {\\n        if (identical(call[[1]], quote(doTryCatch))) \\n            call <- sys.call(-4)\\n        dcall <- deparse(call, nlines = 1)\\n        prefix <- paste(\\\"Error in\\\", dcall, \\\": \\\")\\n        LONG <- 75\\n        sm <- strsplit(conditionMessage(e), \\\"\\\\n\\\")[[1]]\\n        w <- 14 + nchar(dcall, type = \\\"w\\\") + nchar(sm[1], type = \\\"w\\\")\\n        if (is.na(w)) \\n            w <- 14 + nchar(dcall, type = \\\"b\\\") + nchar(sm[1], type = \\\"b\\\")\\n        if (w > LONG) \\n            prefix <- paste0(prefix, \\\"\\\\n  \\\")\\n    }\\n    else prefix <- \\\"Error : \\\"\\n    msg <- paste0(prefix, conditionMessage(e), \\\"\\\\n\\\")\\n    .Internal(seterrmessage(msg[1]))\\n    if (!silent && isTRUE(getOption(\\\"show.error.messages\\\"))) {\\n        cat(msg, file = outFile)\\n        .Internal(printDeferredWarnings())\\n    }\\n    invisible(structure(msg, class = \\\"try-error\\\", condition = e))\\n}): expr\\ntry(f, silent = TRUE): expr\\nevaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos, debug = debug, last = i == length(out), use_try = stop_on_error != 2, keep_warning = keep_warning, keep_message = keep_message, log_echo = log_echo, log_warning = log_warning, output_handler = output_handler, include_timing = include_timing): enclos envir expr\\nevaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler): enclos envir expr\\nwithCallingHandlers(data_reference_topic(topic, pkg, examples_env = examples_env, run_dont_run = run_dont_run), error = function(err) {\\n    cli::cli_abort(\\\"Failed to parse Rd in {.file {topic$file_in}}\\\", parent = err, call = quote(build_reference()))\\n}): expr\\nwithCallingHandlers(expr, error = function(cnd) {\\n    if (i == 0) {\\n    }\\n    else {\\n        message <- c(i = \\\"In index: {i}.\\\")\\n        if (!is.null(names) && !is.na(names[[i]]) && names[[i]] != \\\"\\\") {\\n            name <- names[[i]]\\n            message <- c(message, i = \\\"With name: {name}.\\\")\\n        }\\n        else {\\n            name <- NULL\\n        }\\n        cli::cli_abort(message, location = i, name = name, parent = cnd, call = error_call, class = \\\"purrr_error_indexed\\\")\\n    }\\n}): expr\\nwith_indexed_errors(i = i, names = names, error_call = .purrr_error_call, call_with_cleanup(map_impl, environment(), .type, .progress, n, names, i)): expr\\nwithCallingHandlers(code, purrr_error_indexed = function(err) {\\n    cnd_signal(err$parent)\\n}): expr\\n\" rm(mean) ; rm (t.test)  # Examples inside a function # env_check() checks if the object names inside the fun1 function  # exist in the .GlobalEnv environment and above: fun1 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 1)}  fun1() #> [1] \"SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" cat(fun1()) #> SOME VARIABLES OF THE CHECKED ENVIRONMENT ARE ALSO PRESENT IN : #> package:stats: t.test #> package:base: mean # env_check() checks if the object names inside the environment one step above fun2(),  # here .GlobalEnv, exist in the upper environments of .GlobalEnv: fun2 <- function(){sum <- 0 ; env_check(pos = 2)}  fun2() #> NULL # Warning: cat(fun2()) does not return NULL, because the environement tested is not anymore .GlobalEnv but inside cat(). # With the name of the function fun3 indicated in the message: fun3 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 1, name = \"fun3\")} fun3() #> [1] \"SOME VARIABLES OF fun3 ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" # Alternative way: fun4 <- function(){t.test <- 0 ; mean <- 5 ; env_check(pos = 1, name = as.character(sys.calls()[[length(sys.calls())]]))} fun4() #> [1] \"SOME VARIABLES OF fun4 ARE ALSO PRESENT IN :\\npackage:stats: t.test\\npackage:base: mean\\n\" # sys.calls() gives the name of the imbricated functions,  # sys.calls()[[length(sys.calls())]] the name of the function one step above. fun5 <- function(){fun6 <- function(){print(sys.calls())} ; fun6()} fun5() #> [[1]] #> pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE) #>  #> [[2]] #> build_site(pkg, preview = FALSE, install = install, new_process = new_process,  #>     ...) #>  #> [[3]] #> build_site_local(pkg = pkg, examples = examples, run_dont_run = run_dont_run,  #>     seed = seed, lazy = lazy, override = override, preview = preview,  #>     devel = devel) #>  #> [[4]] #> build_reference(pkg, lazy = lazy, examples = examples, run_dont_run = run_dont_run,  #>     seed = seed, override = override, preview = FALSE, devel = devel) #>  #> [[5]] #> unwrap_purrr_error(purrr::map(topics, build_reference_topic,  #>     pkg = pkg, lazy = lazy, examples_env = examples_env, run_dont_run = run_dont_run)) #>  #> [[6]] #> withCallingHandlers(code, purrr_error_indexed = function(err) { #>     cnd_signal(err$parent) #> }) #>  #> [[7]] #> purrr::map(topics, build_reference_topic, pkg = pkg, lazy = lazy,  #>     examples_env = examples_env, run_dont_run = run_dont_run) #>  #> [[8]] #> map_(\"list\", .x, .f, ..., .progress = .progress) #>  #> [[9]] #> with_indexed_errors(i = i, names = names, error_call = .purrr_error_call,  #>     call_with_cleanup(map_impl, environment(), .type, .progress,  #>         n, names, i)) #>  #> [[10]] #> withCallingHandlers(expr, error = function(cnd) { #>     if (i == 0L) { #>     } #>     else { #>         message <- c(i = \"In index: {i}.\") #>         if (!is.null(names) && !is.na(names[[i]]) && names[[i]] !=  #>             \"\") { #>             name <- names[[i]] #>             message <- c(message, i = \"With name: {name}.\") #>         } #>         else { #>             name <- NULL #>         } #>         cli::cli_abort(message, location = i, name = name, parent = cnd,  #>             call = error_call, class = \"purrr_error_indexed\") #>     } #> }) #>  #> [[11]] #> call_with_cleanup(map_impl, environment(), .type, .progress,  #>     n, names, i) #>  #> [[12]] #> .f(.x[[i]], ...) #>  #> [[13]] #> withCallingHandlers(data_reference_topic(topic, pkg, examples_env = examples_env,  #>     run_dont_run = run_dont_run), error = function(err) { #>     cli::cli_abort(\"Failed to parse Rd in {.file {topic$file_in}}\",  #>         parent = err, call = quote(build_reference())) #> }) #>  #> [[14]] #> data_reference_topic(topic, pkg, examples_env = examples_env,  #>     run_dont_run = run_dont_run) #>  #> [[15]] #> run_examples(tags$tag_examples[[1]], env = if (is.null(examples_env)) NULL else new.env(parent = examples_env),  #>     topic = tools::file_path_sans_ext(topic$file_in), run_dont_run = run_dont_run) #>  #> [[16]] #> highlight_examples(code, topic, env = env) #>  #> [[17]] #> downlit::evaluate_and_highlight(code, fig_save = fig_save_topic,  #>     env = child_env(env), output_handler = evaluate::new_output_handler(value = pkgdown_print)) #>  #> [[18]] #> evaluate::evaluate(code, child_env(env), new_device = TRUE, output_handler = output_handler) #>  #> [[19]] #> evaluate_call(expr, parsed$src[[i]], envir = envir, enclos = enclos,  #>     debug = debug, last = i == length(out), use_try = stop_on_error !=  #>         2L, keep_warning = keep_warning, keep_message = keep_message,  #>     log_echo = log_echo, log_warning = log_warning, output_handler = output_handler,  #>     include_timing = include_timing) #>  #> [[20]] #> timing_fn(handle(ev <- withCallingHandlers(withVisible(eval_with_user_handlers(expr,  #>     envir, enclos, user_handlers)), warning = wHandler, error = eHandler,  #>     message = mHandler))) #>  #> [[21]] #> handle(ev <- withCallingHandlers(withVisible(eval_with_user_handlers(expr,  #>     envir, enclos, user_handlers)), warning = wHandler, error = eHandler,  #>     message = mHandler)) #>  #> [[22]] #> try(f, silent = TRUE) #>  #> [[23]] #> tryCatch(expr, error = function(e) { #>     call <- conditionCall(e) #>     if (!is.null(call)) { #>         if (identical(call[[1L]], quote(doTryCatch)))  #>             call <- sys.call(-4L) #>         dcall <- deparse(call, nlines = 1L) #>         prefix <- paste(\"Error in\", dcall, \": \") #>         LONG <- 75L #>         sm <- strsplit(conditionMessage(e), \"\\n\")[[1L]] #>         w <- 14L + nchar(dcall, type = \"w\") + nchar(sm[1L], type = \"w\") #>         if (is.na(w))  #>             w <- 14L + nchar(dcall, type = \"b\") + nchar(sm[1L],  #>                 type = \"b\") #>         if (w > LONG)  #>             prefix <- paste0(prefix, \"\\n  \") #>     } #>     else prefix <- \"Error : \" #>     msg <- paste0(prefix, conditionMessage(e), \"\\n\") #>     .Internal(seterrmessage(msg[1L])) #>     if (!silent && isTRUE(getOption(\"show.error.messages\"))) { #>         cat(msg, file = outFile) #>         .Internal(printDeferredWarnings()) #>     } #>     invisible(structure(msg, class = \"try-error\", condition = e)) #> }) #>  #> [[24]] #> tryCatchList(expr, classes, parentenv, handlers) #>  #> [[25]] #> tryCatchOne(expr, names, parentenv, handlers[[1L]]) #>  #> [[26]] #> doTryCatch(return(expr), name, parentenv, handler) #>  #> [[27]] #> withCallingHandlers(withVisible(eval_with_user_handlers(expr,  #>     envir, enclos, user_handlers)), warning = wHandler, error = eHandler,  #>     message = mHandler) #>  #> [[28]] #> withVisible(eval_with_user_handlers(expr, envir, enclos, user_handlers)) #>  #> [[29]] #> eval_with_user_handlers(expr, envir, enclos, user_handlers) #>  #> [[30]] #> eval(expr, envir, enclos) #>  #> [[31]] #> eval(expr, envir, enclos) #>  #> [[32]] #> fun5() #>  #> [[33]] #> fun6() #>  # A way to have the name of the tested environment according to test.pos value: fun7 <- function(){     min <- \"a\"     fun8 <- function(){         test.pos <- 1 # value 1 tests the fun8 env, 2 tests the fun7 env.         range <- \"a\"         env_check(pos = test.pos, name = if(length(sys.calls()) >= test.pos){             as.character(sys.calls()[[length(sys.calls()) + 1 - test.pos]])         }else{             search()[(1:length(search()))[test.pos - length(sys.calls())]]         })      }     fun8() } fun7() #> [1] \"SOME VARIABLES OF fun8 ARE ALSO PRESENT IN :\\npackage:base: range\\n\""},{"path":"/reference/get_message.html","id":null,"dir":"Reference","previous_headings":"","what":"get_message — get_message","title":"get_message — get_message","text":"Evaluate instruction written \"\" return first error, warning standard (non error non warning) messages ever exist. Using argument print.= FALSE, return NULL message, convenient cases.","code":""},{"path":"/reference/get_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_message — get_message","text":"","code":"get_message(   data,   kind = \"error\",   header = TRUE,   print.no = FALSE,   text = NULL,   env = NULL,   safer_check = TRUE )"},{"path":"/reference/get_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_message — get_message","text":"data Single character string evaluate. kind Single character string. Either \"error\" get error messages, \"warning\" get warning messages, \"message\" get non error non warning messages. header Single logical value. Add header returned message? print.Single logical value. Print message saying message reported? text Single character string added output message (even message exists print.TRUE). Inactivated header argument FALSE. Write NULL required. env name existing environment. Write NULL required. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/get_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_message — get_message","text":"message NULL message print.FALSE.","code":""},{"path":"/reference/get_message.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get_message — get_message","text":"WARNINGS first standard/error/warning message returned. Always use env argument get_message() used inside functions. function prevent printing print() used inside instruction tested. prevent , use tempo <- utils::capture.output(error <- get_message(data = \"arg_check(data = '', class = mean, neg_values = FALSE, print = TRUE)\")). return get_message() assigned error printed messages captured utils::capture.output() assigned tempo. See examples.","code":""},{"path":[]},{"path":"/reference/get_message.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_message — get_message","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/get_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_message — get_message","text":"","code":"get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"warning\",  print.no = TRUE, text = \"IN A\") #> [1] \"WARNING MESSAGE REPORTED IN A:\\nsimpleWarning in wilcox.test.default(c(1, 1, 3), c(1, 2, 4), paired = TRUE): cannot compute exact p-value with zeroes\\n\"  get_message(data = \"wilcox.test(c(1,1,3), c(1, 2, 4), paired = TRUE)\", kind = \"message\",  print.no = TRUE, text = \"IN A\") #> [1] \"NO STANDARD (NON ERROR AND NON WARNING) MESSAGE REPORTED IN A\"  get_message(data = \"wilcox.test()\", kind = \"message\", print.no = TRUE, text = \"IN A\") #> [1] \"NO POTENTIAL STANDARD (NON ERROR AND NON WARNING) MESSAGE BECAUSE OF ERROR MESSAGE REPORTED IN A\" get_message(data = \"wilcox.test()\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"ERROR MESSAGE REPORTED IN A:\\nIn wilcox.test.default() : argument \\\"x\\\" is missing, with no default\\n\"  get_message(data = \"sum(1)\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"message('ahah')\", kind = \"error\", print.no = TRUE, text = \"IN A\") #> [1] \"NO ERROR MESSAGE REPORTED IN A\"  get_message(data = \"message('ahah')\", kind = \"message\", print.no = TRUE, text = \"IN A\") #> ahah #> [1] \"NO STANDARD (NON ERROR AND NON WARNING) MESSAGE REPORTED IN A\"  get_message(data = \"ggplot2::ggplot(data = data.frame(X = 1:10, stringsAsFactors = TRUE),  mapping = ggplot2::aes(x = X)) + ggplot2::geom_histogram()\", kind = \"message\", print.no = TRUE,  text = \"IN INSTRUCTION 1\") #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #> [1] \"NO STANDARD (NON ERROR AND NON WARNING) MESSAGE REPORTED IN INSTRUCTION 1\"  set.seed(1) ;  obs1 <- data.frame(Time = c(rnorm(10), rnorm(10) + 2),  Group1 = rep(c(\"G\", \"H\"), each = 10), stringsAsFactors = TRUE) ;  get_message(data = 'gg_boxplot(data = obs1, y = \"Time\", categ = \"Group1\")',  kind = \"message\", print.no = TRUE, text = \"IN INSTRUCTION 1\") #> [1] \"NO POTENTIAL STANDARD (NON ERROR AND NON WARNING) MESSAGE BECAUSE OF ERROR MESSAGE REPORTED IN INSTRUCTION 1\""},{"path":"/reference/internal_function.html","id":null,"dir":"Reference","previous_headings":"","what":".pack_and_function_check — .pack_and_function_check","title":".pack_and_function_check — .pack_and_function_check","text":"Check 1) required functions present required packages 2) required packages installed locally. Simplified version saferDev::is_function_here(), used internal function functions package. Check critical operators R present packages global env. Others functions R scope can overwritten safer functions always use :: using function. Determine string odd number quotes. Extract function names. Replace pattern inside simple ou double quotes another replacement pattern get position replacements Replace pattern inside () another replacement pattern Indicate function names inside quotes $ Return positions 1st letter function name opening closing parenthesis, well positions internal parenthesis. Detect functions names used inside function. Create message colons_check() function. Get $MISSING_ARG_NAMES, $MISSING_ARGS $NEW all_args_here()","code":""},{"path":"/reference/internal_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".pack_and_function_check — .pack_and_function_check","text":"","code":".pack_and_function_check(   fun,   lib_path,   external_function_name,   external_package_name )  .base_op_check(external_function_name, external_package_name)  .has_odd_number_of_quotes(input_string, pattern = \"\\\"\")  .extract_all_fun_names(text, pattern)  .in_quotes_replacement(   string,   pattern,   no_regex_pattern,   replacement,   perl,   function_name,   package_name )  .in_parenthesis_replacement(   string,   pattern,   no_regex_pattern,   replacement,   perl,   open_pos,   close_pos,   function_name,   package_name )  .noclean_functions(col1, col2, col3, ini)  .fun_args_pos(text, pattern, function_name, package_name)  .functions_detect(x, arg_user_setting, function_name, package_name)  .colons_check_message(   list.fun,   fun.uni,   list.fun.pos,   line.nb,   ini,   arg_user_setting,   function_name,   package_name,   text,   internal_fun_names )  .all_args_here_fill(   arg_full,   arg_full_names,   tempo_split,   three_dots_log,   i2,   col1_i2,   col2_i2,   arg_user_setting_x,   function_name,   package_name,   warn,   warn_count )"},{"path":"/reference/internal_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":".pack_and_function_check — .pack_and_function_check","text":"fun Character vector names required functions, preceded name package belong double triple colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). lib_path Character vector specifying absolute pathways directories containing listed packages fun argument, default directories. NULL, function checks base::.libPaths() default R library folders. external_function_name Name function using .pack_and_function_check() function. external_package_name Name package function using .pack_and_function_check() function. input_string Single string. pattern Single string indicating pattern detect. Warning : must simple pattern, like \",\". text either \"BASIC\" \"\". string Single string. no_regex_pattern Single string pattern detect without escape characters list, etc. replacement Single string pattern replacement. regex. perl Single logical value. Use Perl regex pattern ? function_name function name. package_name package name. open_pos single integer indicating position opening parenthesis. close_pos single integer indicating position closing parenthesis. col1 vector strings. col2 vector strings function names. col3 vector strings code function name. ini vector string initial function code analyzed. x function name, written without quotes brackets. arg_user_setting list arg user settings. list.fun list names functions. fun.uni vector unique function names. list.fun.pos list position first character names functions ini. line.nb vector corresponding line number. internal_fun_names vector string names internal functions function code analyzed. arg_full list arguments function default value arg_full_names vector strings names arguments function tempo_split vector strings observed argument writting function. three_dots_log vector logical. ... present among arg_full_names i2 loop number col1_i2 code line number checked function col2_i2 name checked sub function arg_user_setting_x name checked function warn warning string. warn_count warning count. pattern: perl regex extract function name (), using generally paste0(<FUNCTION_NAME>, \"[\\s\\r\\n]*\\(\").","code":""},{"path":"/reference/internal_function.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":".pack_and_function_check — .pack_and_function_check","text":"error message least one checked packages missing lib_path, least one checked functions missing required package, nothing otherwise. error message least one checked operator present R scope, nothing otherwise. TRUE FALSE. list containing: $string: function names without parenthesis. $pos: position first character function names input string list containing: $string: input string pattern replaced replacement pattern. $pos: vector positions 1rst character replaced pattern. NULL replaced pattern. case, $string identical input string. list containing: $string: input string pattern replaced replacement pattern. $pos: positions 1rst character replaced pattern. NULL replaced pattern. case, $string identical input string logical vector indicating function names col2 inside quotes $ (TRUE) ini (FALSE). Can length 0 list containing two positions: $begin_fun: position 1st letter function name. $begin: position \"(\" function. $end: position closing \")\" function. $middle_bracket_pos: list positions couple brackets middle begin end positions. compartment, first number position ( second position ). NULL inside brackets. list: $code: vector strings code tested function. $all_basic_funs: vector strings names basic R functions. $fun_names: list names functions, considering base::c(\"function\", \"\", \"\", \"\", \"repeat\"). Compartment names indicate code line number functions $code. $fun_names_pos: list position first character $fun_names. Compartment names indicate code line number functions $code. $code_line_nb: vector integers code line numbers code non empty compartment $fun_names $fun_names_pos. $internal_fun_names: vector string names internal functions code tested function. $arg_user_setting: list arg user settings tested function. list:  $output.cat: message (string).  $colon_not_here: logical vector. list.fun contain function names without :: ::: ? list:    $col6: $MISSING_ARG_NAMES.    $col7: $MISSING_ARGS.    $col8: $STATUS.","code":""},{"path":"/reference/internal_function.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":".pack_and_function_check — .pack_and_function_check","text":"Warning : must simple pattern, like \"\\(\". Warning : must simple pattern, like \"\\(\". Warning: string must cleaned form brackets quotes. Use .in_quotes_replacement() . Warning: quotes strings escaped, position ( \\\"( 3, 4. - check functions inside code exist. - Use regex pattern \"([-zA-Z]|\\.[-zA-Z._])[-zA-Z0-9._]*\\s*\\(\" detect function code. - $all_basic_funs functions base::c(\"package:stats\", \"package:graphics\",  \"package:grDevices\", \"package:utils\", \"package:datasets\", \"package:methods\", \"Autoloads\", \"package:base\")","code":""},{"path":"/reference/internal_function.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":".pack_and_function_check — .pack_and_function_check","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/internal_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":".pack_and_function_check — .pack_and_function_check","text":"","code":"if (FALSE)  # Example that shouldn't be run because this is an internal function .pack_and_function_check(fun = \"ggplot2::notgood\", lib_path = base::.libPaths(), external_function_name = \"F1\", external_package_name = \"P1\") # this example returns an error .pack_and_function_check(fun = c(\"ggplot2::geom_point\", \"grid::gpar\"), lib_path = base::.libPaths(), external_function_name = \"F1\", external_package_name = \"P1\") #> Error in .pack_and_function_check(fun = c(\"ggplot2::geom_point\", \"grid::gpar\"),     lib_path = base::.libPaths(), external_function_name = \"F1\",     external_package_name = \"P1\"): could not find function \".pack_and_function_check\"  if (FALSE) { # Example that shouldn't be run because this is an internal function assign(\"!\", 1) ; .base_op_check(external_function_name = \"fun1\") # commented because this example returns an error } if (FALSE)  # Example that shouldn't be run because this is an internal function .has_odd_number_of_quotes(input_string = 'This is a \"test\" string with \"even\" quotes', pattern = '\"')  if (FALSE)  # Example that shouldn't be run because this is an internal function .extract_all_fun_names(text = 'This is a test string with sum()', pattern = \"[a-zA-Z.][a-zA-Z0-9._]*\\\\s*\\\\(\")  if (FALSE)  # Example that shouldn't be run because this is an internal function source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") ; .in_quotes_replacement(string = paste(deparse(test), collapse = \"\"), pattern = \"\\\\)\", no_regex_pattern = \")\", replacement = \" \", perl = TRUE, function_name = \"F1\", package_name = \"P1\") #> Error in .in_quotes_replacement(string = paste(deparse(test), collapse = \"\"),     pattern = \"\\\\)\", no_regex_pattern = \")\", replacement = \" \",     perl = TRUE, function_name = \"F1\", package_name = \"P1\"): could not find function \".in_quotes_replacement\" .in_quotes_replacement(string = 'paste0(\"IAGE((\", paste0(1:3, collapse = \" \"), \"A)B()\")', pattern = \"\\\\)\", no_regex_pattern = \")\", replacement = \" \", perl = TRUE, function_name = \"F1\", package_name = \"P1\") #> Error in .in_quotes_replacement(string = \"paste0(\\\"IAGE((\\\", paste0(1:3, collapse = \\\" \\\"), \\\"A)B()\\\")\",     pattern = \"\\\\)\", no_regex_pattern = \")\", replacement = \" \",     perl = TRUE, function_name = \"F1\", package_name = \"P1\"): could not find function \".in_quotes_replacement\"  if (FALSE)  # Example that shouldn't be run because this is an internal function .in_parenthesis_replacement(string = \"pattern = base::paste0(pattern, \\\"\\\\\\\\(#\\\"), text = text\", pattern = \",\", no_regex_pattern = \",\", replacement = \" \", perl = TRUE, open_pos = 23, close_pos = 39, function_name = \"F1\", package_name = \"P1\")  if (FALSE)  # Example that shouldn't be run because this is an internal function source(\"https://raw.githubusercontent.com/safer-r/saferDev/main/dev/other/test.R\") .noclean_functions(col1 =  c(15, 17), col2 = c(\"gregexpr\", \"regmatches\"), col3 = c(\"matches <- \",  \"matched_strings <- \" ), ini = utils::capture.output(test)) #> Error in .noclean_functions(col1 = c(15, 17), col2 = c(\"gregexpr\", \"regmatches\"),     col3 = c(\"matches <- \", \"matched_strings <- \"), ini = utils::capture.output(test)): could not find function \".noclean_functions\"  if (FALSE)  # Example that shouldn't be run because this is an internal function # Warning : examples only with strings that must be cleaned form brackets between quotes .fun_args_pos(text = \"a$regmatches(x = text, m = matches)[[1]]\", pattern = paste0(\"regmatches\", \"[\\\\s\\\\r\\\\n]*\\\\(\"), function_name = \"F1\", package_name = \"P1\") .fun_args_pos(text = ' \"a\" ; paste0(\"I\", paste0(sum(1:3), collapse = \" \"), min(1) ) ; range(2)', pattern = paste0(\"paste0\", \"[\\\\s\\\\r\\\\n]*\\\\(\"), function_name = \"F1\", package_name = \"P1\") #> Error in .fun_args_pos(text = \" \\\"a\\\" ; paste0(\\\"I\\\", paste0(sum(1:3), collapse = \\\" \\\"), min(1) ) ; range(2)\",     pattern = paste0(\"paste0\", \"[\\\\s\\\\r\\\\n]*\\\\(\"), function_name = \"F1\",     package_name = \"P1\"): could not find function \".fun_args_pos\"  if (FALSE)  # Example that shouldn't be run because this is an internal function source(\"C:\\\\Users\\\\gmillot\\\\Documents\\\\Git_projects\\\\safer-r\\\\saferDev\\\\dev\\\\other\\\\test.R\") ; .functions_detect(x = test, arg_user_setting = base::list(x =  as.name(x = \"test\")), function_name = \"F1\", package_name = \"P1\") #> Error in .functions_detect(x = test, arg_user_setting = base::list(x = as.name(x = \"test\")),     function_name = \"F1\", package_name = \"P1\"): could not find function \".functions_detect\""},{"path":"/reference/is_function_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_function_here — is_function_here","title":"is_function_here — is_function_here","text":"Check required functions present installed packages. controls modifications function names package versions.","code":""},{"path":"/reference/is_function_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_function_here — is_function_here","text":"","code":"is_function_here(fun, lib_path = NULL, safer_check = TRUE)"},{"path":"/reference/is_function_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_function_here — is_function_here","text":"fun Character vector names required functions, preceded name package belong double triple colon. Example: c(\"ggplot2::geom_point\", \"grid::gpar\"). Warning: write \"()\" end function lib_path Character vector specifying absolute pathways directories containing listed packages fun argument, default directories. Ignored NULL. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/is_function_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_function_here — is_function_here","text":"error message least one checked packages missing lib_path, least one checked functions missing required package, nothing otherwise.","code":""},{"path":[]},{"path":"/reference/is_function_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_function_here — is_function_here","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/is_function_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_function_here — is_function_here","text":"","code":"# is_function_here(fun = \"ggplot2::notgood\") # commented because this example returns an error # is_function_here(fun = c(\"ggplot2::geom_point\", \"grid::gpar\")) # is_function_here(fun = \"c\")"},{"path":"/reference/is_package_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_package_here — is_package_here","title":"is_package_here — is_package_here","text":"Check required packages installed locally.","code":""},{"path":"/reference/is_package_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_package_here — is_package_here","text":"","code":"is_package_here(req_package, lib_path = NULL, safer_check = TRUE)"},{"path":"/reference/is_package_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_package_here — is_package_here","text":"req_package Character vector package names check. lib_path Character vector specifying absolute pathways directories containing listed packages req_package argument, default directories. NULL, function checks .libPaths() default R library folders. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/is_package_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_package_here — is_package_here","text":"error message least one checked packages missing lib_path, nothing otherwise.","code":""},{"path":[]},{"path":"/reference/is_package_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_package_here — is_package_here","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/is_package_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_package_here — is_package_here","text":"","code":"# is_package_here(req_package = \"nopackage\") # commented because this example returns an error  is_package_here(req_package = \"ggplot2\")  #' # is_package_here(req_package = \"ggplot2\", lib_path = \"C:/Users/yhan/AppData/Local/R/win-library/4.3\") # commented because this example returns an error if the lib_path argument is not an existing directory"},{"path":"/reference/is_python_package_here.html","id":null,"dir":"Reference","previous_headings":"","what":"is_python_package_here — is_python_package_here","title":"is_python_package_here — is_python_package_here","text":"Check specified python packages installed locally.","code":""},{"path":"/reference/is_python_package_here.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"is_python_package_here — is_python_package_here","text":"","code":"is_python_package_here(   req_package,   python_exec_path = NULL,   python_lib_path = NULL,   lib_path = NULL,   safer_check = TRUE )"},{"path":"/reference/is_python_package_here.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"is_python_package_here — is_python_package_here","text":"req_package Character vector package names import. python_exec_path Single optional character vector specifying absolute pathways executable python file use (associated packages use). NULL, reticulate::import_from_path() function used is_python_package_here() seeks available version python.exe, uses python_config(python_version, required_module, python_versions). might correct one python_lib_path parameter specified. Thus, recommanded leave NULL, notably using computing clusters. python_lib_path Optional character vector specifying absolute pathways directories containing listed packages req_package argument, default directories. lib_path Absolute path reticulate packages, default folders. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/is_python_package_here.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"is_python_package_here — is_python_package_here","text":"error message least one checked packages missing python_lib_path, nothing otherwise.","code":""},{"path":"/reference/is_python_package_here.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"is_python_package_here — is_python_package_here","text":"WARNINGS python 3.7. Previous versions return error \"Error sys$stdout$flush() : attempt apply non-function\"","code":""},{"path":"/reference/is_python_package_here.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"is_python_package_here — is_python_package_here","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/is_python_package_here.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"is_python_package_here — is_python_package_here","text":"","code":"# example of error message  # is_python_package_here(req_package = \"nopackage\")   # commented because this example returns an error if the python package is not installed on the computer # (require the installation of the python serpentine package  # from https://github.com/koszullab/serpentine  # is_python_package_here(req_package = \"serpentine\")   # another example of error message  # is_python_package_here(req_package = \"serpentine\", python_lib_path = \"blablabla\")"},{"path":"/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"report — report","title":"report — report","text":"Log file function: print character string data object output file.","code":""},{"path":"/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"report — report","text":"","code":"report(   data,   output = \"results.txt\",   path,   overwrite = FALSE,   rownames.kept = FALSE,   vector.cat = FALSE,   noquote = TRUE,   sep = 2,   safer_check = TRUE )"},{"path":"/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"report — report","text":"data Object print output file. NULL, nothing done, warning. output Single character string. Name output file. path Location output file. overwrite Single logical value. output file already exists, defines printing appended (default FALSE) output file content erased printing (TRUE). rownames.kept Single logical value. Defines whether row names removed 2D objects. Warning: 1D tables, names values taken row names, thus removed rownames.kept FALSE. vector.cat Single logical value. TRUE print vector length > 1 using cat() instead capture.output(). Otherwise (default FALSE) opposite. Names values printed TRUE noquote Single logical value. TRUE quote present characters. sep Single non null positive integer representing number empty lines printed data. safer_check Single logical value. Perform \"safer\" checks (see https://github.com/safer-r)? TRUE, checkings performed main code running: 1) R classical operators (like \"<-\") overwritten another package R scope 2) required functions related packages effectively present local R lybraries. Must set FALSE fonction used inside another \"safer\" function avoid pointless multiple checkings.","code":""},{"path":"/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"report — report","text":"Nothing.","code":""},{"path":[]},{"path":"/reference/report.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"report — report","text":"Gael Millot <gael.millot@pasteur.fr> Yushi Han <yushi.han2000@gmail.com> Haiding Wang <wanghaiding442@gmail.com>","code":""},{"path":"/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"report — report","text":"","code":"#report() report(data = 1:3, output = \"results.txt\", path = \".\", overwrite = TRUE,  rownames.kept = FALSE, vector.cat = FALSE, noquote = FALSE, sep = 2)"}]
